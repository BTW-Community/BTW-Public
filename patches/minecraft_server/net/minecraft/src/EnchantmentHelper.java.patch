--- a/minecraft_server/net/minecraft/src/EnchantmentHelper.java
+++ b/minecraft_server/net/minecraft/src/EnchantmentHelper.java
@@ -254,17 +254,51 @@
      */
     public static int getFortuneModifier(EntityLiving par0EntityLiving)
     {
+    	// FCMOD: Code change
+    	/*
         return getEnchantmentLevel(Enchantment.fortune.effectId, par0EntityLiving.getHeldItem());
+        */
+    	int iEnchantmentLevel = getEnchantmentLevel(Enchantment.fortune.effectId, par0EntityLiving.getHeldItem());
+    	
+    	if ( par0EntityLiving.isPotionActive(FCBetterThanWolves.potionFortune ) )
+    	{
+        	int iPotionLevel = par0EntityLiving.getActivePotionEffect( FCBetterThanWolves.potionFortune ).getAmplifier() + 1;
+        	
+        	if ( iPotionLevel > iEnchantmentLevel )
+        	{
+        		iEnchantmentLevel = iPotionLevel;
     }
+    	}
 
+    	return iEnchantmentLevel;
+    	// END FCMOD
+    }
+
     /**
      * Returns the looting enchantment modifier of the current equipped item of player.
      */
     public static int getLootingModifier(EntityLiving par0EntityLiving)
     {
+    	// FCMOD: Code change
+    	/*
         return getEnchantmentLevel(Enchantment.looting.effectId, par0EntityLiving.getHeldItem());
+        */
+    	int iEnchantmentLevel = getEnchantmentLevel(Enchantment.looting.effectId, par0EntityLiving.getHeldItem());
+    	
+    	if ( par0EntityLiving.isPotionActive(FCBetterThanWolves.potionLooting ) )
+    	{
+        	int iPotionLevel = par0EntityLiving.getActivePotionEffect( FCBetterThanWolves.potionLooting ).getAmplifier() + 1;
+        	
+        	if ( iPotionLevel > iEnchantmentLevel )
+        	{
+        		iEnchantmentLevel = iPotionLevel;
     }
+    	}
 
+    	return iEnchantmentLevel;
+    	// END FCMOD
+    }
+
     /**
      * Returns the aqua affinity status of enchantments on current equipped item of player.
      */
@@ -300,6 +334,8 @@
      * Returns the enchantability of itemstack, it's uses a singular formula for each index (2nd parameter: 0, 1 and 2),
      * cutting to the max enchantability power of the table (3rd parameter)
      */
+    // FCMOD: Code removed and replaced later
+    /*
     public static int calcItemStackEnchantability(Random par0Random, int par1, int par2, ItemStack par3ItemStack)
     {
         Item var4 = par3ItemStack.getItem();
@@ -320,6 +356,8 @@
             return par1 == 0 ? Math.max(var6 / 3, 1) : (par1 == 1 ? var6 * 2 / 3 + 1 : Math.max(var6, par2 * 2));
         }
     }
+    */
+    // END FCMOD
 
     /**
      * Adds a random enchantment to the specified item. Args: random, itemStack, enchantabilityLevel
@@ -456,8 +494,18 @@
         {
             Enchantment var8 = var5[var7];
 
-            if (var8 != null && (var8.type.canEnchantItem(var2) || var4))
+        	// FCMOD: Changed
+            //if (var8 != null && (var8.type.canEnchantItem(var2) || var4))
+            if ( var8 != null && (var2.IsEnchantmentApplicable( var8 ) || var4))
+        	// END FCMOD
             {
+            	// FCMOD: Added to prevent certain enchants from vanilla enchanter
+            	if ( !var8.CanBeAppliedByVanillaEnchanter() )
+            	{
+            		continue;
+            	}
+            	// END FCMOD
+            	
                 for (int var9 = var8.getMinLevel(); var9 <= var8.getMaxLevel(); ++var9)
                 {
                     if (par0 >= var8.getMinEnchantability(var9) && par0 <= var8.getMaxEnchantability(var9))
@@ -475,4 +523,56 @@
 
         return var3;
     }
+    
+    // FCMOD: Code added
+    public static int calcItemStackEnchantability( Random rand, int iTableSlotNum, int iNumBookShelves, ItemStack stack )
+    {
+    	// Replace vanilla code to double amount of bookshelves required, cap enchant level at 15, and make enchant with no shelves be level 1
+    	
+        Item item = stack.getItem();
+        int iItemEnchantability = item.getItemEnchantability();
+
+        if (iItemEnchantability <= 0)
+        {
+            return 0;
 }
+        else
+        {
+            int iEnchantmentLevel = 1;
+            
+            if ( iTableSlotNum != 0 )
+            {
+                int iMaxEnchantmentLevel = iNumBookShelves >> 1;
+                    
+                if ( iMaxEnchantmentLevel <= 0 )
+                {
+                	iMaxEnchantmentLevel = 1;
+                }
+                else if ( iMaxEnchantmentLevel > 15 )
+                {
+                	iMaxEnchantmentLevel = 15;
+                }
+                	
+            	if ( iTableSlotNum == 1 )
+            	{
+            		if ( iMaxEnchantmentLevel > 1 )
+            		{
+                		iEnchantmentLevel = 2;
+                		
+                		if ( iMaxEnchantmentLevel > 3 )
+                		{
+                			iEnchantmentLevel += rand.nextInt( iMaxEnchantmentLevel - 2 );
+                		}
+            		}
+            	}
+            	else
+            	{
+            		iEnchantmentLevel = iMaxEnchantmentLevel;
+            	}
+            }
+            
+            return iEnchantmentLevel;
+        }
+    }
+    // END FCMOD
+}
