--- /dev/null
+++ b/minecraft_server/net/minecraft/src/FCBlockClay.java
@@ -0,0 +1,88 @@
+// FCMOD
+
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class FCBlockClay extends Block
+{
+    public FCBlockClay( int iBlockID )
+    {
+        super( iBlockID, FCBetterThanWolves.fcMaterialNaturalClay );
+        
+        SetShovelsEffectiveOn();
+        
+        setStepSound( FCBetterThanWolves.fcStepSoundSquish );
+        
+        setCreativeTab( CreativeTabs.tabBlock ); // weirdness due to use of item as legacy clay
+    }
+
+    @Override
+    public int idDropped( int iMetaData, Random rand, int iFortuneModifier )
+    {
+        return Item.clay.itemID;
+    }
+
+	@Override
+    public void dropBlockAsItemWithChance( World world, int i, int j, int k, int iMetaData, float fChance, int iFortuneModifier )
+    {
+        super.dropBlockAsItemWithChance(world, i, j, k, iMetaData, fChance, iFortuneModifier );
+        
+        if ( !world.isRemote )
+        {
+    		DropItemsIndividualy( world, i, j, k, FCBetterThanWolves.fcItemPileDirt.itemID, 6, 0, fChance );
+        }
+    }
+
+	@Override
+	public boolean DropComponentItemsOnBadBreak( World world, int i, int j, int k, int iMetadata, float fChance )
+	{
+		DropItemsIndividualy( world, i, j, k, FCBetterThanWolves.fcItemPileClay.itemID, 1, 0, fChance );
+		
+		DropItemsIndividualy( world, i, j, k, FCBetterThanWolves.fcItemPileDirt.itemID, 4, 0, fChance );
+		
+		return true;
+	}
+	
+	@Override
+    protected boolean canSilkHarvest()
+    {
+        return true;
+    }
+	
+	@Override
+	public int quantityDroppedWithBonus(int par1, Random par2Random)
+    {
+        if (par1 > 0 && this.blockID != this.idDropped(0, par2Random, par1))
+        {
+            int var3 = par2Random.nextInt(par1 + 2) - 1;
+
+            if (var3 < 0)
+            {
+                var3 = 0;
+            }
+
+            return this.quantityDropped(par2Random) * (var3 + 1);
+        }
+        else
+        {
+            return this.quantityDropped(par2Random);
+        }
+    }
+	
+	@Override
+	public boolean CanTransmitRotationVerticallyOnTurntable( IBlockAccess blockAccess, int i, int j, int k )
+	{
+		return false;
+	}
+	
+	@Override
+    public boolean CanBePistonShoveled( World world, int i, int j, int k )
+    {
+    	return true;
+    }
+	
+    //------------- Class Specific Methods ------------//    
+	
+	//----------- Client Side Functionality -----------//
+}
