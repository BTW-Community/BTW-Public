--- a/minecraft_server/net/minecraft/src/ChunkProviderGenerate.java
+++ b/minecraft_server/net/minecraft/src/ChunkProviderGenerate.java
@@ -80,6 +80,9 @@
         this.worldObj = par1World;
         this.mapFeaturesEnabled = par4;
         this.rand = new Random(par2);
+        // FCMOD: Added
+        m_structureRand = new Random(par2);
+        // END FCMOD
         this.noiseGen1 = new NoiseGeneratorOctaves(this.rand, 16);
         this.noiseGen2 = new NoiseGeneratorOctaves(this.rand, 16);
         this.noiseGen3 = new NoiseGeneratorOctaves(this.rand, 8);
@@ -370,48 +373,48 @@
                 var17 /= var18;
                 var16 = var16 * 0.9F + 0.1F;
                 var17 = (var17 * 4.0F - 1.0F) / 8.0F;
-                double var46 = this.noise6[var13] / 8000.0D;
+                double var47 = this.noise6[var13] / 8000.0D;
 
-                if (var46 < 0.0D)
+                if (var47 < 0.0D)
                 {
-                    var46 = -var46 * 0.3D;
+                    var47 = -var47 * 0.3D;
                 }
 
-                var46 = var46 * 3.0D - 2.0D;
+                var47 = var47 * 3.0D - 2.0D;
 
-                if (var46 < 0.0D)
+                if (var47 < 0.0D)
                 {
-                    var46 /= 2.0D;
+                    var47 /= 2.0D;
 
-                    if (var46 < -1.0D)
+                    if (var47 < -1.0D)
                     {
-                        var46 = -1.0D;
+                        var47 = -1.0D;
                     }
 
-                    var46 /= 1.4D;
-                    var46 /= 2.0D;
+                    var47 /= 1.4D;
+                    var47 /= 2.0D;
                 }
                 else
                 {
-                    if (var46 > 1.0D)
+                    if (var47 > 1.0D)
                     {
-                        var46 = 1.0D;
+                        var47 = 1.0D;
                     }
 
-                    var46 /= 8.0D;
+                    var47 /= 8.0D;
                 }
 
                 ++var13;
 
-                for (int var47 = 0; var47 < par6; ++var47)
+                for (int var46 = 0; var46 < par6; ++var46)
                 {
                     double var48 = (double)var17;
                     double var26 = (double)var16;
-                    var48 += var46 * 0.2D;
+                    var48 += var47 * 0.2D;
                     var48 = var48 * (double)par6 / 16.0D;
                     double var28 = (double)par6 / 2.0D + var48 * 4.0D;
                     double var30 = 0.0D;
-                    double var32 = ((double)var47 - var28) * 12.0D * 128.0D / 128.0D / var26;
+                    double var32 = ((double)var46 - var28) * 12.0D * 128.0D / 128.0D / var26;
 
                     if (var32 < 0.0D)
                     {
@@ -437,9 +440,9 @@
 
                     var30 -= var32;
 
-                    if (var47 > par6 - 4)
+                    if (var46 > par6 - 4)
                     {
-                        double var40 = (double)((float)(var47 - (par6 - 4)) / 3.0F);
+                        double var40 = (double)((float)(var46 - (par6 - 4)) / 3.0F);
                         var30 = var30 * (1.0D - var40) + -10.0D * var40;
                     }
 
@@ -472,15 +475,40 @@
         this.rand.setSeed(this.worldObj.getSeed());
         long var7 = this.rand.nextLong() / 2L * 2L + 1L;
         long var9 = this.rand.nextLong() / 2L * 2L + 1L;
+        
+        // FCMOD: Added so that future changes to structure generation will not
+        // impact the other aspects of chunk population
+        long lStructureSeedX = rand.nextLong() / 2L * 2L + 1L;
+        long lStructureSeedZ = rand.nextLong() / 2L * 2L + 1L;        
+        // END FCMOD
+        
         this.rand.setSeed((long)par2 * var7 + (long)par3 * var9 ^ this.worldObj.getSeed());
         boolean var11 = false;
 
         if (this.mapFeaturesEnabled)
         {
+        	// FCNOTE: The structure seed is intentionally not applied to mineshafts given
+        	// how frequent they are, so as not to mess too much with other details throughout the 
+        	// world
             this.mineshaftGenerator.generateStructuresInChunk(this.worldObj, this.rand, par2, par3);
+        	// FCMOD: Changed  
+            /*
             var11 = this.villageGenerator.generateStructuresInChunk(this.worldObj, this.rand, par2, par3);
             this.strongholdGenerator.generateStructuresInChunk(this.worldObj, this.rand, par2, par3);
             this.scatteredFeatureGenerator.generateStructuresInChunk(this.worldObj, this.rand, par2, par3);
+             */
+            m_structureRand.setSeed((long)par2 * lStructureSeedX + 
+            	(long)par3 * lStructureSeedZ ^ this.worldObj.getSeed());
+            
+            var11 = villageGenerator.generateStructuresInChunk( worldObj, 
+            	m_structureRand, par2, par3 );
+            
+            strongholdGenerator.generateStructuresInChunk( worldObj, 
+            	m_structureRand, par2, par3 );
+            
+            scatteredFeatureGenerator.generateStructuresInChunk( worldObj, 
+            	m_structureRand, par2, par3 );
+            // END FCMOD
         }
 
         int var12;
@@ -539,10 +567,18 @@
                 {
                     this.worldObj.setBlock(var12 + var4, var14, var13 + var5, Block.snow.blockID, 0, 2);
                 }
+                else if (this.worldObj.canSnowAt(var12 + var4, var14 + 1, var13 + var5))
+                {
+                    this.worldObj.setBlock(var12 + var4, var14 + 1, var13 + var5, Block.snow.blockID, 0, 2);
             }
         }
+        }
 
         BlockSand.fallInstantly = false;
+
+        // FCMOD: Added
+        BTWPostProcessChunk( worldObj, var4 - 8, var5 - 8 ); // -8 because of += 8 offset applied above
+        // END FCMOD
     }
 
     /**
@@ -612,4 +648,67 @@
             this.scatteredFeatureGenerator.generate(this, this.worldObj, par1, par2, (byte[])null);
         }
     }
+    
+    // FCMOD: Added New    
+    private Random m_structureRand;
+    
+    private void BTWPostProcessChunk( World worldObj, int iChunkX, int iChunkZ )
+    {
+    	if ( worldObj.provider.dimensionId == 0 )
+    	{
+    		GenerateStrata( worldObj, iChunkX, iChunkZ );
+    		GenerateAdditionalBrownMushrooms( worldObj, iChunkX, iChunkZ );
 }
+    }    
+    
+    private void GenerateAdditionalBrownMushrooms( World worldObj, int iChunkX, int iChunkZ )
+    {
+        if ( worldObj.rand.nextInt( 4 ) == 0 )
+        {
+        	WorldGenerator mushroomBrownGen = new WorldGenFlowers( Block.mushroomBrown.blockID );    	
+        	
+            int iMushroomX = iChunkX + worldObj.rand.nextInt( 16 ) + 8;
+            int iMushroomY = worldObj.rand.nextInt( 25 );
+            int iMushroomZ = iChunkZ + worldObj.rand.nextInt( 16 ) + 8;
+            
+            mushroomBrownGen.generate( worldObj, worldObj.rand, iMushroomX, iMushroomY, iMushroomZ );
+        }
+    }
+    
+    private void GenerateStrata( World world, int iChunkX, int iChunkZ )
+    {
+        Chunk chunk = world.getChunkFromChunkCoords( iChunkX >> 4, iChunkZ >> 4);
+        
+        for ( int iTempI = 0; iTempI < 16; iTempI++ )
+        {
+        	for ( int iTempK = 0; iTempK < 16; iTempK++ )
+        	{
+        		int iTempJ = 0;
+        		int iStrataHeight = 24 + world.rand.nextInt( 2 );
+        		
+        		for( ; iTempJ <= iStrataHeight; iTempJ++ )
+        		{
+        			int iTempBlockID = chunk.getBlockID( iTempI, iTempJ, iTempK );
+        			
+        			if ( iTempBlockID == Block.stone.blockID )
+        			{
+        				chunk.setBlockMetadata( iTempI, iTempJ, iTempK, 2 );
+        			}
+        		}
+        		
+        		iStrataHeight = 48  + world.rand.nextInt( 2 );
+        		
+        		for( ; iTempJ <= iStrataHeight; iTempJ++ )
+        		{
+        			int iTempBlockID = chunk.getBlockID( iTempI, iTempJ, iTempK );
+        			
+        			if ( iTempBlockID == Block.stone.blockID )
+        			{
+        				chunk.setBlockMetadata( iTempI, iTempJ, iTempK, 1 );
+        			}
+        		}        		
+        	}
+        }
+    }
+    // END FCMOD
+}
