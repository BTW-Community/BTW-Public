--- a/minecraft_server/net/minecraft/src/BlockFluid.java
+++ b/minecraft_server/net/minecraft/src/BlockFluid.java
@@ -9,7 +9,10 @@
         super(par1, par2Material);
         float var3 = 0.0F;
         float var4 = 0.0F;
-        this.setBlockBounds(0.0F + var4, 0.0F + var3, 0.0F + var4, 1.0F + var4, 1.0F + var3, 1.0F + var4);
+        // FCMOD: Changed
+        //this.setBlockBounds(0.0F + var4, 0.0F + var3, 0.0F + var4, 1.0F + var4, 1.0F + var3, 1.0F + var4);
+        InitBlockBounds(0.0F + var4, 0.0F + var3, 0.0F + var4, 1.0F + var4, 1.0F + var3, 1.0F + var4);
+        // END FCMOD
         this.setTickRandomly(true);
     }
 
@@ -134,6 +137,8 @@
     /**
      * Returns a vector indicating the direction and intensity of fluid flow.
      */
+    // FCMOD: Code removed and replaced later
+    /*
     private Vec3 getFlowVector(IBlockAccess par1IBlockAccess, int par2, int par3, int par4)
     {
         Vec3 var5 = par1IBlockAccess.getWorldVec3Pool().getVecFromPool(0.0D, 0.0D, 0.0D);
@@ -240,6 +245,8 @@
         var5 = var5.normalize();
         return var5;
     }
+    */
+    // END FCMOD
 
     /**
      * Can add to the passed in vector for a movement vector to be applied to the entity. Args: x, y, z, entity, vec3d
@@ -323,7 +330,11 @@
                     }
                     else if (var6 <= 4)
                     {
-                        par1World.setBlock(par2, par3, par4, Block.cobblestone.blockID);
+                    	// FCMOD: Changed
+                        //par1World.setBlock(par2, par3, par4, Block.cobblestone.blockID);
+                        par1World.setBlock( par2, par3, par4, 
+                        	FCBetterThanWolves.fcBlockLavaPillow.blockID );
+                        // END FCMOD
                     }
 
                     this.triggerLavaMixEffects(par1World, par2, par3, par4);
@@ -344,4 +355,81 @@
             par1World.spawnParticle("largesmoke", (double)par2 + Math.random(), (double)par3 + 1.2D, (double)par4 + Math.random(), 0.0D, 0.0D, 0.0D);
         }
     }
+    
+    // FCMOD: Added New
+    @Override
+    public boolean GetCanBlockBeIncinerated( World world, int i, int j, int k )
+    {
+    	return false;
 }
+    
+    @Override
+    public ItemStack GetStackRetrievedByBlockDispenser( World world, int i, int j, int k )
+    {	 
+    	return null; // can't be picked up
+    }
+    
+    //------------- Class Specific Methods ------------//
+    
+    private Vec3 AddFlowVectorAtTarget( IBlockAccess iBlockAccess, int i, int j, int k, int iFlowDecay, int iTempI, int iTempK, Vec3 flowVec )
+    {
+        int iTempDecay = getEffectiveFlowDecay( iBlockAccess, iTempI, j, iTempK );
+
+        if ( iTempDecay < 0 )
+        {
+            if (!iBlockAccess.getBlockMaterial(iTempI, j, iTempK).blocksMovement())
+            {
+                iTempDecay = this.getEffectiveFlowDecay(iBlockAccess, iTempI, j - 1, iTempK);
+
+                if (iTempDecay >= 0)
+                {
+                    int iDeltaDecay = iTempDecay - (iFlowDecay - 8);
+                    return flowVec.addVector((double)((iTempI - i) * iDeltaDecay), 0D, (double)((iTempK - k) * iDeltaDecay));
+                }
+            }
+        }
+        else if (iTempDecay >= 0)
+        {
+            int iDeltaDecay = iTempDecay - iFlowDecay;
+            return flowVec.addVector((double)((iTempI - i) * iDeltaDecay), 0D, (double)((iTempK - k) * iDeltaDecay));
+        }
+        
+        return flowVec;
+    }
+    
+    private Vec3 getFlowVector( IBlockAccess iBlockAccess, int i, int j, int k )
+    {
+    	// optomized vanilla function
+    	
+        Vec3 flowVec = iBlockAccess.getWorldVec3Pool().getVecFromPool(0.0D, 0.0D, 0.0D);
+        
+        int iFlowDecay = getEffectiveFlowDecay( iBlockAccess, i, j, k );
+
+        flowVec = AddFlowVectorAtTarget( iBlockAccess, i, j, k, iFlowDecay, i - 1, k, flowVec );
+        flowVec = AddFlowVectorAtTarget( iBlockAccess, i, j, k, iFlowDecay, i, k - 1, flowVec );
+        flowVec = AddFlowVectorAtTarget( iBlockAccess, i, j, k, iFlowDecay, i + 1, k, flowVec );
+        flowVec = AddFlowVectorAtTarget( iBlockAccess, i, j, k, iFlowDecay, i, k + 1, flowVec );
+                
+        if (iBlockAccess.getBlockMetadata(i, j, k) >= 8)
+        {
+            if ( this.isBlockSolid(iBlockAccess, i, j, k - 1, 2)
+            || this.isBlockSolid(iBlockAccess, i, j, k + 1, 3)
+            || this.isBlockSolid(iBlockAccess, i - 1, j, k, 4)
+            || this.isBlockSolid(iBlockAccess, i + 1, j, k, 5)
+            || this.isBlockSolid(iBlockAccess, i, j + 1, k - 1, 2)
+            || this.isBlockSolid(iBlockAccess, i, j + 1, k + 1, 3)
+            || this.isBlockSolid(iBlockAccess, i - 1, j + 1, k, 4)
+            || this.isBlockSolid(iBlockAccess, i + 1, j + 1, k, 5) )
+            {
+                flowVec = flowVec.normalize().addVector(0.0D, -6.0D, 0.0D);
+            }
+        }
+
+        flowVec = flowVec.normalize();
+        
+        return flowVec;
+    }
+    
+	//----------- Client Side Functionality -----------//
+    // END FCMOD    
+}
