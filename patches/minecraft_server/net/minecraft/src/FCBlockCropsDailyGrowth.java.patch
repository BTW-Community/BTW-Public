--- /dev/null
+++ b/minecraft_server/net/minecraft/src/FCBlockCropsDailyGrowth.java
@@ -0,0 +1,103 @@
+// FCMOD
+
+package net.minecraft.src;
+
+import java.util.Random;
+
+public abstract class FCBlockCropsDailyGrowth extends FCBlockCrops
+{
+    protected  FCBlockCropsDailyGrowth( int iBlockID )
+    {
+        super( iBlockID );
+    }
+    
+    @Override
+    public float GetBaseGrowthChance( World world, int i, int j, int k )
+    {
+    	return 0.4F;
+    }
+    
+    @Override
+    protected void AttemptToGrow(World world, int x, int y, int z, Random rand) {
+        int timeOfDay = (int)(world.worldInfo.getWorldTime() % 24000L);
+
+        if (timeOfDay > 14000 && timeOfDay < 22000) {
+        	// night
+        	if (GetHasGrownToday(world, x, y, z)) {
+        		SetHasGrownToday(world, x, y, z, false);
+        	}
+        }
+        else {
+	    	if (!GetHasGrownToday(world, x, y, z) && GetWeedsGrowthLevel(world, x, y, z) == 0 && canGrowAtCurrentLightLevel(world, x, y, z)) {
+		        Block blockBelow = Block.blocksList[world.getBlockId(x, y - 1, z)];
+
+		        if (blockBelow != null && blockBelow.IsBlockHydratedForPlantGrowthOn(world, x, y - 1, z)) {
+		    		float growthChance = GetBaseGrowthChance(world, x, y, z);
+
+			    	if (blockBelow.GetIsFertilizedForPlantGrowth(world, x, y - 1, z)) {
+			    		growthChance *= 2F;
+			    	}
+
+		            if (rand.nextFloat() <= growthChance) {
+		            	IncrementGrowthLevel(world, x, y, z);
+		            	UpdateFlagForGrownToday(world, x, y, z);
+		            }
+		        }
+		    }
+        }
+    }
+    
+    //------------- Class Specific Methods ------------//
+    
+	protected void UpdateFlagForGrownToday( World world, int i, int j, int k )
+	{
+    	// fertilized crops can grow twice in a day
+		
+        Block blockBelow = Block.blocksList[world.getBlockId( i, j - 1, k )];
+        
+        if ( blockBelow != null )
+        {
+	    	if ( !blockBelow.GetIsFertilizedForPlantGrowth( world, i, j - 1, k ) ||
+	    		GetGrowthLevel( world, i, j, k ) % 2 == 0 )
+	    	{
+	    		SetHasGrownToday( world, i, j, k, true );
+	    	}
+        }
+	}
+	
+    protected boolean GetHasGrownToday( IBlockAccess blockAccess, int i, int j, int k )
+    {
+    	return GetHasGrownToday( blockAccess.getBlockMetadata( i, j, k ) );
+    }
+    
+    protected boolean GetHasGrownToday( int iMetadata )
+    {
+    	return ( iMetadata & 8 ) != 0;
+    }
+    
+    protected void SetHasGrownToday( World world, int i, int j, int k, boolean bHasGrown )
+    {
+    	int iMetadata = SetHasGrownToday( world.getBlockMetadata( i, j, k ), bHasGrown );
+    	
+    	// intentionally no notify as this does not affect the visual state and should
+    	// not trigger Buddy
+    	
+    	world.setBlockMetadata( i, j, k, iMetadata );
+    }
+    
+    protected int SetHasGrownToday( int iMetadata, boolean bHasGrown )
+    {
+    	if ( bHasGrown )
+    	{
+    		iMetadata |= 8;
+    	}
+    	else
+    	{
+    		iMetadata &= (~8);
+    	}
+    	
+    	return iMetadata;
+    }
+    
+	//----------- Client Side Functionality -----------//
+}
