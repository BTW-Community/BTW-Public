--- /dev/null
+++ b/minecraft_server/net/minecraft/src/FCCraftingManagerTurntable.java
@@ -0,0 +1,53 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+
+public class FCCraftingManagerTurntable {
+	public static FCCraftingManagerTurntable instance = new FCCraftingManagerTurntable();
+	
+	private ArrayList<FCCraftingManagerTurntableRecipe> recipes = new ArrayList();
+	
+	private FCCraftingManagerTurntable() {}
+	
+	public FCCraftingManagerTurntableRecipe addRecipe(Block output, int outputMetadata, ItemStack[] itemsEjected, Block block, int[] metadatas, int rotationsToCraft) {
+		FCCraftingManagerTurntableRecipe recipe = 
+				new FCCraftingManagerTurntableRecipe(output, outputMetadata, itemsEjected, block, metadatas, rotationsToCraft);
+		
+		recipes.add(recipe);
+		return recipe;
+	}
+	
+	public boolean removeRecipe(Block output, int outputMetadata, ItemStack[] itemsEjected, Block block, int[] metadatas) {
+		FCCraftingManagerTurntableRecipe recipeToRemove = 
+				new FCCraftingManagerTurntableRecipe(output, outputMetadata, itemsEjected, block, metadatas, 0);
+		
+		for (FCCraftingManagerTurntableRecipe recipe : recipes) {
+			if (recipe.matchesRecipe(recipeToRemove)) {
+				recipes.remove(recipe);
+				return true;
+			}
+		}
+		
+		return false;
+	}
+	
+	public FCCraftingManagerTurntableRecipe getRecipe(Block block, int metadata) {
+		for (FCCraftingManagerTurntableRecipe recipe : recipes) {
+			if (recipe.matchesInputs(block, metadata)) {
+				return recipe;
+			}
+		}
+		
+		return null;
+	}
+	
+	public ItemStack[] getRecipeResult(Block block, int metadata) {
+		for (FCCraftingManagerTurntableRecipe recipe : recipes) {
+			if (recipe.matchesInputs(block, metadata)) {
+				return recipe.getItemsEjected();
+			}
+		}
+		
+		return null;
+	}
+}
\ No newline at end of file
