--- a/minecraft_server/net/minecraft/src/SlotCrafting.java
+++ b/minecraft_server/net/minecraft/src/SlotCrafting.java
@@ -8,6 +8,8 @@
     /** The player that is using the GUI where this slot resides. */
     private EntityPlayer thePlayer;
 
+    private IRecipe currentRecipe = null; 
+
     /**
      * The number of items that have been crafted so far. Gets passed to ItemStack.onCrafting before being reset.
      */
@@ -102,20 +104,58 @@
         }
     }
 
-    public void onPickupFromSlot(EntityPlayer par1EntityPlayer, ItemStack par2ItemStack)
+    public void onPickupFromSlot(EntityPlayer player, ItemStack par2ItemStack)
     {
         this.onCrafting(par2ItemStack);
 
+        if (!player.worldObj.isRemote && currentRecipe.getSecondaryOutput(this.craftMatrix) != null) {
+        	for (ItemStack stack : currentRecipe.getSecondaryOutput(this.craftMatrix)) {
+        		FCUtilsItem.EjectStackWithRandomVelocity(player.worldObj, player.posX, player.posY, player.posZ, stack.copy());
+        	}
+        }
+        
         for (int var3 = 0; var3 < this.craftMatrix.getSizeInventory(); ++var3)
         {
             ItemStack var4 = this.craftMatrix.getStackInSlot(var3);
 
             if (var4 != null)
             {
+            	// FCMOD: Added
+            	var4.getItem().OnUsedInCrafting(var4.getItemDamage(), player, par2ItemStack);
+            	
+            	if ( !var4.getItem().IsConsumedInCrafting() )
+            	{
+            		continue;
+            	}
+            	else if ( var4.getItem().IsDamagedInCrafting() )
+            	{
+            		if ( var4.getItemDamage() >= var4.getMaxDamage() - 1 )
+            		{
+            			var4.getItem().OnBrokenInCrafting( player );
+            			
+                        craftMatrix.decrStackSize(var3, 1);
+            		}
+            		else
+            		{
+            			var4.getItem().OnDamagedInCrafting( player );
+            			
+            			var4.damageItem( 1, player );
+            		}
+
+            		continue;
+            	}            	
+        		// END FCMOD
                 this.craftMatrix.decrStackSize(var3, 1);
 
                 if (var4.getItem().hasContainerItem())
                 {
+                    // FCMOD: Code added
+                    if ( par2ItemStack.getItem().DoesConsumeContainerItemWhenCrafted( var4.getItem().getContainerItem() ) )
+                    {
+                    	continue;
+                    }
+                    // END FCMOD
+
                     ItemStack var5 = new ItemStack(var4.getItem().getContainerItem());
 
                     if (!var4.getItem().doesContainerItemLeaveCraftingGrid(var4) || !this.thePlayer.inventory.addItemStackToInventory(var5))
@@ -132,5 +172,13 @@
                 }
             }
         }
+        
+        // FCMOD: Code added
+        player.m_iTimesCraftedThisTick++;
+        // END FCMOD
     }
+    
+    public void setRecipe(IRecipe recipe) {
+    	this.currentRecipe = recipe;
 }
+}
\ No newline at end of file
