--- /dev/null
+++ b/minecraft_server/net/minecraft/src/FCCraftingManagerKiln.java
@@ -0,0 +1,53 @@
+package net.minecraft.src;
+
+import java.util.ArrayList;
+
+public class FCCraftingManagerKiln {
+	public static FCCraftingManagerKiln instance = new FCCraftingManagerKiln();
+	
+	private ArrayList<FCCraftingManagerKilnRecipe> recipes = new ArrayList();
+	
+	private FCCraftingManagerKiln() {}
+	
+	public void addRecipe(ItemStack[] output, Block block, int[] metadatas, byte cookTimeMultiplier) {
+		FCCraftingManagerKilnRecipe recipe = new FCCraftingManagerKilnRecipe(output, block, metadatas, cookTimeMultiplier);
+		
+		recipes.add(recipe);
+		
+		Block.hasKilnRecipe[block.blockID] = true;
+	}
+	
+	public boolean removeRecipe(ItemStack[] output, Block block, int[] metadatas, byte cookTimeMultiplier) {
+		FCCraftingManagerKilnRecipe recipeToRemove = new FCCraftingManagerKilnRecipe(output, block, metadatas, cookTimeMultiplier);
+		
+		for (FCCraftingManagerKilnRecipe recipe : recipes) {
+			if (recipe.matchesRecipe(recipeToRemove)) {
+				recipes.remove(recipe);
+				Block.hasKilnRecipe[block.blockID] = false;
+				return true;
+			}
+		}
+		
+		return false;
+	}
+	
+	public FCCraftingManagerKilnRecipe getRecipe(Block block, int metadata) {
+		for (FCCraftingManagerKilnRecipe recipe : recipes) {
+			if (recipe.matchesInputs(block, metadata)) {
+				return recipe;
+			}
+		}
+		
+		return null;
+	}
+	
+	public ItemStack[] getRecipeResult(Block block, int metadata) {
+		for (FCCraftingManagerKilnRecipe recipe : recipes) {
+			if (recipe.matchesInputs(block, metadata)) {
+				return recipe.getOutput();
+			}
+		}
+		
+		return null;
+	}
+}
\ No newline at end of file
