--- a/minecraft/net/minecraft/src/RenderCow.java
+++ b/minecraft/net/minecraft/src/RenderCow.java
@@ -1,10 +1,18 @@
 package net.minecraft.src;
 
+import org.lwjgl.opengl.GL11;
+import org.lwjgl.opengl.GL12;
+
 public class RenderCow extends RenderLiving
 {
     public RenderCow(ModelBase par1ModelBase, float par2)
     {
         super(par1ModelBase, par2);
+        // FCMOD: Added (client only)        
+        m_ModelUdder = new FCClientModelCowUdder();
+        
+        setRenderPassModel(m_ModelUdder);
+        // END FCMOD
     }
 
     public void renderCow(EntityCow par1EntityCow, double par2, double par4, double par6, float par8, float par9)
@@ -26,5 +34,111 @@
     public void doRender(Entity par1Entity, double par2, double par4, double par6, float par8, float par9)
     {
         this.renderCow((EntityCow)par1Entity, par2, par4, par6, par8, par9);
+        // FCMOD: Added (client only)
+        //RenderKickAttackDebug( (FCEntityCow)par1Entity, par2, par4, par6, par8, par9 );
+        // END FCMOD
     }
+    
+    // FCMOD: Added (client only)
+    FCClientModelCowUdder m_ModelUdder;
+    
+    protected int shouldRenderPass(EntityLiving par1EntityLiving, int par2, float par3)
+    {
+    	if ( par2 == 0 && ((FCEntityCow)par1EntityLiving).GotMilk() )
+    	{
+    		loadTexture( "/btwmodtex/cow_udder.png" );
+    		
+    		return 1;
 }
+    	
+        return -1;
+    }
+    
+    public void RenderKickAttackDebug( FCEntityCow cow, double dRenderX, double dRenderY, double dRenderZ, float par8, float dPartialTick)
+    {
+    		
+		Vec3 worldTipPos = cow.ComputeKickAttackCenter();
+		
+		double dLocalSourcePosX = dRenderX;
+		double dLocalSourcePosY = dRenderY + ( cow.height / 2F );
+		double dLocalSourcePosZ = dRenderZ;
+		
+		double dLocalTipPosX = ( worldTipPos.xCoord - cow.posX ) + dRenderX;
+		double dLocalTipPosY = ( worldTipPos.yCoord - cow.posY ) + dRenderY;
+		double dLocalTipPosZ = ( worldTipPos.zCoord - cow.posZ ) + dRenderZ;
+		
+        Tessellator tesslator = Tessellator.instance;
+        
+        GL11.glDisable(GL11.GL_TEXTURE_2D);
+        GL11.glDisable(GL11.GL_LIGHTING);
+        
+        tesslator.startDrawing(3);
+        
+		if ( cow.m_iKickAttackInProgressCounter >= 0 )
+		{
+            tesslator.setColorOpaque_I( 0xFF0000 );
+		}
+		else
+		{
+            tesslator.setColorOpaque_I(0);
+		}
+
+        tesslator.addVertex( dLocalSourcePosX, dLocalSourcePosY, dLocalSourcePosZ );
+        tesslator.addVertex( dLocalTipPosX, dLocalTipPosY, dLocalTipPosZ );
+        
+        tesslator.draw();
+        
+        tesslator.startDrawing(3);
+        
+		if ( cow.m_iKickAttackInProgressCounter >= 0 )
+		{
+            tesslator.setColorOpaque_I( 0xFFFF00 );
+		}
+		else
+		{
+            tesslator.setColorOpaque_I( 0xFFFFFF );
+		}
+
+        tesslator.addVertex( dLocalTipPosX + cow.m_dKickAttackTipCollisionHalfWidth, dLocalTipPosY, dLocalTipPosZ );
+        tesslator.addVertex( dLocalTipPosX - cow.m_dKickAttackTipCollisionHalfWidth, dLocalTipPosY, dLocalTipPosZ );
+        
+        tesslator.draw();
+        
+        tesslator.startDrawing(3);
+        
+		if ( cow.m_iKickAttackInProgressCounter >= 0 )
+		{
+            tesslator.setColorOpaque_I( 0xFFFF00 );
+		}
+		else
+		{
+            tesslator.setColorOpaque_I( 0xFFFFFF );
+		}
+
+        tesslator.addVertex( dLocalTipPosX, dLocalTipPosY, dLocalTipPosZ + cow.m_dKickAttackTipCollisionHalfWidth );
+        tesslator.addVertex( dLocalTipPosX, dLocalTipPosY, dLocalTipPosZ - cow.m_dKickAttackTipCollisionHalfWidth );
+        
+        tesslator.draw();
+        
+        tesslator.startDrawing(3);
+        
+		if ( cow.m_iKickAttackInProgressCounter >= 0 )
+		{
+            tesslator.setColorOpaque_I( 0xFFFF00 );
+		}
+		else
+		{
+            tesslator.setColorOpaque_I( 0xFFFFFF );
+		}
+
+        tesslator.addVertex( dLocalTipPosX, dLocalTipPosY + cow.m_dKickAttackTipCollisionHalfHeight, dLocalTipPosZ );
+        tesslator.addVertex( dLocalTipPosX, dLocalTipPosY - cow.m_dKickAttackTipCollisionHalfHeight, dLocalTipPosZ );
+        
+        tesslator.draw();
+        
+        GL11.glEnable(GL11.GL_LIGHTING);
+        GL11.glEnable(GL11.GL_TEXTURE_2D);
+        
+    }
+    // END FCMOD
+}
