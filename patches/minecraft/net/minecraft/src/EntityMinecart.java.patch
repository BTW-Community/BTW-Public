--- a/minecraft/net/minecraft/src/EntityMinecart.java
+++ b/minecraft/net/minecraft/src/EntityMinecart.java
@@ -44,22 +44,22 @@
         switch (par7)
         {
             case 1:
-                return new EntityMinecartChest(par0World, par1, par3, par5);
+                return (EntityMinecart) EntityList.createEntityOfType(EntityMinecartChest.class, par0World, par1, par3, par5);
 
             case 2:
-                return new EntityMinecartFurnace(par0World, par1, par3, par5);
+                return (EntityMinecart) EntityList.createEntityOfType(EntityMinecartFurnace.class, par0World, par1, par3, par5);
 
             case 3:
-                return new EntityMinecartTNT(par0World, par1, par3, par5);
+                return (EntityMinecart) EntityList.createEntityOfType(EntityMinecartTNT.class, par0World, par1, par3, par5);
 
             case 4:
-                return new EntityMinecartMobSpawner(par0World, par1, par3, par5);
+                return (EntityMinecart) EntityList.createEntityOfType(EntityMinecartMobSpawner.class, par0World, par1, par3, par5);
 
             case 5:
-                return new EntityMinecartHopper(par0World, par1, par3, par5);
+                return (EntityMinecart) EntityList.createEntityOfType(EntityMinecartHopper.class, par0World, par1, par3, par5);
 
             default:
-                return new EntityMinecartEmpty(par0World, par1, par3, par5);
+                return (EntityMinecart) EntityList.createEntityOfType(EntityMinecartEmpty.class, par0World, par1, par3, par5);
         }
     }
 
@@ -685,11 +685,27 @@
         }
         else
         {
+            // FCMOD: Changed the following for less drag on non-ridden carts
+            /*
             this.motionX *= 0.9599999785423279D;
             this.motionY *= 0.0D;
             this.motionZ *= 0.9599999785423279D;
+            */
+            if ( FCBetterThanWolves.fcDisableMinecartChanges )
+            {
+                motionX *= 0.96D;
+                motionY *= 0.0D;
+                motionZ *= 0.96D;
         }
+            else
+            {
+                motionX *= 0.985D;
+                motionY *= 0.0D;
+                motionZ *= 0.985D;
     }
+            // END FCMOD
+        }
+    }
 
     public Vec3 func_70495_a(double par1, double par3, double par5, double par7)
     {
@@ -1133,4 +1149,40 @@
     {
         return this.entityName;
     }
+    
+    // FCMOD: Code added
+    @Override
+    public boolean CanCollideWithEntity( Entity entity )
+    {
+    	return !entity.IsItemEntity();
 }
+    // END FCMOD
+    
+    @Override
+	public boolean onBlockDispenserConsume(FCBlockBlockDispenser blockDispenser, FCTileEntityBlockDispenser tileEentityDispenser) {
+
+		int minecartType = getMinecartType();
+		// dismount any entities riding the minecart
+        if( riddenByEntity != null) {
+        	riddenByEntity.mountEntity( this );
+        }
+        
+		setDead();	        			
+		switch ( minecartType ) {            			
+			case 1: // chest cart
+				FCUtilsInventory.AddSingleItemToInventory( tileEentityDispenser, Item.minecartCrate.itemID, 0 );      				
+				break;
+				
+			case 2: // furnace	        					
+				FCUtilsInventory.AddSingleItemToInventory( tileEentityDispenser, Item.minecartPowered.itemID, 0 );	            				
+				break;
+				
+			default: // 0 = empty cart, and this also covers the new minecart types (tnt, hopper & mob-spawner)	            				
+				FCUtilsInventory.AddSingleItemToInventory( tileEentityDispenser, Item.minecartEmpty.itemID, 0 );	            				
+				break;	            				
+		}
+		
+        worldObj.playAuxSFX( 1001, (int)posX, (int)posY, (int)posZ, 0 ); // high pitch click	
+        return true;
+	}
+}
