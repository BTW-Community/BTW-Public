--- a/minecraft/net/minecraft/src/RenderLiving.java
+++ b/minecraft/net/minecraft/src/RenderLiving.java
@@ -1,5 +1,8 @@
 package net.minecraft.src;
 
+import com.prupe.mcpatcher.cit.CITUtils;
+import com.prupe.mcpatcher.mal.resource.FakeResourceLocation;
+import com.prupe.mcpatcher.mob.MobRandomizer;
 import java.util.Random;
 import net.minecraft.client.Minecraft;
 import org.lwjgl.opengl.GL11;
@@ -79,6 +82,12 @@
             float var10 = this.interpolateRotation(par1EntityLiving.prevRenderYawOffset, par1EntityLiving.renderYawOffset, par9);
             float var11 = this.interpolateRotation(par1EntityLiving.prevRotationYawHead, par1EntityLiving.rotationYawHead, par9);
             float var12 = par1EntityLiving.prevRotationPitch + (par1EntityLiving.rotationPitch - par1EntityLiving.prevRotationPitch) * par9;
+            // FCMOD: Added (client only)
+            if ( par1EntityLiving.HasHeadCrabbedSquid() )
+            {
+            	var12 = 0;
+            }
+            // END IF
             this.renderLivingAt(par1EntityLiving, par2, par4, par6);
             float var13 = this.handleRotationFloat(par1EntityLiving, par9);
             this.rotateCorpse(par1EntityLiving, var13, var10, par9);
@@ -103,8 +112,8 @@
             GL11.glEnable(GL11.GL_ALPHA_TEST);
             this.mainModel.setLivingAnimations(par1EntityLiving, var16, var15, par9);
             this.renderModel(par1EntityLiving, var16, var15, var13, var11 - var10, var12, var14);
-            int var18;
             float var19;
+            int var18;
             float var20;
             float var22;
 
@@ -123,8 +132,16 @@
                         this.renderPassModel.render(par1EntityLiving, var16, var15, var13, var11 - var10, var12, var14);
                     }
 
-                    if ((var18 & 15) == 15)
+                    if (CITUtils.setupArmorEnchantments(par1EntityLiving, var17))
                     {
+                        while (CITUtils.preRenderArmorEnchantment())
+                        {
+                            this.renderPassModel.render(par1EntityLiving, var16, var15, var13, var11 - var10, var12, var14);
+                            CITUtils.postRenderArmorEnchantment();
+                        }
+                    }
+                    else if ((var18 & 15) == 15)
+                    {
                         var19 = (float)par1EntityLiving.ticksExisted + par9;
                         this.loadTexture("%blur%/misc/glint.png");
                         GL11.glEnable(GL11.GL_BLEND);
@@ -200,16 +217,16 @@
                 {
                     var19 = (float)(var18 >> 16 & 255) / 255.0F;
                     var20 = (float)(var18 >> 8 & 255) / 255.0F;
-                    float var28 = (float)(var18 & 255) / 255.0F;
+                    float var29 = (float)(var18 & 255) / 255.0F;
                     var22 = (float)(var18 >> 24 & 255) / 255.0F;
-                    GL11.glColor4f(var19, var20, var28, var22);
+                    GL11.glColor4f(var19, var20, var29, var22);
                     this.mainModel.render(par1EntityLiving, var16, var15, var13, var11 - var10, var12, var14);
 
-                    for (int var29 = 0; var29 < 4; ++var29)
+                    for (int var28 = 0; var28 < 4; ++var28)
                     {
-                        if (this.inheritRenderPass(par1EntityLiving, var29, par9) >= 0)
+                        if (this.inheritRenderPass(par1EntityLiving, var28, par9) >= 0)
                         {
-                            GL11.glColor4f(var19, var20, var28, var22);
+                            GL11.glColor4f(var19, var20, var29, var22);
                             this.renderPassModel.render(par1EntityLiving, var16, var15, var13, var11 - var10, var12, var14);
                         }
                     }
@@ -269,7 +286,7 @@
 
     protected void func_98190_a(EntityLiving par1EntityLiving)
     {
-        this.loadTexture(par1EntityLiving.getTexture());
+    	this.loadTexture(FakeResourceLocation.unwrap(MobRandomizer.randomTexture((Entity)par1EntityLiving, FakeResourceLocation.wrap(par1EntityLiving.getTexture()))));
     }
 
     /**
@@ -322,7 +339,7 @@
 
         if (var3 > 0)
         {
-            EntityArrow var4 = new EntityArrow(par1EntityLiving.worldObj, par1EntityLiving.posX, par1EntityLiving.posY, par1EntityLiving.posZ);
+            EntityArrow var4 = (EntityArrow) EntityList.createEntityOfType(EntityArrow.class, par1EntityLiving.worldObj, par1EntityLiving.posX, par1EntityLiving.posY, par1EntityLiving.posZ);
             Random var5 = new Random((long)par1EntityLiving.entityId);
             RenderHelper.disableStandardItemLighting();
 
@@ -412,6 +429,12 @@
 
                 if (par1EntityLiving.isSneaking())
                 {
+                	// FCMOD: Code added
+                	if ( FCBetterThanWolves.IsHardcorePlayerNamesEnabled( par1EntityLiving.worldObj ) )
+                	{
+                		return;
+                	}
+                	// END FCMOD
                     FontRenderer var14 = this.getFontRendererFromRenderManager();
                     GL11.glPushMatrix();
                     GL11.glTranslatef((float)par2 + 0.0F, (float)par4 + par1EntityLiving.height + 0.5F, (float)par6);
@@ -481,8 +504,17 @@
             GL11.glRotatef(this.renderManager.playerViewX, 1.0F, 0.0F, 0.0F);
             GL11.glScalef(-var14, -var14, var14);
             GL11.glDisable(GL11.GL_LIGHTING);
+            
             GL11.glDepthMask(false);
+            // FCMOD: Changed so that player names aren't visible through walls
+            /*
             GL11.glDisable(GL11.GL_DEPTH_TEST);
+            */
+        	if ( !FCBetterThanWolves.AreHardcorePlayerNamesObstructed( par1EntityLiving.worldObj ) )
+        	{
+                GL11.glDisable(GL11.GL_DEPTH_TEST);
+        	}
+            // END FCMOD
             GL11.glEnable(GL11.GL_BLEND);
             GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
             Tessellator var15 = Tessellator.instance;
@@ -503,6 +535,7 @@
             var15.addVertex((double)(var17 + 1), (double)(-1 + var16), 0.0D);
             var15.draw();
             GL11.glEnable(GL11.GL_TEXTURE_2D);
+            
             var12.drawString(par2Str, -var12.getStringWidth(par2Str) / 2, var16, 553648127);
             GL11.glEnable(GL11.GL_DEPTH_TEST);
             GL11.glDepthMask(true);
