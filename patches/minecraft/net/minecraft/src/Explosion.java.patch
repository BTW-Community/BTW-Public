--- a/minecraft/net/minecraft/src/Explosion.java
+++ b/minecraft/net/minecraft/src/Explosion.java
@@ -28,6 +28,10 @@
     public List affectedBlockPositions = new ArrayList();
     private Map field_77288_k = new HashMap();
 
+    // FCMOD: Added
+    public boolean m_bSuppressFX = false;
+    // END FCMOD
+
     public Explosion(World par1World, Entity par2Entity, double par3, double par5, double par7, float par9)
     {
         this.worldObj = par1World;
@@ -82,7 +86,14 @@
                             if (var25 > 0)
                             {
                                 Block var26 = Block.blocksList[var25];
+                                
+                                // FCMOD: Changed
+                                /*
                                 float var27 = this.exploder != null ? this.exploder.func_82146_a(this, this.worldObj, var22, var23, var24, var26) : var26.getExplosionResistance(this.exploder);
+                                */
+                                float var27 = this.exploder != null ? this.exploder.func_82146_a(this, this.worldObj, var22, var23, var24, var26) : 
+                                	var26.getExplosionResistance(this.exploder, worldObj, var22, var23, var24);
+                                // END FCMOD
                                 var14 -= (var27 + 0.3F) * var21;
                             }
 
@@ -121,15 +132,15 @@
                 var15 = var32.posX - this.explosionX;
                 var17 = var32.posY + (double)var32.getEyeHeight() - this.explosionY;
                 var19 = var32.posZ - this.explosionZ;
-                double var33 = (double)MathHelper.sqrt_double(var15 * var15 + var17 * var17 + var19 * var19);
+                double var34 = (double)MathHelper.sqrt_double(var15 * var15 + var17 * var17 + var19 * var19);
 
-                if (var33 != 0.0D)
+                if (var34 != 0.0D)
                 {
-                    var15 /= var33;
-                    var17 /= var33;
-                    var19 /= var33;
-                    double var34 = (double)this.worldObj.getBlockDensity(var31, var32.boundingBox);
-                    double var35 = (1.0D - var13) * var34;
+                    var15 /= var34;
+                    var17 /= var34;
+                    var19 /= var34;
+                    double var33 = (double)this.worldObj.getBlockDensity(var31, var32.boundingBox);
+                    double var35 = (1.0D - var13) * var33;
                     var32.attackEntityFrom(DamageSource.setExplosionSource(this), (int)((var35 * var35 + var35) / 2.0D * 8.0D * (double)this.explosionSize + 1.0D));
                     double var36 = EnchantmentProtection.func_92092_a(var32, var35);
                     var32.motionX += var15 * var36;
@@ -152,6 +163,10 @@
      */
     public void doExplosionB(boolean par1)
     {
+    	// FCMOD: Added
+    	if ( !m_bSuppressFX )
+    	{
+    	// END FCMOD
         this.worldObj.playSoundEffect(this.explosionX, this.explosionY, this.explosionZ, "random.explode", 4.0F, (1.0F + (this.worldObj.rand.nextFloat() - this.worldObj.rand.nextFloat()) * 0.2F) * 0.7F);
 
         if (this.explosionSize >= 2.0F && this.isSmoking)
@@ -162,6 +177,9 @@
         {
             this.worldObj.spawnParticle("largeexplode", this.explosionX, this.explosionY, this.explosionZ, 1.0D, 0.0D, 0.0D);
         }
+    	// FCMOD: Added
+    	}
+    	// END FCMOD
 
         Iterator var2;
         ChunkPosition var3;
@@ -205,15 +223,26 @@
 
                 if (var7 > 0)
                 {
-                    Block var24 = Block.blocksList[var7];
+                    Block var25 = Block.blocksList[var7];
 
-                    if (var24.canDropFromExplosion(this))
+                    // FCMOD: Changed
+                    /*
+                    if (var25.canDropFromExplosion(this))
                     {
-                        var24.dropBlockAsItemWithChance(this.worldObj, var4, var5, var6, this.worldObj.getBlockMetadata(var4, var5, var6), 1.0F / this.explosionSize, 0);
+                        var25.dropBlockAsItemWithChance(this.worldObj, var4, var5, var6, this.worldObj.getBlockMetadata(var4, var5, var6), 1.0F / this.explosionSize, 0);
                     }
+                    */
+                    var25.DropItemsOnDestroyedByExplosion( worldObj, var4, var5, var6, this );
+                    // END FCMOD
 
+                    // FCMOD: Changed to rearrange order so that blocks can still access their metadata when notified of an explosion
+                    /*
                     this.worldObj.setBlock(var4, var5, var6, 0, 0, 3);
-                    var24.onBlockDestroyedByExplosion(this.worldObj, var4, var5, var6, this);
+                    var25.onBlockDestroyedByExplosion(this.worldObj, var4, var5, var6, this);
+                    */
+                    var25.onBlockDestroyedByExplosion(this.worldObj, var4, var5, var6, this);
+                    this.worldObj.setBlock(var4, var5, var6, 0, 0, 3);
+                    // END FCMOD
                 }
             }
         }
@@ -225,20 +254,35 @@
             while (var2.hasNext())
             {
                 var3 = (ChunkPosition)var2.next();
+                
+                // FCMOD: Changed
+                /*
                 var4 = var3.x;
                 var5 = var3.y;
                 var6 = var3.z;
                 var7 = this.worldObj.getBlockId(var4, var5, var6);
-                int var25 = this.worldObj.getBlockId(var4, var5 - 1, var6);
+                int var24 = this.worldObj.getBlockId(var4, var5 - 1, var6);
 
-                if (var7 == 0 && Block.opaqueCubeLookup[var25] && this.explosionRNG.nextInt(3) == 0)
+                if (var7 == 0 && Block.opaqueCubeLookup[var24] && this.explosionRNG.nextInt(3) == 0)
                 {
                     this.worldObj.setBlock(var4, var5, var6, Block.fire.blockID);
                 }
+                */
+                if ( explosionRNG.nextInt( 3 ) == 0 && 
+                	FCBlockFire.CanFireReplaceBlock( worldObj, var3.x, var3.y, var3.z ) && 
+                	Block.fire.canPlaceBlockAt( worldObj, var3.x, var3.y, var3.z ) )
+                {
+                    this.worldObj.setBlock( var3.x, var3.y, var3.z, Block.fire.blockID );
             }
+                // END FCMOD
         }
     }
 
+        // FCMOD: Added
+        PerformSecondaryExplosions();
+        // END FCMOD
+    }
+
     public Map func_77277_b()
     {
         return this.field_77288_k;
@@ -248,4 +292,41 @@
     {
         return this.exploder == null ? null : (this.exploder instanceof EntityTNTPrimed ? ((EntityTNTPrimed)this.exploder).getTntPlacedBy() : (this.exploder instanceof EntityLiving ? (EntityLiving)this.exploder : null));
     }
+    
+    // FCMOD: Added
+    public List m_SecondaryExplosionList = null;
+    
+    public void AddSecondaryExplosionNoFX( double dPosX, double dPosY, double dPosZ, 
+    	float fExplosionSize, boolean bCreatesFlames, boolean bDestroysBlocks )
+    {
+    	if ( m_SecondaryExplosionList == null )
+    	{
+    		m_SecondaryExplosionList = new ArrayList();
 }
+    	
+        Explosion explosion = new Explosion( worldObj, null, dPosX, dPosY, dPosZ, fExplosionSize );
+        
+        explosion.isFlaming = bCreatesFlames;
+        explosion.isSmoking = bDestroysBlocks;
+        explosion.m_bSuppressFX = true;
+        
+        m_SecondaryExplosionList.add( explosion );
+    }
+    
+    private void PerformSecondaryExplosions()
+    {
+    	if ( m_SecondaryExplosionList != null )
+    	{
+    		Iterator tempIterator = m_SecondaryExplosionList.iterator();
+    		
+            while ( tempIterator.hasNext() )
+            {
+                Explosion tempExplosion = (Explosion)tempIterator.next();
+                
+                tempExplosion.doExplosionA();
+                tempExplosion.doExplosionB( false ); // false tells individual block destruction effects not to play
+            }
+    	}
+    }    
+    // END FCMOD    
+}
