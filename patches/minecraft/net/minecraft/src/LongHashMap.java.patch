--- a/minecraft/net/minecraft/src/LongHashMap.java
+++ b/minecraft/net/minecraft/src/LongHashMap.java
@@ -3,20 +3,35 @@
 public class LongHashMap
 {
     /** the array of all elements in the hash */
-    private transient LongHashMapEntry[] hashArray = new LongHashMapEntry[16];
+	// FCMOD: Changed so that it's most common use (loaded chunks) doesn't constantly resize 
+    //private transient LongHashMapEntry[] hashArray = new LongHashMapEntry[16];
 
+	// 882 chunks will typical be loaded SP / 0.75, for 1176, with extra wiggle room
+	// there's only a few of these instantiated in the entire game, at 8K a piece for 2000 elements
+	// so really no need to be stingy.
+	private final int m_iDefaultSize = 2000; 
+    private final float percentUseable = 0.75F;
+	
+    private transient LongHashMapEntry[] hashArray = new LongHashMapEntry[m_iDefaultSize];	
+	// END FCMOD
+
     /** the number of elements in the hash array */
     private transient int numHashElements;
 
     /**
      * the maximum amount of elements in the hash (probably 3/4 the size due to meh hashing function)
      */
-    private int capacity = 12;
+    // FCMOD: Changed
+    //private int capacity = 12;
+    private int capacity = (int)( (float)m_iDefaultSize * percentUseable );
+    // END FCMOD
 
     /**
      * percent of the hasharray that can be used without hash colliding probably
      */
-    private final float percentUseable = 0.75F;
+    // FCMOD: Removed and replaced above due to declaration order    
+    //private final float percentUseable = 0.75F;
+    // END FCMOD
 
     /** count of times elements have been added/removed */
     private transient volatile int modCount;
@@ -26,7 +41,12 @@
      */
     private static int getHashedKey(long par0)
     {
-        return hash((int)(par0 ^ par0 >>> 32));
+    	// FCMOD: Changed to avoid excessive collisions between what is just
+    	// XORing the X and Z values that comprise the key for chunk coords
+    	// discussion of this can be found here: https://bugs.mojang.com/browse/MC-12964
+        //return hash((int)(par0 ^ par0 >>> 32));
+        return hash( (int)( par0 ^ ( ( par0 >>> 32 ) * 31 ) ) );
+        // END FCMOD
     }
 
     /**
