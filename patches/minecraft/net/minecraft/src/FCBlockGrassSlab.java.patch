--- /dev/null
+++ b/minecraft/net/minecraft/src/FCBlockGrassSlab.java
@@ -0,0 +1,322 @@
+package net.minecraft.src;
+
+import java.util.List;
+import java.util.Random;
+
+import com.prupe.mcpatcher.cc.ColorizeBlock;
+import com.prupe.mcpatcher.mal.block.RenderBlocksUtils;
+
+public class FCBlockGrassSlab extends FCBlockSlabAttached {
+	protected FCBlockGrassSlab(int blockID) {
+		super(blockID, Material.ground);
+
+		this.setHardness(0.5F);
+		this.SetShovelsEffectiveOn(true);
+
+		this.setStepSound(soundGrassFootstep);
+
+		this.setUnlocalizedName("fcBlockSlabDirt");
+
+		this.setTickRandomly(true);
+
+		this.setCreativeTab(CreativeTabs.tabBlock);
+
+		this.setUnlocalizedName("fcBlockGrassSlab");
+	}
+
+	@Override
+	public void updateTick(World world, int x, int y, int z, Random rand) {
+		if (!FCBlockGrass.canGrassSurviveAtLocation(world, x, y, z)) {
+			this.revertToDirt(world, x, y, z);
+		}
+		else if (FCBlockGrass.canGrassSpreadFromLocation(world, x, y, z)) {
+			if (rand.nextFloat() <= FCBlockGrass.GROWTH_CHANCE) {
+				FCBlockGrass.checkForGrassSpreadFromLocation(world, x, y, z);
+			}
+
+			if (isSparse(world, x, y, z) && rand.nextInt(FCBlockGrass.SELF_GROWTH_CHANCE) == 0) {
+				this.setFullyGrown(world, x, y, z);
+			}
+		}
+	}
+    
+    @Override
+    public int idDropped(int metadata, Random random, int fortuneModifier) {
+        return FCBetterThanWolves.fcBlockDirtLooseSlab.blockID;
+    }
+    
+	@Override
+	public boolean DropComponentItemsOnBadBreak(World world, int x, int y, int z, int iMetadata, float fChanceOfDrop) {
+		DropItemsIndividualy(world, x, y, z, FCBetterThanWolves.fcItemPileDirt.itemID, 3, 0, fChanceOfDrop);
+		return true;
+	}
+
+	@Override
+	protected void OnAnchorBlockLost(World world, int i, int j, int k) {
+		world.setBlock(i, j, k, FCBetterThanWolves.fcBlockDirtLooseSlab.blockID, world.getBlockMetadata(i, j, k) & 3, 2);
+	}
+
+	@Override
+	public int GetCombinedBlockID(int iMetadata) {
+		return Block.grass.blockID;
+	}
+	
+	@Override
+    public boolean AttemptToCombineWithFallingEntity(World world, int x, int y, int z, EntityFallingSand entity) {
+		if (entity.blockID == FCBetterThanWolves.fcBlockDirtLooseSlab.blockID) {
+			if (!GetIsUpsideDown(world, x, y, z)) {
+				world.setBlockWithNotify(x, y, z, FCBetterThanWolves.fcBlockDirtLoose.blockID);	
+						
+				return true;
+			}
+		}
+		
+		return super.AttemptToCombineWithFallingEntity(world, x, y, z, entity);
+	}
+
+	@Override
+	public boolean CanBePistonShoveled(World world, int x, int y, int z) {
+		return true;
+	}
+
+	@Override
+	public boolean CanBeGrazedOn(IBlockAccess blockAccess, int x, int y, int z, EntityAnimal animal) {
+		return !isSparse(blockAccess, x, y, z) || animal.IsStarving() || animal.GetDisruptsEarthOnGraze();
+	}
+
+	@Override
+	public void OnGrazed(World world, int x, int y, int z, EntityAnimal animal) {
+		if (!animal.GetDisruptsEarthOnGraze()) {
+			if (isSparse(world, x, y, z)) {
+				world.setBlockWithNotify(x, y, z, FCBetterThanWolves.fcBlockDirtSlab.blockID);
+			}
+			else {
+				setSparse(world, x, y, z);
+			}
+		}
+		else {
+			world.setBlockWithNotify(x, y, z, FCBetterThanWolves.fcBlockDirtLooseSlab.blockID);
+			NotifyNeighborsBlockDisrupted(world, x, y, z);
+		}
+	}
+
+	@Override
+	public void OnVegetationAboveGrazed(World world, int x, int y, int z, EntityAnimal animal) {
+		if (animal.GetDisruptsEarthOnGraze()) {
+			world.setBlockWithNotify(x, y, z, FCBetterThanWolves.fcBlockDirtLoose.blockID);
+			NotifyNeighborsBlockDisrupted(world, x, y, z);
+		}
+	}
+    
+    @Override
+    public void OnBlockDestroyedWithImproperTool(World world, EntityPlayer player, int i, int j, int k, int iMetadata) {
+    	super.OnBlockDestroyedWithImproperTool(world, player, i, j, k, iMetadata);
+    	
+		OnDirtSlabDugWithImproperTool(world, i, j, k, GetIsUpsideDown(iMetadata));
+    }
+    
+	@Override
+    public void onBlockDestroyedByExplosion(World world, int i, int j, int k, Explosion explosion) {
+		super.onBlockDestroyedByExplosion(world, i, j, k, explosion);
+    	
+		OnDirtSlabDugWithImproperTool(world, i, j, k, GetIsUpsideDown(world, i, j, k));
+    }
+
+	//------ Class specific methods ------//
+
+	public void revertToDirt(World world, int x, int y, int z) {
+		boolean isUpsideDown = this.GetIsUpsideDown(world, x, y, z);
+
+		world.setBlockWithNotify(x, y, z, FCBetterThanWolves.fcBlockDirtSlab.blockID);
+		FCBetterThanWolves.fcBlockDirtSlab.SetSubtype(world, x, y, z, FCBlockDirtSlab.m_iSubtypeDirt);
+		FCBetterThanWolves.fcBlockDirtSlab.SetIsUpsideDown(world, x, y, z, isUpsideDown);
+	}
+
+	public boolean isSparse(IBlockAccess blockAccess, int x, int y, int z) {
+		return isSparse(blockAccess.getBlockMetadata(x, y, z));
+	}
+
+	public boolean isSparse(int metadata) {
+		return (metadata & -1) == 2;
+	}
+
+	public void setSparse(World world, int x, int y, int z) {
+		int metadata = world.getBlockMetadata(x, y, z);
+		world.setBlockMetadataWithNotify(x, y, z, metadata | 2);
+	}
+
+	public void setFullyGrown(World world, int x, int y, int z) {
+		int metadata = world.getBlockMetadata(x, y, z);
+		world.setBlockMetadataWithNotify(x, y, z, metadata & 1);
+	}
+
+	//----------- Client Side Functionality -----------//
+
+	private boolean hasSnowOnTop; // temporary variable used by rendering
+	public static boolean secondPass;
+
+	private Icon iconGrassTop;
+	private Icon iconGrassTopSparse;
+	private Icon iconGrassTopSparseDirt;
+
+	private Icon iconSnowSide;
+	private Icon iconSnowSideHalf;
+
+	private Icon iconGrassSideOverlay;
+	private Icon iconGrassSideOverlayHalf;
+
+	public void registerIcons(IconRegister register) {
+		this.blockIcon = Block.dirt.blockIcon;
+
+		this.iconGrassTop = register.registerIcon("grass_top");
+		this.iconGrassTopSparse = register.registerIcon("fcBlockGrassSparse");
+		this.iconGrassTopSparseDirt = register.registerIcon("fcBlockGrassSparseDirt");
+
+		this.iconSnowSide = register.registerIcon("snow_side");
+		this.iconSnowSideHalf = register.registerIcon("FCBlockSlabDirt_grass_snow_side");
+
+		this.iconGrassSideOverlay = register.registerIcon("grass_side_overlay");
+		this.iconGrassSideOverlayHalf = register.registerIcon("FCBlockSlabDirt_grass_side_overlay");
+	}
+
+	@Override
+	public int colorMultiplier(IBlockAccess blockAccess, int x, int y, int z) {
+		if (hasSnowOnTop || !secondPass) {
+			return 16777215;
+		}
+		else {
+			if (ColorizeBlock.colorizeBlock(this, blockAccess, x, y, z)) {
+				return ColorizeBlock.blockColor;
+			}
+			else {
+				int red = 0;
+				int green = 0;
+				int blue = 0;
+
+				for (int i = -1; i <= 1; i++) {
+					for (int k = -1; k <= 1; k++) {
+						int iBiomeGrassColor = blockAccess.getBiomeGenForCoords(x + i, z + k).getBiomeGrassColor();
+
+						red += (iBiomeGrassColor & 0xff0000) >> 16;
+					green += (iBiomeGrassColor & 0xff00) >> 8;
+					blue += iBiomeGrassColor & 0xff;
+					}
+				}
+
+				return (red / 9 & 0xff) << 16 | (green / 9 & 0xff) << 8 | blue / 9 & 0xff;
+			}
+		}
+	}
+
+	@Override
+	public boolean shouldSideBeRendered(IBlockAccess blockAccess, int neighborX, int neighborY, int neighborZ, int side) {
+		FCUtilsBlockPos pos = new FCUtilsBlockPos(neighborX, neighborY, neighborZ, Facing.oppositeSide[side]);
+
+		if (!secondPass ) {
+			//Don't render dirt under normal grass
+			if (side == 1 && !isSparse(blockAccess, pos.i, pos.j, pos.k) && !hasSnowOnTop) {
+				//return false;
+			}
+		}
+		else {
+			//Bottom never has a second pass texture
+			if (side == 0) {
+				return false;
+			}
+			//Snow has its own texture and should not render the second pass
+			else if (side >= 2 && hasSnowOnTop) {
+				return false;
+			}
+		}
+
+		return super.shouldSideBeRendered(blockAccess, neighborX, neighborY, neighborZ, side);
+	}
+
+	public Icon getBlockTexture(IBlockAccess blockAccess, int x, int y, int z, int side) {
+		if (!secondPass) {
+			if (side == 1 && this.isSparse(blockAccess, x, y, z)) {
+				return this.iconGrassTopSparseDirt;
+			}
+			else if (side > 1 && hasSnowOnTop) {
+				Icon betterGrassIcon = RenderBlocksUtils.getGrassTexture(this, blockAccess, x, y, z, side, iconGrassTop);
+
+				if (betterGrassIcon != null && betterGrassIcon != iconGrassTop && betterGrassIcon != iconGrassTopSparse) {
+					return betterGrassIcon;
+				}
+				else {
+					if (this.GetIsUpsideDown(blockAccess, x, y, z)) {
+						return iconSnowSide;
+					}
+					else {
+						return iconSnowSideHalf;
+					}
+				}
+			}
+			else {
+				return Block.dirt.getBlockTextureFromSide(side);
+			}
+		}
+		else {
+			return getBlockTextureSecondPass(blockAccess, x, y, z, side);
+		}
+	}
+
+	public Icon getBlockTextureSecondPass(IBlockAccess blockAccess, int x, int y, int z, int side) {
+		Icon topIcon;
+
+		if (isSparse(blockAccess, x, y, z)) {
+			topIcon = iconGrassTopSparse;
+		}
+		else {
+			topIcon = iconGrassTop;
+		}
+
+		Icon betterGrassIcon = RenderBlocksUtils.getGrassTexture(this, blockAccess, x, y, z, side, topIcon);
+
+		if (betterGrassIcon != null) {
+			return betterGrassIcon;
+		}
+		else if (side == 1) {
+			return topIcon;
+		}
+		else if (side > 1) {
+			if (this.GetIsUpsideDown(blockAccess, x, y, z)) {
+				return this.iconGrassSideOverlay;
+			}
+			else {
+				return this.iconGrassSideOverlayHalf;
+			}
+		}
+
+		return null;
+	}
+
+	@Override
+	public boolean RenderBlock(RenderBlocks render, int x, int y, int z) {
+		hasSnowOnTop = IsSnowCoveringTopSurface(render.blockAccess, x, y, z);
+		AxisAlignedBB bounds = this.GetBlockBoundsFromPoolBasedOnState(render.blockAccess, x, y, z);
+		render.setRenderBounds(bounds);
+		return render.renderStandardBlock(this, x, y, z);
+	}
+
+	@Override
+	public void RenderBlockSecondPass(RenderBlocks render, int x, int y, int z, boolean firstPassResult) {
+		secondPass = true;
+		AxisAlignedBB bounds = this.GetBlockBoundsFromPoolBasedOnState(render.blockAccess, x, y, z);
+		render.setRenderBounds(bounds);
+		render.renderStandardBlock(this, x, y, z);
+		secondPass = false;
+	}
+
+	@Override
+	public void RenderBlockAsItem(RenderBlocks renderBlocks, int itemDamage, float brightness) {
+		renderBlocks.setRenderBounds(0, 0, 0, 1, 0.5F, 1);
+		itemDamage = FCBlockDirtSlab.m_iSubtypeGrass;
+		FCClientUtilsRender.RenderInvBlockWithMetadata(renderBlocks, FCBetterThanWolves.fcBlockDirtSlab, -0.5F, -0.5F, -0.5F, itemDamage << 1);
+	}
+
+	@Override
+	public void getSubBlocks(int blockID, CreativeTabs creativeTabs, List list) {
+		list.add(new ItemStack(blockID, 1, 0));
+	}
+}
