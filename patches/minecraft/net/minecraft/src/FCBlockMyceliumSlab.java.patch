--- /dev/null
+++ b/minecraft/net/minecraft/src/FCBlockMyceliumSlab.java
@@ -0,0 +1,281 @@
+// FCMOD
+
+package net.minecraft.src;
+
+import java.util.Random;
+
+import com.prupe.mcpatcher.mal.block.RenderBlocksUtils;
+
+public class FCBlockMyceliumSlab extends FCBlockSlabAttached
+{
+    protected FCBlockMyceliumSlab(int iBlockID)
+    {
+        super(iBlockID, Material.grass);
+        
+        setHardness(0.6F);
+        SetShovelsEffectiveOn();
+        
+        setStepSound(soundGrassFootstep);
+        
+        setUnlocalizedName("fcBlockMyceliumSlab");
+        
+        setTickRandomly(true);
+        
+        setCreativeTab(CreativeTabs.tabBlock);        
+    }
+
+	@Override
+	public void updateTick(World world, int x, int y, int z, Random rand) {
+		if (!FCBlockMycelium.canMyceliumSurviveAtLocation(world, x, y, z)) {
+			this.revertToDirt(world, x, y, z);
+		}
+		else {
+			FCBlockMycelium.checkForMyceliumSpreadFromLocation(world, x, y, z);
+
+			if (isSparse(world, x, y, z) && rand.nextInt(4) == 0) {
+				this.setFullyGrown(world, x, y, z);
+			}
+		}
+	}
+    
+    @Override
+    public int idDropped(int metadata, Random random, int fortuneModifier) {
+        return FCBetterThanWolves.fcBlockDirtLooseSlab.blockID;
+    }
+    
+	@Override
+	public boolean DropComponentItemsOnBadBreak(World world, int x, int y, int z, int iMetadata, float fChanceOfDrop) {
+		DropItemsIndividualy(world, x, y, z, FCBetterThanWolves.fcItemPileDirt.itemID, 3, 0, fChanceOfDrop);
+		return true;
+	}
+	
+	@Override
+    public boolean AttemptToCombineWithFallingEntity(World world, int x, int y, int z, EntityFallingSand entity) {
+		if (entity.blockID == FCBetterThanWolves.fcBlockDirtLooseSlab.blockID) {
+			if (!GetIsUpsideDown(world, x, y, z)) {
+				world.setBlockWithNotify(x, y, z, FCBetterThanWolves.fcBlockDirtLoose.blockID);
+				return true;
+			}
+		}
+		
+		return super.AttemptToCombineWithFallingEntity(world, x, y, z, entity);
+	}
+
+	@Override
+	protected void OnAnchorBlockLost(World world, int x, int y, int z) {
+		world.setBlock(x, y, z, FCBetterThanWolves.fcBlockDirtLooseSlab.blockID, world.getBlockMetadata(x, y, z) & 3, 2);
+	}
+	
+	@Override
+	public int GetCombinedBlockID(int metadata) {
+		return Block.mycelium.blockID;
+	}
+	
+    @Override
+    public boolean CanBePistonShoveled(World world, int x, int y, int z) {
+    	return true;
+    }
+    
+	@Override
+    protected boolean canSilkHarvest() {
+        return true;
+    }
+
+    @Override
+    public boolean CanMobsSpawnOn(World world, int x, int y, int z) {
+    	return false;
+    }
+    
+	@Override
+	public boolean CanBeGrazedOn(IBlockAccess blockAccess, int x, int y, int z, EntityAnimal animal) {
+		if (!isSparse(blockAccess, x, y, z) || animal.IsStarving() || animal.GetDisruptsEarthOnGraze()) {
+			return animal.CanGrazeMycelium();
+		}
+		
+		return false;
+	}
+
+	@Override
+	public void OnGrazed(World world, int x, int y, int z, EntityAnimal animal) {
+		if (!animal.GetDisruptsEarthOnGraze()) {
+			if (isSparse(world, x, y, z)) {
+				world.setBlockWithNotify(x, y, z, Block.dirt.blockID);
+			}
+			else {
+				setSparse(world, x, y, z);
+			}
+		}
+		else {
+			world.setBlockWithNotify(x, y, z, FCBetterThanWolves.fcBlockDirtLoose.blockID);
+			NotifyNeighborsBlockDisrupted(world, x, y, z);
+		}
+	}
+
+	@Override
+	public void OnVegetationAboveGrazed(World world, int x, int y, int z, EntityAnimal animal) {
+		if (animal.GetDisruptsEarthOnGraze()) {
+			world.setBlockWithNotify(x, y, z, FCBetterThanWolves.fcBlockDirtLoose.blockID);
+			NotifyNeighborsBlockDisrupted(world, x, y, z);
+		}
+	}
+    
+    @Override
+    public void OnBlockDestroyedWithImproperTool(World world, EntityPlayer player, int i, int j, int k, int iMetadata) {
+    	super.OnBlockDestroyedWithImproperTool(world, player, i, j, k, iMetadata);
+    	
+		OnDirtSlabDugWithImproperTool(world, i, j, k, GetIsUpsideDown(iMetadata));
+    }
+    
+	@Override
+    public void onBlockDestroyedByExplosion(World world, int i, int j, int k, Explosion explosion) {
+		super.onBlockDestroyedByExplosion(world, i, j, k, explosion);
+    	
+		OnDirtSlabDugWithImproperTool(world, i, j, k, GetIsUpsideDown(world, i, j, k));
+    }
+
+	//------ Class specific methods ------//
+
+	public void revertToDirt(World world, int x, int y, int z) {
+		boolean isUpsideDown = this.GetIsUpsideDown(world, x, y, z);
+
+		world.setBlockWithNotify(x, y, z, FCBetterThanWolves.fcBlockDirtSlab.blockID);
+		FCBetterThanWolves.fcBlockDirtSlab.SetSubtype(world, x, y, z, FCBlockDirtSlab.m_iSubtypeDirt);
+		FCBetterThanWolves.fcBlockDirtSlab.SetIsUpsideDown(world, x, y, z, isUpsideDown);
+	}
+
+	public boolean isSparse(IBlockAccess blockAccess, int x, int y, int z) {
+		return isSparse(blockAccess.getBlockMetadata(x, y, z));
+	}
+
+	public boolean isSparse(int metadata) {
+		return (metadata & -1) == 2;
+	}
+
+	public void setSparse(World world, int x, int y, int z) {
+		int metadata = world.getBlockMetadata(x, y, z);
+		world.setBlockMetadata(x, y, z, metadata | 2);
+	}
+
+	public void setFullyGrown(World world, int x, int y, int z) {
+		int metadata = world.getBlockMetadata(x, y, z);
+		world.setBlockMetadata(x, y, z, metadata & 1);
+	}
+	
+	//----------- Client Side Functionality -----------//
+	
+	private Icon iconTopSparse;
+	
+	private Icon m_iconBottom;
+	
+	private Icon m_iconSide;
+	private Icon m_iconSideHalf;
+	
+	private Icon m_iconSideSnow;
+	private Icon m_iconSideHalfSnow;
+	
+	@Override
+    public void registerIcons(IconRegister register)
+    {
+        blockIcon = register.registerIcon("fcBlockMyceliumSlab_top");
+        iconTopSparse = register.registerIcon("fcBlockMyceliumSparse");
+        
+        m_iconBottom = register.registerIcon("fcBlockMyceliumSlab_bottom");        
+        m_iconSide = register.registerIcon("fcBlockMyceliumSlab_side");
+        m_iconSideHalf = register.registerIcon("fcBlockMyceliumSlab_side_half");
+        
+    	m_iconSideSnow = register.registerIcon("snow_side");	
+    	m_iconSideHalfSnow = register.registerIcon("FCBlockSlabDirt_grass_snow_side");
+    }
+	
+	@Override
+    public Icon getIcon(int iSide, int metadata)
+    {
+		if (iSide < 2)
+		{
+			if (iSide == 0)
+			{
+				return m_iconBottom;
+			}
+			else // iSide == 1 
+			{
+				Icon topIcon;
+		    	
+		    	if (isSparse(metadata)) {
+		    		topIcon = this.iconTopSparse;
+		    	}
+		    	else {
+		    		topIcon = this.blockIcon;
+		    	}
+		    	
+		    	return topIcon;
+			}
+		}
+		
+		if (GetIsUpsideDown(metadata))
+		{
+			return m_iconSide;
+		}
+		
+		return m_iconSideHalf;
+    }
+	
+	@Override
+    public Icon getBlockTexture(IBlockAccess blockAccess, int x, int y, int z, int side)
+    {
+		int metadata = blockAccess.getBlockMetadata(x, y, z);
+		
+		Icon topIcon;
+    	
+    	if (isSparse(blockAccess, x, y, z)) {
+    		topIcon = this.iconTopSparse;
+    	}
+    	else {
+    		topIcon = this.blockIcon;
+    	}
+		
+		if (side > 1 && IsSnowCoveringTopSurface(blockAccess, x, y, z))
+		{
+	    	Icon betterGrassIcon = RenderBlocksUtils.getGrassTexture(this, blockAccess, x, y, z, side, topIcon);
+
+	        if (betterGrassIcon != null)
+	        {
+	            return betterGrassIcon;
+	        }
+	        else if (GetIsUpsideDown(metadata))
+			{
+				return m_iconSideSnow;
+			}
+			else
+			{				
+				return m_iconSideHalfSnow;
+			}
+		}
+		
+		Icon betterGrassIcon = RenderBlocksUtils.getGrassTexture(Block.mycelium, blockAccess, x, y, z, side, topIcon);
+
+        if (betterGrassIcon != null) {
+            return betterGrassIcon;
+        }
+        else {
+        	return getIcon(side, metadata);
+        }
+    }
+		
+	@Override
+    public void randomDisplayTick(World world, int i, int j, int k, Random rand)
+    {
+        super.randomDisplayTick(world, i, j, k, rand);
+        
+        if (rand.nextInt(10) == 0)
+        {
+            double dYParticle = (double)j + 0.6D;
+            
+            if (GetIsUpsideDown(world, i, j, k))
+            {
+            	dYParticle += 0.5D;
+            }
+
+            world.spawnParticle("townaura", (double)i + rand.nextDouble(), dYParticle, (double)k + rand.nextDouble(), 0D, 0D, 0D);
+        }
+    }
+}
