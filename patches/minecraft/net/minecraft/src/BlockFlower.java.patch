--- a/minecraft/net/minecraft/src/BlockFlower.java
+++ b/minecraft/net/minecraft/src/BlockFlower.java
@@ -2,14 +2,24 @@
 
 import java.util.Random;
 
-public class BlockFlower extends Block
+// FCMOD: Changed
+//public class BlockFlower extends Block
+public class BlockFlower extends FCBlockPlants
+// END FCMOD
 {
+	/**
+	 * FCNOTE: This class would be better called BlockPlants, as it acts as a common base class
+	 * for vegetation and crops.
+	 */
     protected BlockFlower(int par1, Material par2Material)
     {
         super(par1, par2Material);
         this.setTickRandomly(true);
         float var3 = 0.2F;
-        this.setBlockBounds(0.5F - var3, 0.0F, 0.5F - var3, 0.5F + var3, var3 * 3.0F, 0.5F + var3);
+        // FCMOD: Changed
+        //this.setBlockBounds(0.5F - var3, 0.0F, 0.5F - var3, 0.5F + var3, var3 * 3.0F, 0.5F + var3);
+        InitBlockBounds( 0.5F - var3, 0.0F, 0.5F - var3, 0.5F + var3, var3 * 3.0F, 0.5F + var3 );
+        // END FCMOD
         this.setCreativeTab(CreativeTabs.tabDecorations);
     }
 
@@ -18,22 +28,27 @@
         this(par1, Material.plants);
     }
 
-    /**
-     * Checks to see if its valid to put this block at the specified coordinates. Args: world, x, y, z
-     */
+    // FCMOD: Removed and replaced
+    /*
     public boolean canPlaceBlockAt(World par1World, int par2, int par3, int par4)
     {
         return super.canPlaceBlockAt(par1World, par2, par3, par4) && this.canThisPlantGrowOnThisBlockID(par1World.getBlockId(par2, par3 - 1, par4));
     }
+    */
+    // END FCMOD
 
     /**
      * Gets passed in the blockID of the block below and supposed to return true if its allowed to grow on the type of
      * blockID passed in. Args: blockID
      */
+    // FCMOD: Removed as deprecated
+    /*
     protected boolean canThisPlantGrowOnThisBlockID(int par1)
     {
         return par1 == Block.grass.blockID || par1 == Block.dirt.blockID || par1 == Block.tilledField.blockID;
     }
+    */
+    // END FCMOD
 
     /**
      * Lets the block know when one of its neighbor changes. Doesn't know which neighbor changed (coordinates passed are
@@ -65,10 +80,14 @@
     /**
      * Can this block stay at this position.  Similar to canPlaceBlockAt except gets checked often with plants.
      */
+    // FCMOD: Removed and replaced
+    /*
     public boolean canBlockStay(World par1World, int par2, int par3, int par4)
     {
         return (par1World.getFullBlockLightValue(par2, par3, par4) >= 8 || par1World.canBlockSeeTheSky(par2, par3, par4)) && this.canThisPlantGrowOnThisBlockID(par1World.getBlockId(par2, par3 - 1, par4));
     }
+    */
+    // END FCMOD
 
     /**
      * Returns a bounding box from the pool of bounding boxes (this means this box can change after the pool has been
@@ -103,4 +122,24 @@
     {
         return 1;
     }
+    
+    // FCMOD: Added New
+    @Override
+    public boolean canBlockStay( World world, int i, int j, int k )
+    {
+        return ( world.getFullBlockLightValue( i, j, k ) >= 8 || 
+        	world.canBlockSeeTheSky( i, j, k ) ) && super.canBlockStay( world, i, j, k ); 
 }
+    
+    @Override
+    public boolean CanBeGrazedOn( IBlockAccess blockAccess, int i, int j, int k, 
+    	EntityAnimal animal )
+    {
+		return animal.CanGrazeOnRoughVegetation();
+    }
+    
+    //------------- Class Specific Methods ------------//
+    
+	//----------- Client Side Functionality -----------//
+    // END FCMOD
+}
