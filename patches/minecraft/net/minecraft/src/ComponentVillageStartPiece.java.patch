--- a/minecraft/net/minecraft/src/ComponentVillageStartPiece.java
+++ b/minecraft/net/minecraft/src/ComponentVillageStartPiece.java
@@ -9,6 +9,7 @@
 
     /** Boolean that determines if the village is in a desert or not. */
     public final boolean inDesert;
+    public static ArrayList<BiomeGenBase> desertBiomes = new ArrayList();
 
     /** World terrain type, 0 for normal, 1 for flap map */
     public final int terrainType;
@@ -29,7 +30,7 @@
         this.structureVillageWeightedPieceList = par6ArrayList;
         this.terrainType = par7;
         BiomeGenBase var8 = par1WorldChunkManager.getBiomeGenAt(par4, par5);
-        this.inDesert = var8 == BiomeGenBase.desert || var8 == BiomeGenBase.desertHills;
+        this.inDesert = isDesertBiome(var8);
         this.startPiece = this;
     }
 
@@ -37,4 +38,102 @@
     {
         return this.worldChunkMngr;
     }
+    
+    public void addDesertBiome(BiomeGenBase biome) {
+    	desertBiomes.add(biome);
 }
+    
+    public boolean isDesertBiome(BiomeGenBase biome) {
+    	return desertBiomes.contains(biome);
+    }
+    
+    // FCMOD: Code added
+    private int m_iAbandonmentLevel;  // 0 = not abandoned, 1 = partially abandoned 2 = fully abandonded
+    private int m_iPrimaryCropBlockID;
+    private int m_iSecondaryCropBlockID;
+    private boolean m_bModSpecificDataInitialized = false;
+
+    public int GetAbandonmentLevel( World world )
+    {
+    	CheckIfModSpecificDataRequiresInit( world );
+    	
+    	return m_iAbandonmentLevel;
+    }
+    
+    public int GetPrimaryCropBlockID( World world )
+    {
+    	CheckIfModSpecificDataRequiresInit( world );
+    	
+    	return m_iPrimaryCropBlockID;
+    }
+    
+    public int GetSecondaryCropBlockID( World world )
+    {
+    	CheckIfModSpecificDataRequiresInit( world );
+    	
+    	return m_iSecondaryCropBlockID;
+    }
+    
+    private void CheckIfModSpecificDataRequiresInit( World world )
+    {
+    	if ( !m_bModSpecificDataInitialized )
+    	{
+    		InitializeModSpecificData( world );    		
+    	}
+    }
+    
+    private void InitializeModSpecificData( World world )
+    {    	
+		m_bModSpecificDataInitialized = true;
+		m_iAbandonmentLevel = 0;
+    	
+    	int iSpawnX = world.getWorldInfo().getSpawnX();
+    	int iSpawnZ = world.getWorldInfo().getSpawnZ();
+    	
+    	int iVillageX = boundingBox.getCenterX();
+    	int iVillageZ = boundingBox.getCenterZ();
+    	
+    	double dDeltaX = (double)( iSpawnX - iVillageX );
+    	double dDeltaZ = (double)( iSpawnZ - iVillageZ );
+    	
+    	double dDistSqFromSpawn = dDeltaX * dDeltaX + dDeltaZ * dDeltaZ;
+    	double dAbandonedRadius = FCUtilsHardcoreSpawn.GetAbandonedVillageRadius();
+    	
+    	if ( dDistSqFromSpawn < ( dAbandonedRadius * dAbandonedRadius ) )
+    	{
+    		m_iAbandonmentLevel = 2;
+    	}
+    	else
+    	{
+    		double dPartiallyAbandonedRadius = FCUtilsHardcoreSpawn.GetPartiallyAbandonedVillageRadius();
+    		
+    		if ( dDistSqFromSpawn < ( dPartiallyAbandonedRadius * dPartiallyAbandonedRadius ) )
+    		{    		
+        		m_iAbandonmentLevel = 1;
+        		
+    			m_iPrimaryCropBlockID = FCBetterThanWolves.fcBlockWheatCrop.blockID;
+    			m_iSecondaryCropBlockID = FCBetterThanWolves.fcBlockWheatCrop.blockID;
+    		}
+    		else
+    		{	
+    			m_iPrimaryCropBlockID = FCBetterThanWolves.fcBlockWheatCrop.blockID;
+    			
+    			int iRandomFactor = world.rand.nextInt( 4 ); 
+    			
+    			if ( iRandomFactor == 3 )
+    			{
+    				m_iSecondaryCropBlockID = Block.potato.blockID;
+    			}
+    			else if ( iRandomFactor == 2 )
+    			{
+    				m_iSecondaryCropBlockID = FCBetterThanWolves.fcBlockCarrot.blockID;
+    			}
+    			else
+    			{
+    				m_iSecondaryCropBlockID = FCBetterThanWolves.fcBlockWheatCrop.blockID;
+    			}
+    		}
+    	}
+    }
+    // END FCMOD
+}
