--- a/minecraft/net/minecraft/src/Item.java
+++ b/minecraft/net/minecraft/src/Item.java
@@ -12,6 +12,18 @@
 
     /** A 32000 elements Item array. */
     public static Item[] itemsList = new Item[32000];
+    
+    // FCMOD: Added
+    public static final int m_iFilterable_NoProperties = 0;
+    public static final int m_iFilterable_SolidBlock = 1;
+    public static final int m_iFilterable_Small = 2;
+    public static final int m_iFilterable_Narrow = 4;
+    public static final int m_iFilterable_Fine = 8;
+    public static final int m_iFilterable_Thin = 16;    
+    // END FCMOD
+    
+    // FCMOD: Changed
+    /*
     public static Item shovelIron = (new ItemSpade(0, EnumToolMaterial.IRON)).setUnlocalizedName("shovelIron");
     public static Item pickaxeIron = (new ItemPickaxe(1, EnumToolMaterial.IRON)).setUnlocalizedName("pickaxeIron");
     public static Item axeIron = (new ItemAxe(2, EnumToolMaterial.IRON)).setUnlocalizedName("hatchetIron");
@@ -21,8 +33,21 @@
     public static Item arrow = (new Item(6)).setUnlocalizedName("arrow").setCreativeTab(CreativeTabs.tabCombat);
     public static Item coal = (new ItemCoal(7)).setUnlocalizedName("coal");
     public static Item diamond = (new Item(8)).setUnlocalizedName("diamond").setCreativeTab(CreativeTabs.tabMaterials);
+    */
+    public static Item shovelIron = ( new FCItemShovel( 0, EnumToolMaterial.IRON ) ).setUnlocalizedName( "shovelIron" );
+    public static Item pickaxeIron = ( new FCItemPickaxe( 1, EnumToolMaterial.IRON ) ).setUnlocalizedName( "pickaxeIron" );
+    public static Item axeIron = ( new FCItemAxe( 2, EnumToolMaterial.IRON ) ).setUnlocalizedName( "hatchetIron" );
+    public static Item flintAndSteel = ( new FCItemFlintAndSteel( 3 ) ).setUnlocalizedName( "flintAndSteel" );
+    public static Item appleRed = ( new ItemFood( 4, 1, 0F, false ) ).SetFilterableProperties( m_iFilterable_Small ).setUnlocalizedName( "apple" );
+    public static ItemBow bow = new FCItemBow( 5 );
+    public static Item arrow = new FCItemArrow( 6 );
+    public static Item coal = ( new ItemCoal( 7 ) ).SetIncineratedInCrucible().SetFurnaceBurnTime( FCEnumFurnaceBurnTime.COAL ).SetFilterableProperties( m_iFilterable_Small ).setUnlocalizedName( "coal" );
+    public static Item diamond = ( new Item( 8 ) ).SetFilterableProperties( m_iFilterable_Small ).setUnlocalizedName( "diamond" ).setCreativeTab( CreativeTabs.tabMaterials );
+    // END FCMOD
     public static Item ingotIron = (new Item(9)).setUnlocalizedName("ingotIron").setCreativeTab(CreativeTabs.tabMaterials);
     public static Item ingotGold = (new Item(10)).setUnlocalizedName("ingotGold").setCreativeTab(CreativeTabs.tabMaterials);
+    // FCMOD: Changed
+    /*
     public static Item swordIron = (new ItemSword(11, EnumToolMaterial.IRON)).setUnlocalizedName("swordIron");
     public static Item swordWood = (new ItemSword(12, EnumToolMaterial.WOOD)).setUnlocalizedName("swordWood");
     public static Item shovelWood = (new ItemSpade(13, EnumToolMaterial.WOOD)).setUnlocalizedName("shovelWood");
@@ -43,6 +68,30 @@
     public static Item shovelGold = (new ItemSpade(28, EnumToolMaterial.GOLD)).setUnlocalizedName("shovelGold");
     public static Item pickaxeGold = (new ItemPickaxe(29, EnumToolMaterial.GOLD)).setUnlocalizedName("pickaxeGold");
     public static Item axeGold = (new ItemAxe(30, EnumToolMaterial.GOLD)).setUnlocalizedName("hatchetGold");
+    */
+    public static Item swordIron = ( new FCItemSword( 11, EnumToolMaterial.IRON ) ).setUnlocalizedName( "swordIron" );
+    public static Item swordWood = ( new FCItemSword( 12, EnumToolMaterial.WOOD ) ).setUnlocalizedName( "swordWood" );
+    public static Item shovelWood = ( new FCItemShovel( 13, EnumToolMaterial.WOOD ) ).SetDamageVsEntity( 2 ).setUnlocalizedName( "shovelWood" );
+    public static Item pickaxeWood = ( new FCItemPickaxe( 14, EnumToolMaterial.WOOD, 1 ) ).setUnlocalizedName( "pickaxeWood" );
+    public static Item axeWood = ( new FCItemAxe( 15, EnumToolMaterial.WOOD ) ).setUnlocalizedName( "hatchetWood" );
+    public static Item swordStone = ( new FCItemSword( 16, EnumToolMaterial.STONE ) ).setUnlocalizedName( "swordStone" );	    
+    public static Item shovelStone = new FCItemShovelStone( 17 );
+    public static Item pickaxeStone = ( new FCItemPickaxe( 18, EnumToolMaterial.STONE ) ).setUnlocalizedName( "pickaxeStone" );
+    public static Item axeStone = ( new FCItemAxe( 19, EnumToolMaterial.STONE ) ).setUnlocalizedName( "hatchetStone" );
+    public static Item swordDiamond = ( new FCItemSword( 20, EnumToolMaterial.EMERALD ) ).setUnlocalizedName( "swordDiamond" );	    
+    public static Item shovelDiamond = ( new FCItemShovel( 21, EnumToolMaterial.EMERALD ) ).setUnlocalizedName( "shovelDiamond" );
+    public static Item pickaxeDiamond = ( new FCItemPickaxe( 22, EnumToolMaterial.EMERALD ) ).setUnlocalizedName( "pickaxeDiamond" );	    
+    public static Item axeDiamond = ( new FCItemAxe( 23, EnumToolMaterial.EMERALD ) ).setUnlocalizedName( "hatchetDiamond" );
+    public static Item stick = new FCItemShaft( 24 );    
+    public static Item bowlEmpty = ( new Item( 25 ) ).SetBuoyant().SetIncineratedInCrucible().setUnlocalizedName( "bowl" ).setCreativeTab( CreativeTabs.tabMaterials );
+    public static Item bowlSoup = ( new FCItemMushroomSoup( 26, 3 ) ).setUnlocalizedName( "mushroomStew" );
+    public static Item swordGold = ( new FCItemSword( 27, EnumToolMaterial.GOLD ) ).setUnlocalizedName( "swordGold" );
+    public static Item shovelGold = ( new FCItemShovel( 28, EnumToolMaterial.GOLD ) ).setUnlocalizedName( "shovelGold" );
+    public static Item pickaxeGold = ( new FCItemPickaxe( 29, EnumToolMaterial.GOLD ) ).setUnlocalizedName( "pickaxeGold" );	    
+    public static Item axeGold = ( new FCItemAxe( 30, EnumToolMaterial.GOLD ) ).setUnlocalizedName( "hatchetGold" );
+    // END FCMOD
+    // FCMOD: Changed
+    /*
     public static Item silk = (new ItemReed(31, Block.tripWire)).setUnlocalizedName("string").setCreativeTab(CreativeTabs.tabMaterials);
     public static Item feather = (new Item(32)).setUnlocalizedName("feather").setCreativeTab(CreativeTabs.tabMaterials);
     public static Item gunpowder = (new Item(33)).setUnlocalizedName("sulphur").setPotionEffect(PotionHelper.gunpowderEffect).setCreativeTab(CreativeTabs.tabMaterials);
@@ -54,6 +103,21 @@
     public static Item seeds = (new ItemSeeds(39, Block.crops.blockID, Block.tilledField.blockID)).setUnlocalizedName("seeds");
     public static Item wheat = (new Item(40)).setUnlocalizedName("wheat").setCreativeTab(CreativeTabs.tabMaterials);
     public static Item bread = (new ItemFood(41, 5, 0.6F, false)).setUnlocalizedName("bread");
+    */
+    public static Item silk = ( new Item( 31 ) ).SetBuoyant().SetBellowsBlowDistance( 2 ).SetIncineratedInCrucible().SetFilterableProperties( m_iFilterable_Small | m_iFilterable_Thin ).setUnlocalizedName( "string" ).setCreativeTab( CreativeTabs.tabMaterials );
+    public static Item feather = ( new Item( 32 ) ).SetBuoyant().SetFurnaceBurnTime( FCEnumFurnaceBurnTime.KINDLING ).SetIncineratedInCrucible().SetBellowsBlowDistance( 3 ).SetFilterableProperties( m_iFilterable_Small | m_iFilterable_Thin ).setUnlocalizedName( "feather" ).setCreativeTab( CreativeTabs.tabMaterials );
+    public static Item gunpowder = ( new Item( 33 ) ).SetBellowsBlowDistance( 3 ).SetFilterableProperties( m_iFilterable_Fine ).setUnlocalizedName( "sulphur" ).setPotionEffect( PotionHelper.gunpowderEffect ).setCreativeTab( CreativeTabs.tabMaterials );
+    public static Item hoeWood = ( new FCItemHoe( 34, EnumToolMaterial.WOOD ) ).setUnlocalizedName( "hoeWood" );
+    public static Item hoeStone = ( new FCItemHoe( 35, EnumToolMaterial.STONE ) ).setUnlocalizedName( "hoeStone" );
+    public static Item hoeIron = ( new FCItemHoe( 36, EnumToolMaterial.IRON ) ).setUnlocalizedName( "hoeIron" );
+    public static Item hoeDiamond = ( new FCItemHoe( 37, EnumToolMaterial.EMERALD ) ).setUnlocalizedName( "hoeDiamond" );
+    public static Item hoeGold = ( new FCItemHoe( 38, EnumToolMaterial.GOLD ) ).setUnlocalizedName( "hoeGold" );
+    public static Item seeds = ( new FCItemSeeds( 39, Block.crops.blockID ) ).SetAsBasicChickenFood().setUnlocalizedName( "seeds" ).setCreativeTab( null );
+    public static Item wheat = new FCItemWheatLegacy( 40 );
+    public static Item bread = ( new ItemFood( 41, 3, 0.25F, false ) ).setUnlocalizedName( "bread" );
+    // END FCMOD
+    // FCMOD: Changed
+    /*
     public static ItemArmor helmetLeather = (ItemArmor)(new ItemArmor(42, EnumArmorMaterial.CLOTH, 0, 0)).setUnlocalizedName("helmetCloth");
     public static ItemArmor plateLeather = (ItemArmor)(new ItemArmor(43, EnumArmorMaterial.CLOTH, 0, 1)).setUnlocalizedName("chestplateCloth");
     public static ItemArmor legsLeather = (ItemArmor)(new ItemArmor(44, EnumArmorMaterial.CLOTH, 0, 2)).setUnlocalizedName("leggingsCloth");
@@ -74,6 +138,30 @@
     public static ItemArmor plateGold = (ItemArmor)(new ItemArmor(59, EnumArmorMaterial.GOLD, 4, 1)).setUnlocalizedName("chestplateGold");
     public static ItemArmor legsGold = (ItemArmor)(new ItemArmor(60, EnumArmorMaterial.GOLD, 4, 2)).setUnlocalizedName("leggingsGold");
     public static ItemArmor bootsGold = (ItemArmor)(new ItemArmor(61, EnumArmorMaterial.GOLD, 4, 3)).setUnlocalizedName("bootsGold");
+    */
+    public static ItemArmor helmetLeather = (ItemArmor)( new FCItemArmorLeather( 42, 0 ) ).setUnlocalizedName( "helmetCloth" );
+    public static ItemArmor plateLeather = (ItemArmor)( new FCItemArmorLeather( 43, 1 ) ).setUnlocalizedName( "chestplateCloth" );
+    public static ItemArmor legsLeather = (ItemArmor)( new FCItemArmorLeather( 44, 2 ) ).setUnlocalizedName( "leggingsCloth" );
+    public static ItemArmor bootsLeather = (ItemArmor)( new FCItemArmorLeather( 45, 3 ) ).setUnlocalizedName( "bootsCloth" );    
+    public static ItemArmor helmetChain = (ItemArmor)( new FCItemArmorChain( 46, 0, 3 ) ).setUnlocalizedName( "helmetChain" );
+    public static ItemArmor plateChain = (ItemArmor)( new FCItemArmorChain( 47, 1, 4 ) ).setUnlocalizedName( "chestplateChain" );
+    public static ItemArmor legsChain = (ItemArmor)( new FCItemArmorChain( 48, 2, 4 ) ).setUnlocalizedName( "leggingsChain" );
+    public static ItemArmor bootsChain = (ItemArmor)( new FCItemArmorChain( 49, 3, 2 ) ).setUnlocalizedName( "bootsChain" );
+    public static ItemArmor helmetIron = (ItemArmor)( new FCItemArmorIron( 50, 0, 5 ) ).setUnlocalizedName( "helmetIron" );
+    public static ItemArmor plateIron = (ItemArmor)( new FCItemArmorIron( 51, 1, 8 ) ).setUnlocalizedName( "chestplateIron" );
+    public static ItemArmor legsIron = (ItemArmor)( new FCItemArmorIron( 52, 2, 7 ) ).setUnlocalizedName( "leggingsIron" );
+    public static ItemArmor bootsIron = (ItemArmor)( new FCItemArmorIron( 53, 3, 4 ) ).setUnlocalizedName( "bootsIron" );
+    public static ItemArmor helmetDiamond = (ItemArmor)( new FCItemArmorDiamond( 54, 0, 5 ) ).setUnlocalizedName( "helmetDiamond" );
+    public static ItemArmor plateDiamond = (ItemArmor)( new FCItemArmorDiamond( 55, 1, 8 ) ).setUnlocalizedName( "chestplateDiamond" );
+    public static ItemArmor legsDiamond = (ItemArmor)( new FCItemArmorDiamond( 56, 2, 7 ) ).setUnlocalizedName( "leggingsDiamond" );
+    public static ItemArmor bootsDiamond = (ItemArmor)( new FCItemArmorDiamond( 57, 3, 4 ) ).setUnlocalizedName( "bootsDiamond" );
+    public static ItemArmor helmetGold = (ItemArmor)( new FCItemArmorGold( 58, 0, 5 ) ).setUnlocalizedName( "helmetGold" );
+    public static ItemArmor plateGold = (ItemArmor)( new FCItemArmorGold( 59, 1, 8 ) ).setUnlocalizedName( "chestplateGold" );
+    public static ItemArmor legsGold = (ItemArmor)( new FCItemArmorGold( 60, 2, 7 ) ).setUnlocalizedName( "leggingsGold" );
+    public static ItemArmor bootsGold = (ItemArmor)( new FCItemArmorGold( 61, 3, 4 ) ).setUnlocalizedName( "bootsGold" );
+    // END FCMOD
+    // FCMOD: Changed
+    /*
     public static Item flint = (new Item(62)).setUnlocalizedName("flint").setCreativeTab(CreativeTabs.tabMaterials);
     public static Item porkRaw = (new ItemFood(63, 3, 0.3F, true)).setUnlocalizedName("porkchopRaw");
     public static Item porkCooked = (new ItemFood(64, 8, 0.8F, true)).setUnlocalizedName("porkchopCooked");
@@ -84,9 +172,29 @@
     public static Item bucketEmpty = (new ItemBucket(69, 0)).setUnlocalizedName("bucket").setMaxStackSize(16);
     public static Item bucketWater = (new ItemBucket(70, Block.waterMoving.blockID)).setUnlocalizedName("bucketWater").setContainerItem(bucketEmpty);
     public static Item bucketLava = (new ItemBucket(71, Block.lavaMoving.blockID)).setUnlocalizedName("bucketLava").setContainerItem(bucketEmpty);
+    */
+    public static Item flint = new FCItemFlint( 62 );
+    public static Item porkRaw = ( new FCItemFood( 63, FCItemFood.m_iPorkChopRawHungerHealed, FCItemFood.m_fPorkChopSaturationModifier, true, "porkchopRaw", true ) ).SetStandardFoodPoisoningEffect();    
+    public static Item porkCooked = ( new ItemFood( 64, FCItemFood.m_iPorkChopCookedHungerHealed, FCItemFood.m_fPorkChopSaturationModifier, true ) ).setUnlocalizedName( "porkchopCooked" );    
+    public static Item painting = ( new ItemHangingEntity( 65, EntityPainting.class ) ).SetBuoyant().SetIncineratedInCrucible().setUnlocalizedName( "painting" );
+    public static Item appleGold = ( new ItemAppleGold( 66, 1, 0F, false ) ).setAlwaysEdible().setPotionEffect( Potion.regeneration.id, 5, 0, 1F ).SetNonBuoyant().SetNotIncineratedInCrucible().SetFilterableProperties( m_iFilterable_Small ).setUnlocalizedName( "appleGold" );
+    public static Item sign = new FCItemSign( 67 );
+    public static Item doorWood = new FCItemDoorWood( 68 );	    
+    public static Item bucketEmpty = new FCItemBucketEmpty( 69 );
+    public static Item bucketWater = new FCItemBucketWater( 70 );
+    public static Item bucketLava = new FCItemBucketLava( 71 );
+    // END FCMOD
+    // FCMOD: Changed
+    /*
     public static Item minecartEmpty = (new ItemMinecart(72, 0)).setUnlocalizedName("minecart");
     public static Item saddle = (new ItemSaddle(73)).setUnlocalizedName("saddle");
+    */
+    public static Item minecartEmpty = ( new FCItemMinecart( 72, 0 ) ).setUnlocalizedName( "minecart" );
+    public static Item saddle = ( new ItemSaddle( 73 ) ).SetBuoyant().SetIncineratedInCrucible().setUnlocalizedName( "saddle" );
+    // END FCMOD
     public static Item doorIron = (new ItemDoor(74, Material.iron)).setUnlocalizedName("doorIron");
+    // FCMOD: Changed
+    /*
     public static Item redstone = (new ItemRedstone(75)).setUnlocalizedName("redstone").setPotionEffect(PotionHelper.redstoneEffect);
     public static Item snowball = (new ItemSnowball(76)).setUnlocalizedName("snowball");
     public static Item boat = (new ItemBoat(77)).setUnlocalizedName("boat");
@@ -98,12 +206,39 @@
     public static Item paper = (new Item(83)).setUnlocalizedName("paper").setCreativeTab(CreativeTabs.tabMisc);
     public static Item book = (new ItemBook(84)).setUnlocalizedName("book").setCreativeTab(CreativeTabs.tabMisc);
     public static Item slimeBall = (new Item(85)).setUnlocalizedName("slimeball").setCreativeTab(CreativeTabs.tabMisc);
+    */
+    public static Item redstone = new FCItemRedstone( 75 );
+    public static Item snowball = new FCItemSnowball( 76 );
+    public static Item boat = new FCItemBoat( 77 );
+    public static Item leather = ( new Item( 78 ) ).SetBuoyant().SetIncineratedInCrucible().SetFilterableProperties( m_iFilterable_Thin ).setUnlocalizedName( "leather" ).setCreativeTab( CreativeTabs.tabMaterials );
+    public static Item bucketMilk = new FCItemBucketMilk( 79 );    	
+    public static Item brick = new FCItemBrick( 80 );
+    public static Item clay = new FCItemClay( 81 );
+    public static Item reed = ( new ItemReed( 82, Block.reed ) ).SetBuoyant().SetFurnaceBurnTime( FCEnumFurnaceBurnTime.KINDLING ).SetIncineratedInCrucible().SetFilterableProperties( m_iFilterable_Narrow ).setUnlocalizedName( "reeds" ).setCreativeTab( CreativeTabs.tabMaterials );
+    public static Item paper = ( new Item( 83 ) ).SetBuoyant().SetBellowsBlowDistance( 3 ).SetFurnaceBurnTime( FCEnumFurnaceBurnTime.KINDLING ).SetIncineratedInCrucible().SetFilterableProperties( m_iFilterable_Small | m_iFilterable_Thin ).setUnlocalizedName( "paper" ).setCreativeTab( CreativeTabs.tabMisc );
+    public static Item book = new FCItemBook( 84 );
+    public static Item slimeBall = new FCItemSlimeball( 85 );    
+    // END FCMOD    
+    // FCMOD: Changed
+    /*
     public static Item minecartCrate = (new ItemMinecart(86, 1)).setUnlocalizedName("minecartChest");
     public static Item minecartPowered = (new ItemMinecart(87, 2)).setUnlocalizedName("minecartFurnace");
     public static Item egg = (new ItemEgg(88)).setUnlocalizedName("egg");
+    */
+    public static Item minecartCrate = ( new FCItemMinecart( 86, 1 ) ).setUnlocalizedName( "minecartChest" );
+    public static Item minecartPowered = ( new FCItemMinecart( 87, 2 ) ).setUnlocalizedName( "minecartFurnace" );
+    public static Item egg = new FCItemEgg( 88 );
+    // END FCMOD
     public static Item compass = (new Item(89)).setUnlocalizedName("compass").setCreativeTab(CreativeTabs.tabTools);
+    // FCMOD: Changed
+    /*
     public static ItemFishingRod fishingRod = (ItemFishingRod)(new ItemFishingRod(90)).setUnlocalizedName("fishingRod");
+    */
+    public static ItemFishingRod fishingRod = new FCItemFishingRod( 90 );
+    // END FCMOD
     public static Item pocketSundial = (new Item(91)).setUnlocalizedName("clock").setCreativeTab(CreativeTabs.tabTools);
+    // FCMOD: Changed
+    /*
     public static Item lightStoneDust = (new Item(92)).setUnlocalizedName("yellowDust").setPotionEffect(PotionHelper.glowstoneEffect).setCreativeTab(CreativeTabs.tabMaterials);
     public static Item fishRaw = (new ItemFood(93, 2, 0.3F, false)).setUnlocalizedName("fishRaw");
     public static Item fishCooked = (new ItemFood(94, 5, 0.6F, false)).setUnlocalizedName("fishCooked");
@@ -115,10 +250,6 @@
     public static Item redstoneRepeater = (new ItemReed(100, Block.redstoneRepeaterIdle)).setUnlocalizedName("diode").setCreativeTab(CreativeTabs.tabRedstone);
     public static Item cookie = (new ItemFood(101, 2, 0.1F, false)).setUnlocalizedName("cookie");
     public static ItemMap map = (ItemMap)(new ItemMap(102)).setUnlocalizedName("map");
-
-    /**
-     * Item introduced on 1.7 version, is a shear to cut leaves (you can keep the block) or get wool from sheeps.
-     */
     public static ItemShears shears = (ItemShears)(new ItemShears(103)).setUnlocalizedName("shears");
     public static Item melon = (new ItemFood(104, 2, 0.3F, false)).setUnlocalizedName("melon");
     public static Item pumpkinSeeds = (new ItemSeeds(105, Block.pumpkinStem.blockID, Block.tilledField.blockID)).setUnlocalizedName("seeds_pumpkin");
@@ -128,6 +259,30 @@
     public static Item chickenRaw = (new ItemFood(109, 2, 0.3F, true)).setPotionEffect(Potion.hunger.id, 30, 0, 0.3F).setUnlocalizedName("chickenRaw");
     public static Item chickenCooked = (new ItemFood(110, 6, 0.6F, true)).setUnlocalizedName("chickenCooked");
     public static Item rottenFlesh = (new ItemFood(111, 4, 0.1F, true)).setPotionEffect(Potion.hunger.id, 30, 0, 0.8F).setUnlocalizedName("rottenFlesh");
+    */
+    public static Item lightStoneDust = ( new Item( 92 ) ).SetBellowsBlowDistance( 3 ).SetFilterableProperties( m_iFilterable_Fine ).setUnlocalizedName( "yellowDust" ).setCreativeTab( CreativeTabs.tabMaterials );    
+    public static Item fishRaw = ( new FCItemFood( 93, FCItemFood.m_iFishRawHungerHealed, FCItemFood.m_fFishSaturationModifier, false, "fishRaw" ) ).SetStandardFoodPoisoningEffect();
+    public static Item fishCooked = ( new ItemFood( 94, FCItemFood.m_iFishCookedHungerHealed, FCItemFood.m_fFishSaturationModifier, false ) ).setUnlocalizedName( "fishCooked" );
+    public static Item dyePowder = new FCItemDye( 95 );
+    public static Item bone = new FCItemBone( 96 );
+    public static Item sugar = ( new Item( 97 ) ).SetBuoyant().SetBellowsBlowDistance( 3 ).SetIncineratedInCrucible().SetFilterableProperties( m_iFilterable_Fine ).setUnlocalizedName( "sugar" ).setCreativeTab( CreativeTabs.tabMaterials );	    
+    public static Item cake = ( new ItemReed( 98, Block.cake ) ).SetBuoyant().SetIncineratedInCrucible().setMaxStackSize( 1 ).setUnlocalizedName( "cake" ).setCreativeTab( CreativeTabs.tabFood );
+    public static Item bed = ( new ItemBed( 99 ) ).SetBuoyant().SetIncineratedInCrucible().setMaxStackSize( 1 ).setUnlocalizedName( "bed" );
+    public static Item redstoneRepeater = new FCItemRedstoneRepeater( 100 );
+    public static Item cookie = ( new ItemFood( 101, 1, 1F, false ) ).setAlwaysEdible().SetFilterableProperties( m_iFilterable_Small ).setUnlocalizedName( "cookie" );
+    public static ItemMap map = new FCItemMap( 102 );
+    public static ItemShears shears = (ItemShears)( new FCItemShears( 103 ) ).setUnlocalizedName( "shears" );
+    public static Item melon = new FCItemFoodHighRes( 104, 2, 0F, false, "melon" );
+    public static Item pumpkinSeeds = ( new FCItemSeedFood( 105, 1, 0F, Block.pumpkinStem.blockID ) ).SetAsBasicChickenFood().SetBellowsBlowDistance( 2 ).SetFilterableProperties( m_iFilterable_Fine ).setUnlocalizedName( "seeds_pumpkin" );
+    public static Item melonSeeds = ( new FCItemSeeds( 106, Block.melonStem.blockID ) ).SetAsBasicChickenFood().setUnlocalizedName( "seeds_melon" );
+    public static Item beefRaw = ( new FCItemFood( 107, FCItemFood.m_iBeefRawHungerHealed, FCItemFood.m_fBeefSaturationModifier, true, "beefRaw", true ) ).SetStandardFoodPoisoningEffect();    
+    public static Item beefCooked = ( new ItemFood( 108, FCItemFood.m_iBeefCookedHungerHealed, FCItemFood.m_fBeefSaturationModifier, true ) ).setUnlocalizedName("beefCooked");
+    public static Item chickenRaw = ( new FCItemFood( 109, FCItemFood.m_iChickenRawHungerHealed, FCItemFood.m_fChickenSaturationModifier, true, "chickenRaw" ) ).SetStandardFoodPoisoningEffect();    
+    public static Item chickenCooked = (new ItemFood( 110, FCItemFood.m_iChickenCookedHungerHealed, FCItemFood.m_fChickenSaturationModifier, true ) ).setUnlocalizedName( "chickenCooked" );    
+    public static Item rottenFlesh = new FCItemRottenFlesh( 111 );
+    // END FCMOD
+    // FCMOD: Changed
+    /*
     public static Item enderPearl = (new ItemEnderPearl(112)).setUnlocalizedName("enderPearl");
     public static Item blazeRod = (new Item(113)).setUnlocalizedName("blazeRod").setCreativeTab(CreativeTabs.tabMaterials);
     public static Item ghastTear = (new Item(114)).setUnlocalizedName("ghastTear").setPotionEffect(PotionHelper.ghastTearEffect).setCreativeTab(CreativeTabs.tabBrewing);
@@ -139,10 +294,29 @@
     public static Item fermentedSpiderEye = (new Item(120)).setUnlocalizedName("fermentedSpiderEye").setPotionEffect(PotionHelper.fermentedSpiderEyeEffect).setCreativeTab(CreativeTabs.tabBrewing);
     public static Item blazePowder = (new Item(121)).setUnlocalizedName("blazePowder").setPotionEffect(PotionHelper.blazePowderEffect).setCreativeTab(CreativeTabs.tabBrewing);
     public static Item magmaCream = (new Item(122)).setUnlocalizedName("magmaCream").setPotionEffect(PotionHelper.magmaCreamEffect).setCreativeTab(CreativeTabs.tabBrewing);
+    */
+    public static Item enderPearl = ( new ItemEnderPearl( 112 ) ).SetFilterableProperties( m_iFilterable_Small ).setUnlocalizedName( "enderPearl" );
+    public static Item blazeRod = ( new Item( 113 ) ).SetFurnaceBurnTime( FCEnumFurnaceBurnTime.BLAZE_ROD ).SetFilterableProperties( m_iFilterable_Narrow ).setUnlocalizedName( "blazeRod" ).setCreativeTab( CreativeTabs.tabMaterials );
+    public static Item ghastTear = ( new Item( 114 ) ).SetFilterableProperties( m_iFilterable_Small ).setUnlocalizedName( "ghastTear" ).setPotionEffect( PotionHelper.ghastTearEffect ).setCreativeTab( CreativeTabs.tabBrewing );
+    public static Item goldNugget = ( new Item( 115 ) ).SetFilterableProperties( m_iFilterable_Small ).setUnlocalizedName( "goldNugget" ).setCreativeTab( CreativeTabs.tabMaterials );
+    public static Item netherStalkSeeds = ( new FCItemSeeds( 116, Block.netherStalk.blockID ) ).SetBellowsBlowDistance( 1 ).setUnlocalizedName( "netherStalkSeeds" ).setPotionEffect( "+4" );
+    public static ItemPotion potion = new FCItemPotion( 117 );
+    public static Item glassBottle = ( new FCItemGlassBottle( 118 ) ).SetBuoyant().setUnlocalizedName( "glassBottle" );
+    public static Item spiderEye = ( (new ItemFood( 119, 2, 0.8F, false ) ).setPotionEffect( Potion.poison.id, 5, 0, 1F ) ).SetNeutralBuoyant().SetFilterableProperties( m_iFilterable_Small ).setPotionEffect( PotionHelper.goldenCarrotEffect ).setUnlocalizedName( "spiderEye" );
+    public static Item fermentedSpiderEye = ( new Item( 120 ) ).SetNeutralBuoyant().SetIncineratedInCrucible().SetFilterableProperties( m_iFilterable_Small ).setUnlocalizedName( "fermentedSpiderEye" ).setPotionEffect( PotionHelper.fermentedSpiderEyeEffect ).setCreativeTab( CreativeTabs.tabBrewing );
+    public static Item blazePowder = ( new Item( 121 ) ).SetBellowsBlowDistance( 3 ).SetFilterableProperties( m_iFilterable_Fine ).setUnlocalizedName( "blazePowder" ).setPotionEffect( PotionHelper.blazePowderEffect ).setCreativeTab( CreativeTabs.tabBrewing );
+    public static Item magmaCream = ( new Item( 122 ) ).SetNeutralBuoyant().setUnlocalizedName( "magmaCream" ).setPotionEffect( PotionHelper.magmaCreamEffect ).setCreativeTab( CreativeTabs.tabBrewing );
+    // END FCMOD
     public static Item brewingStand = (new ItemReed(123, Block.brewingStand)).setUnlocalizedName("brewingStand").setCreativeTab(CreativeTabs.tabBrewing);
     public static Item cauldron = (new ItemReed(124, Block.cauldron)).setUnlocalizedName("cauldron").setCreativeTab(CreativeTabs.tabBrewing);
+    // FCMOD: Changed
+    /*
     public static Item eyeOfEnder = (new ItemEnderEye(125)).setUnlocalizedName("eyeOfEnder");
     public static Item speckledMelon = (new Item(126)).setUnlocalizedName("speckledMelon").setPotionEffect(PotionHelper.speckledMelonEffect).setCreativeTab(CreativeTabs.tabBrewing);
+    */
+    public static Item eyeOfEnder = ( new ItemEnderEye( 125 ) ).SetFilterableProperties( m_iFilterable_Small ).setUnlocalizedName( "eyeOfEnder" );
+    public static Item speckledMelon = ( new Item( 126 ) ).setUnlocalizedName( "speckledMelon" ).setCreativeTab( CreativeTabs.tabFood );
+    // END FCMOD
     public static Item monsterPlacer = (new ItemMonsterPlacer(127)).setUnlocalizedName("monsterPlacer");
 
     /**
@@ -150,13 +324,19 @@
      */
     public static Item expBottle = (new ItemExpBottle(128)).setUnlocalizedName("expBottle");
 
-    /**
-     * Fire Charge. When used in a dispenser it fires a fireball similiar to a Ghast's.
-     */
+    // FCMOD: Changed
+    /*
     public static Item fireballCharge = (new ItemFireball(129)).setUnlocalizedName("fireball");
     public static Item writableBook = (new ItemWritableBook(130)).setUnlocalizedName("writingBook").setCreativeTab(CreativeTabs.tabMisc);
     public static Item writtenBook = (new ItemEditableBook(131)).setUnlocalizedName("writtenBook");
+    */
+    public static Item fireballCharge = new FCItemFireCharge( 129 );
+    public static Item writableBook = ( new ItemWritableBook( 130 ) ).SetBuoyant().SetIncineratedInCrucible().setUnlocalizedName( "writingBook" ).setCreativeTab( CreativeTabs.tabMisc );
+    public static Item writtenBook = ( new ItemEditableBook( 131 ) ).SetBuoyant().SetIncineratedInCrucible().setUnlocalizedName( "writtenBook" );
+    // END FCMOD
     public static Item emerald = (new Item(132)).setUnlocalizedName("emerald").setCreativeTab(CreativeTabs.tabMaterials);
+    // FCMOD: Changed
+    /*
     public static Item itemFrame = (new ItemHangingEntity(133, EntityItemFrame.class)).setUnlocalizedName("frame");
     public static Item flowerPot = (new ItemReed(134, Block.flowerPot)).setUnlocalizedName("flowerPot").setCreativeTab(CreativeTabs.tabDecorations);
     public static Item carrot = (new ItemSeedFood(135, 4, 0.6F, Block.carrot.blockID, Block.tilledField.blockID)).setUnlocalizedName("carrots");
@@ -169,14 +349,54 @@
     public static Item carrotOnAStick = (new ItemCarrotOnAStick(142)).setUnlocalizedName("carrotOnAStick");
     public static Item netherStar = (new ItemSimpleFoiled(143)).setUnlocalizedName("netherStar").setCreativeTab(CreativeTabs.tabMaterials);
     public static Item pumpkinPie = (new ItemFood(144, 8, 0.3F, false)).setUnlocalizedName("pumpkinPie").setCreativeTab(CreativeTabs.tabFood);
+    */
+    public static Item itemFrame = ( new ItemHangingEntity( 133, EntityItemFrame.class ) ).SetBuoyant().SetIncineratedInCrucible().SetFilterableProperties( m_iFilterable_SolidBlock ).setUnlocalizedName( "frame" );
+    public static Item flowerPot = ( new ItemReed( 134, Block.flowerPot ) ).SetBuoyant().SetFilterableProperties( m_iFilterable_SolidBlock ).setUnlocalizedName( "flowerPot" ).setCreativeTab( CreativeTabs.tabDecorations );
+    public static Item carrot = ( new FCItemSeedFood( 135, 3, 0F, Block.carrot.blockID ) ).SetFilterableProperties( m_iFilterable_Small ).SetAsBasicPigFood().setUnlocalizedName( "carrots" );
+    public static Item potato = ( new FCItemSeedFood( 136, 3, 0F, Block.potato.blockID ) ).SetFilterableProperties( m_iFilterable_Small ).SetAsBasicPigFood().setUnlocalizedName( "potato" );
+    public static Item bakedPotato = ( new ItemFood( 137, 2, 0F, false ) ).SetFilterableProperties( m_iFilterable_Small ).SetAsBasicPigFood().setUnlocalizedName( "potatoBaked" );	    
+    public static Item poisonousPotato = ( new ItemFood( 138, 1, 0F, false ) ).setPotionEffect( Potion.poison.id, 5, 0, 0.6F ).SetFilterableProperties( m_iFilterable_Small ).setUnlocalizedName( "potatoPoisonous" );
+    public static ItemEmptyMap emptyMap = new FCItemEmptyMap( 139 );
+    public static Item goldenCarrot = ( new ItemFood( 140, 1, 0F, false ) ).SetNonBuoyant().SetFilterableProperties( m_iFilterable_Small ).setUnlocalizedName( "carrotGolden" );
+    public static Item skull = ( new ItemSkull( 141 ) ).SetBuoyant().SetIncineratedInCrucible().SetFilterableProperties( m_iFilterable_SolidBlock ).setUnlocalizedName( "skull" );
+    public static Item carrotOnAStick = new FCItemCarrotOnAStick( 142 );
+    public static Item netherStar = new FCItemNetherStar( 143 );
+    public static Item pumpkinPie = ( new ItemFood( 144, 2, 2.5F, false ) ).setAlwaysEdible().setUnlocalizedName( "pumpkinPie" ).setCreativeTab( CreativeTabs.tabFood );	    
+    // END FCMOD
     public static Item firework = (new ItemFirework(145)).setUnlocalizedName("fireworks");
     public static Item fireworkCharge = (new ItemFireworkCharge(146)).setUnlocalizedName("fireworksCharge").setCreativeTab(CreativeTabs.tabMisc);
+    // FCMOD: Changed
+    /*
     public static ItemEnchantedBook enchantedBook = (ItemEnchantedBook)(new ItemEnchantedBook(147)).setMaxStackSize(1).setUnlocalizedName("enchantedBook");
     public static Item comparator = (new ItemReed(148, Block.redstoneComparatorIdle)).setUnlocalizedName("comparator").setCreativeTab(CreativeTabs.tabRedstone);
     public static Item netherrackBrick = (new Item(149)).setUnlocalizedName("netherbrick").setCreativeTab(CreativeTabs.tabMaterials);
     public static Item netherQuartz = (new Item(150)).setUnlocalizedName("netherquartz").setCreativeTab(CreativeTabs.tabMaterials);
+    */
+    public static ItemEnchantedBook enchantedBook = (ItemEnchantedBook)( new FCItemEnchantedBook( 147 ) ).setMaxStackSize( 1 ).setUnlocalizedName( "enchantedBook" );
+    public static Item comparator = ( new FCItemStub( 148 ) ).setUnlocalizedName( "comparator" );
+    public static Item netherrackBrick = ( new Item(149 ) ).setUnlocalizedName( "netherbrick" );
+    public static Item netherQuartz = ( new FCItemNetherQuartz( 150 ) ).setUnlocalizedName( "netherquartz" ).setCreativeTab( CreativeTabs.tabMaterials );
+    // END FCMOD
+    // FCMOD: Changed
+    /*
     public static Item minecartTnt = (new ItemMinecart(151, 3)).setUnlocalizedName("minecartTnt");
     public static Item minecartHopper = (new ItemMinecart(152, 5)).setUnlocalizedName("minecartHopper");
+    */
+    // client
+    public static Item minecartTnt = ( new FCItemStub( 151 ) ).setUnlocalizedName( "minecartTnt" );
+    public static Item minecartHopper = ( new FCItemStub( 152 ) ).setUnlocalizedName( "minecartHopper" );
+    // Added aliases to avoid annoying naming differences between client and server
+    public static Item tntMinecart = minecartTnt;
+    public static Item hopperMinecart = minecartHopper;
+    // server
+    //public static Item tntMinecart = ( new FCItemStub( 151 ) ).setUnlocalizedName( "minecartTnt" );
+    //public static Item hopperMinecart = ( new FCItemStub( 152 ) ).setUnlocalizedName( "minecartHopper" );
+    // Added aliases to avoid annoying naming differences between client and server
+    //public static Item minecartTnt = tntMinecart;
+    //public static Item minecartHopper = hopperMinecart;
+    // END FCMOD
+    // FCMOD: Changed
+    /*
     public static Item record13 = (new ItemRecord(2000, "13")).setUnlocalizedName("record");
     public static Item recordCat = (new ItemRecord(2001, "cat")).setUnlocalizedName("record");
     public static Item recordBlocks = (new ItemRecord(2002, "blocks")).setUnlocalizedName("record");
@@ -189,6 +409,20 @@
     public static Item recordWard = (new ItemRecord(2009, "ward")).setUnlocalizedName("record");
     public static Item record11 = (new ItemRecord(2010, "11")).setUnlocalizedName("record");
     public static Item recordWait = (new ItemRecord(2011, "wait")).setUnlocalizedName("record");
+    */
+    public static Item record13 = (new ItemRecord(2000, "13")).setUnlocalizedName("record");
+    public static Item recordCat = (new ItemRecord(2001, "cat")).setUnlocalizedName("record").setCreativeTab( null );
+    public static Item recordBlocks = (new ItemRecord(2002, "blocks")).setUnlocalizedName("record").setCreativeTab( null );
+    public static Item recordChirp = (new ItemRecord(2003, "chirp")).setUnlocalizedName("record").setCreativeTab( null );
+    public static Item recordFar = (new ItemRecord(2004, "far")).setUnlocalizedName("record").setCreativeTab( null );
+    public static Item recordMall = (new ItemRecord(2005, "mall")).setUnlocalizedName("record").setCreativeTab( null );
+    public static Item recordMellohi = (new ItemRecord(2006, "mellohi")).setUnlocalizedName("record").setCreativeTab( null );
+    public static Item recordStal = (new ItemRecord(2007, "stal")).setUnlocalizedName("record").setCreativeTab( null );
+    public static Item recordStrad = (new ItemRecord(2008, "strad")).setUnlocalizedName("record").setCreativeTab( null );
+    public static Item recordWard = (new ItemRecord(2009, "ward")).setUnlocalizedName("record").setCreativeTab( null );
+    public static Item record11 = (new ItemRecord(2010, "11")).setUnlocalizedName("record").setCreativeTab( null );
+    public static Item recordWait = (new ItemRecord(2011, "wait")).setUnlocalizedName("record").setCreativeTab( null );
+    // END FCMOD
 
     /** The ID of this item. */
     public final int itemID;
@@ -219,6 +453,9 @@
     {
         this.itemID = 256 + par1;
 
+        // FCMOD: Code added
+        if ( !m_bSuppressConflictWarnings )
+    	// END FCMOD
         if (itemsList[256 + par1] != null)
         {
             System.out.println("CONFLICT @ " + par1);
@@ -270,10 +507,14 @@
      * Returns the strength of the stack against a given block. 1.0F base, (Quality+1)*2 if correct blocktype, 1.5F if
      * sword
      */
+    // FCMOD: Removed and replaced later
+    /*
     public float getStrVsBlock(ItemStack par1ItemStack, Block par2Block)
     {
         return 1.0F;
     }
+    */
+    // END FCMOD
 
     /**
      * Called whenever this item is equipped and the right mouse button is pressed. Args: itemStack, world, entityPlayer
@@ -362,10 +603,14 @@
     /**
      * Returns if the item (tool) can harvest results from the block type.
      */
+    // FCMOD: Removed and replaced
+    /*
     public boolean canHarvestBlock(Block par1Block)
     {
         return false;
     }
+    */
+    // END FCMOD    
 
     /**
      * Called when a player right clicks an entity with an item.
@@ -491,7 +736,10 @@
      * Called each tick as long the item is on a player inventory. Uses by maps to check if is on a player hand and
      * update it's contents.
      */
-    public void onUpdate(ItemStack par1ItemStack, World par2World, Entity par3Entity, int par4, boolean par5) {}
+    // FCMOD: Changed
+    //public void onUpdate(ItemStack par1ItemStack, World par2World, Entity par3Entity, int par4, boolean par5) {}
+    public void onUpdate( ItemStack stack, World world, EntityPlayer entity, int iInventorySlot, boolean bIsHandHeldItem ) {}
+    // END FCMOD
 
     /**
      * Called when item is crafted/smelted. Used only by maps so far.
@@ -671,4 +919,416 @@
     {
         StatList.initStats();
     }
+
+	// FCMOD: Added New
+    public static boolean m_bSuppressConflictWarnings = false;
+    
+    /**
+     * Method which replaces canPlaceItemBlockOnSide() in ItemBlock. Allows the client to prevent item usage before it is relayed
+     * to the server by returning false.  Only called on client.
+     */    
+    public boolean CanItemBeUsedByPlayer( World world, int i, int j, int k, int iFacing, EntityPlayer player, ItemStack stack )
+    {
+    	return true;    	
 }
+    
+    public boolean DoZombiesConsume()
+    {
+    	return false;
+    }
+    
+    public boolean IsEfficientVsBlock( ItemStack stack, World world, Block block, int i, int j, int k )
+    {
+        return false;
+    }
+    
+    public boolean canHarvestBlock( ItemStack stack, World world, Block block, int i, int j, int k )
+    {
+        return false;
+    }
+    
+    public float getStrVsBlock( ItemStack stack, World world, Block block, int i, int j, int k )
+    {
+        return 1F;
+    }
+    
+    public boolean IsMultiUsePerClick()
+    {
+    	return true;
+    }
+    
+    public float GetExhaustionOnUsedToHarvestBlock( int iBlockID, World world, int i, int j, int k, int iBlockMetadata )
+    {
+    	return 0.025F; // standard default exhaustion amount
+    }
+    
+    public void InitializeStackOnGiveCommand( Random rand, ItemStack stack )
+    {
+    }
+    
+    public void UpdateUsingItem( ItemStack stack, World world, EntityPlayer player )
+    {
+    }
+    
+    public int GetItemUseWarmupDuration()
+    {
+    	return 7;
+    }
+    
+    public boolean IgnoreDamageWhenComparingDuringUse()
+    {
+    	return false;
+    }
+
+    //----------- Animal Food related functionality -----------//
+    
+    public static final int m_iBaseHerbivoreItemFoodValue = ( EntityAnimal.m_iBaseGrazeFoodValue * 4 );
+    public static final int m_iBasePigItemFoodValue = ( EntityAnimal.m_iBaseGrazeFoodValue * 4 );
+    public static final int m_iBaseChickenItemFoodValue = ( EntityAnimal.m_iBaseGrazeFoodValue * 8 );
+
+    private int m_iHerbivoreFoodValue = 0;
+    private int m_iBirdFoodValue = 0;
+    private int m_iPigFoodValue = 0;
+    
+    public int GetHerbivoreFoodValue( int iItemDamage )
+    {
+    	return m_iHerbivoreFoodValue;
+    }
+    
+    public Item SetHerbivoreFoodValue( int iFoodValue )
+    {
+    	m_iHerbivoreFoodValue = iFoodValue;
+    	
+    	return this;
+    }
+    
+    public Item SetAsBasicHerbivoreFood()
+    {
+    	return SetHerbivoreFoodValue( m_iBaseHerbivoreItemFoodValue );
+    }
+    
+    public int GetChickenFoodValue( int iItemDamage )
+    {
+    	return m_iBirdFoodValue;
+    }
+    
+    public Item SetChickenFoodValue( int iFoodValue )
+    {
+    	m_iBirdFoodValue = iFoodValue;
+    	
+    	return this;
+    }
+    
+    public Item SetAsBasicChickenFood()
+    {
+    	return SetChickenFoodValue( m_iBaseChickenItemFoodValue );
+    }
+    
+    public int GetPigFoodValue( int iItemDamage )
+    {
+    	return m_iPigFoodValue;
+    }
+    
+    public Item SetPigFoodValue( int iFoodValue )
+    {
+    	m_iPigFoodValue = iFoodValue;
+    	
+    	return this;
+    }
+    
+    public Item SetAsBasicPigFood()
+    {
+    	return SetPigFoodValue( m_iBasePigItemFoodValue );
+    }
+    
+    public boolean IsWolfFood()
+    {
+    	return false;
+    }
+    
+    public int GetWolfHealAmount()
+    {
+    	return 0;
+    }
+    
+    //------------- Buoyancy related functionality ------------//
+    
+	private float m_fBuoyancy = -1.0F;
+	
+    public Item SetBuoyancy( float fBuoyancy )
+    {
+    	m_fBuoyancy = fBuoyancy;
+    	
+    	return this;
+    }
+    
+    public Item SetBuoyant() { return SetBuoyancy( 1F ); }
+    public Item SetNonBuoyant() { return SetBuoyancy( -1F ); }
+    public Item SetNeutralBuoyant() { return SetBuoyancy( 0F ); }
+    
+    public float GetBuoyancy( int iItemDamage )
+    {
+    	return m_fBuoyancy;
+    }
+    
+    public int GetWeightWhenWorn()
+    {
+    	return 0;
+    }
+    
+    //------------- Bellows related functionality ------------//
+    
+	private int m_iBellowsBlowDistance = 0;
+	
+	/**
+	 * 3 = light powders or light large surface objects like paper or bat wings
+	 * 2 = seeds, dyes, fibers, chunkier powders like ground netherrack or sand, 
+	 * 	   heavier sheets like bark or wicker
+	 * 1 = fabric or wool, small leather like straps, arrows, heavier small mobsdrops like creeper 
+	 * 	   oysters, and witch wart, dirt and gravel, heavy seeds like cocoa beans and netherwart
+	 * 0 = everything else
+	 */
+    public Item SetBellowsBlowDistance( int iDistance )
+    {
+    	m_iBellowsBlowDistance = iDistance;
+    	
+    	return this;
+    }
+    
+    public int GetBellowsBlowDistance( int iItemDamage )
+    {
+    	return m_iBellowsBlowDistance;
+    }
+    
+    //------------- Enchanting related functionality ------------//
+    
+	private int m_iInfernalMaxNumEnchants = 0;
+	private int m_iInfernalMaxEnchantmentCost = 0;
+	
+    public Item SetInfernalMaxNumEnchants( int iMaxNumEnchants )
+    {
+    	m_iInfernalMaxNumEnchants = iMaxNumEnchants;
+    	
+    	return this;
+    }
+    
+    public int GetInfernalMaxNumEnchants()
+    {
+    	return m_iInfernalMaxNumEnchants;
+    }    
+    
+    public Item SetInfernalMaxEnchantmentCost( int iMaxEnchantmentCost )
+    {
+    	m_iInfernalMaxEnchantmentCost = iMaxEnchantmentCost;
+    	
+    	return this;
+    }
+    
+    public int GetInfernalMaxEnchantmentCost()
+    {
+    	return m_iInfernalMaxEnchantmentCost;
+    }
+    
+    public boolean IsEnchantmentApplicable( Enchantment enchantment )
+    {
+    	return enchantment.type == EnumEnchantmentType.all;
+    }
+    
+    //------------- Crafting related functionality ------------//    
+    
+    protected int m_iDefaultFurnaceBurnTime = 0;
+    protected boolean m_bIsInceratedInCrucible = false;
+    
+    public boolean IsConsumedInCrafting()
+    {
+    	return true;
+    }
+    
+    public boolean IsDamagedInCrafting()
+    {
+    	return false;
+    }    
+    
+    public void OnUsedInCrafting( int iItemDamage, EntityPlayer player, ItemStack outputStack )
+    {
+    	OnUsedInCrafting( player, outputStack );
+    }
+    
+    public void OnUsedInCrafting( EntityPlayer player, ItemStack outputStack )
+    {
+    }
+    
+    public void OnDamagedInCrafting( EntityPlayer player )
+    {
+    }
+    
+    public void OnBrokenInCrafting( EntityPlayer player )
+    {
+    }
+    
+    public int GetFurnaceBurnTime( int iItemDamage )
+    {
+    	return m_iDefaultFurnaceBurnTime;
+    }
+    
+    public Item SetFurnaceBurnTime( int iBurnTime )
+    {
+    	m_iDefaultFurnaceBurnTime = iBurnTime;
+    	
+    	return this;
+    }
+    
+    public Item SetFurnaceBurnTime( FCEnumFurnaceBurnTime burnTime )
+    {
+    	SetFurnaceBurnTime( burnTime.m_iBurnTime );
+    	
+    	return this;
+    }
+    
+    public int GetCampfireBurnTime( int iItemDamage )
+    {
+    	return GetFurnaceBurnTime( iItemDamage );
+    }
+    
+    /**
+     * Used to override default activation behavior on certain blocks like accessing inventory on furnace and campfires 
+     */
+    public boolean GetCanItemStartFireOnUse( int iItemDamage )
+    {
+    	return false;
+    }    
+    
+    /**
+     * Used to override default activation behavior on certain blocks like accessing inventory on furnace and campfires 
+     */
+    public boolean GetCanItemBeSetOnFireOnUse( int iItemDamage )
+    {
+    	return false;
+    }
+    
+    public boolean GetCanBeFedDirectlyIntoCampfire( int iItemDamage )
+    {
+		return !GetCanItemBeSetOnFireOnUse( iItemDamage ) && !GetCanItemStartFireOnUse( iItemDamage ) &&
+			GetCampfireBurnTime( iItemDamage ) > 0;
+    }
+    
+    public boolean GetCanBeFedDirectlyIntoBrickOven( int iItemDamage )
+    {
+		return !GetCanItemBeSetOnFireOnUse( iItemDamage ) && !GetCanItemStartFireOnUse( iItemDamage ) &&
+			GetFurnaceBurnTime( iItemDamage ) > 0;
+    }
+    
+    public boolean IsIncineratedInCrucible()
+    {
+    	return m_bIsInceratedInCrucible;
+    }
+    
+    public Item SetIncineratedInCrucible()
+    {
+    	m_bIsInceratedInCrucible = true;
+    	
+    	return this;
+    }
+    
+    public Item SetNotIncineratedInCrucible()
+    {
+    	m_bIsInceratedInCrucible = false;
+    	
+    	return this;
+    }
+    
+    public boolean DoesConsumeContainerItemWhenCrafted( Item containerItem )
+    {
+    	return false;
+    }
+    
+    //------------- Piston Packing related functionality ------------//
+    
+    public boolean IsPistonPackable( ItemStack stack )
+    {
+    	return false;
+    }
+    
+    public int GetRequiredItemCountToPistonPack( ItemStack stack )
+    {
+    	return 0;
+    }
+    
+    public int GetResultingBlockIDOnPistonPack( ItemStack stack )
+    {
+    	return 0;
+    }
+    
+    public int GetResultingBlockMetadataOnPistonPack( ItemStack stack )
+    {
+    	return 0;
+    }
+    
+    //------------- Hopper Filtering Functionality -----------//
+    
+    protected int m_iFilterablePropertiesBitfield = 0;
+    
+    public boolean CanItemPassIfFilter( ItemStack filteredItem )
+    {
+    	return true;
+    }
+    
+    public int GetFilterableProperties( ItemStack stack )
+    {
+    	return m_iFilterablePropertiesBitfield;
+    }
+    
+    public Item SetFilterableProperties( int iProperties )
+    {
+    	m_iFilterablePropertiesBitfield = iProperties;
+    	
+    	return this;
+    }
+    
+    public boolean CanTransformItemIfFilter( ItemStack filteredItem )
+    {
+    	return false;
+    }
+    
+    //------------- Deprecated tool functionality ------------//
+    
+    public static void SetAllPicksToBeEffectiveVsBlock( Block block )
+    {
+    	block.SetPicksEffectiveOn( true );
+    }
+    
+    public static void SetAllAxesToBeEffectiveVsBlock( Block block )
+    {
+    	block.SetAxesEffectiveOn( true );
+    }
+    
+    public static void SetAllShovelsToBeEffectiveVsBlock( Block block )
+    {
+    	block.SetShovelsEffectiveOn( true );
+    }
+    
+    //----- Block Dispenser Related Functionality -----//
+    
+	/**
+	 * This method should return true if the item is successfully placed (in which case the BD will 
+	 * consume the corresponding item in its inventory), false otherwise.  Co-ordinates specify
+	 * the BD position.
+	 */
+	public boolean OnItemUsedByBlockDispenser( ItemStack stack, World world, 
+		int i, int j, int k, int iFacing )
+	{
+		FCBetterThanWolves.fcBlockDispenser.SpitOutItem( world, i, j, k, stack );
+		
+        world.playAuxSFX( 1000, i, j, k, 0 ); // normal pitch click							        
+        
+		return true;
+	}
+	
+	//----------- Client Side Functionality -----------//
+    
+    public Icon GetHopperFilterIcon()
+    {
+    	return null;
+    }
+    // END FCMOD    
+}
