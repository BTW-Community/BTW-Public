--- a/minecraft/net/minecraft/src/BlockStem.java
+++ b/minecraft/net/minecraft/src/BlockStem.java
@@ -1,11 +1,17 @@
 package net.minecraft.src;
 
+import com.prupe.mcpatcher.cc.ColorizeBlock;
 import java.util.Random;
 
 public class BlockStem extends BlockFlower
 {
     /** Defines if it is a Melon or a Pumpkin that the stem is producing. */
+	// FCMOD: Changed
+	/*
     private final Block fruitType;
+    */
+    protected Block fruitType;
+	// END FCMOD
     private Icon theIcon;
 
     protected BlockStem(int par1, Block par2Block)
@@ -170,11 +176,18 @@
      */
     public int getRenderColor(int par1)
     {
+    	if (ColorizeBlock.colorizeBlock(this, par1))
+        {
+            return ColorizeBlock.blockColor;
+        }
+        else
+        {
         int var2 = par1 * 32;
         int var3 = 255 - par1 * 8;
         int var4 = par1 * 4;
         return var2 << 16 | var3 << 8 | var4;
     }
+    }
 
     /**
      * Returns a integer with hex for 0xrrggbb with this color multiplied against the blocks color. Note only called
@@ -182,7 +195,7 @@
      */
     public int colorMultiplier(IBlockAccess par1IBlockAccess, int par2, int par3, int par4)
     {
-        return this.getRenderColor(par1IBlockAccess.getBlockMetadata(par2, par3, par4));
+    	return ColorizeBlock.colorizeBlock(this, par1IBlockAccess, par2, par3, par4) ? ColorizeBlock.blockColor : this.getRenderColor(par1IBlockAccess.getBlockMetadata(par2, par3, par4));
     }
 
     /**
