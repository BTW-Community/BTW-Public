--- a/minecraft/net/minecraft/src/RenderFallingSand.java
+++ b/minecraft/net/minecraft/src/RenderFallingSand.java
@@ -19,8 +19,15 @@
         World var10 = par1EntityFallingSand.getWorld();
         Block var11 = Block.blocksList[par1EntityFallingSand.blockID];
 
+        // FCMOD: Changed (client only)
+        /*
         if (var10.getBlockId(MathHelper.floor_double(par1EntityFallingSand.posX), MathHelper.floor_double(par1EntityFallingSand.posY), MathHelper.floor_double(par1EntityFallingSand.posZ)) != par1EntityFallingSand.blockID)
         {
+        */
+        if ( ShouldRender( var10, par1EntityFallingSand ) )
+        {
+            shadowSize = 0.5F;
+    	// END FCMOD
             GL11.glPushMatrix();
             GL11.glTranslatef((float)par2, (float)par4, (float)par6);
             this.loadTexture("/terrain.png");
@@ -49,14 +56,42 @@
             }
             else if (var11 != null)
             {
+                // FCMOD: Changed (client only)
+            	/*
                 this.sandRenderBlocks.setRenderBoundsFromBlock(var11);
                 this.sandRenderBlocks.renderBlockSandFalling(var11, var10, MathHelper.floor_double(par1EntityFallingSand.posX), MathHelper.floor_double(par1EntityFallingSand.posY), MathHelper.floor_double(par1EntityFallingSand.posZ), par1EntityFallingSand.metadata);
+                */
+                sandRenderBlocks.blockAccess = var10;
+                
+                Tessellator.instance.startDrawingQuads();
+                
+                Tessellator.instance.setTranslation( -MathHelper.floor_double( par1EntityFallingSand.posX ) - 0.5D, 
+                	-MathHelper.floor_double( par1EntityFallingSand.posY ) - 0.5D, 
+                	-MathHelper.floor_double( par1EntityFallingSand.posZ ) - 0.5D );
+                
+                var11.m_currentBlockRenderer = sandRenderBlocks;
+            	
+		        var11.RenderFallingBlock( sandRenderBlocks, MathHelper.floor_double( par1EntityFallingSand.posX ), 
+		        	MathHelper.floor_double( par1EntityFallingSand.posY ), 
+		        	MathHelper.floor_double( par1EntityFallingSand.posZ ),
+		        	par1EntityFallingSand.metadata );
+		        
+		        Tessellator.instance.setTranslation( 0D, 0D, 0D );
+		        
+		        Tessellator.instance.draw();
+            	// END FCMOD
             }
 
             GL11.glEnable(GL11.GL_LIGHTING);
             GL11.glPopMatrix();
         }
+        // FCMOD: Added (client only)
+        else
+        {
+        	shadowSize = 0F;
     }
+        // END FCMOD
+    }
 
     /**
      * Actually renders the given argument. This is a synthetic bridge method, always casting down its argument and then
@@ -68,4 +103,18 @@
     {
         this.doRenderFallingSand((EntityFallingSand)par1Entity, par2, par4, par6, par8, par9);
     }
+    
+    // FCMOD: Added (client only)
+    private boolean ShouldRender( World world, EntityFallingSand entity )
+    {
+        Block fallingBlock = Block.blocksList[entity.blockID];
+        
+        if ( fallingBlock != null )
+        {
+        	return fallingBlock.ShouldRenderWhileFalling( world, entity );
 }
+        
+    	return false;
+    }
+    // END FCMOD
+}
