--- a/minecraft/net/minecraft/src/ItemRenderer.java
+++ b/minecraft/net/minecraft/src/ItemRenderer.java
@@ -36,7 +36,12 @@
     {
         GL11.glPushMatrix();
 
+        // FCMOD: Code change
+        /*
         if (par2ItemStack.getItemSpriteNumber() == 0 && Block.blocksList[par2ItemStack.itemID] != null && RenderBlocks.renderItemIn3d(Block.blocksList[par2ItemStack.itemID].getRenderType()))
+        */
+        if (par2ItemStack.getItemSpriteNumber() == 0 && Block.blocksList[par2ItemStack.itemID] != null && Block.blocksList[par2ItemStack.itemID].DoesItemRenderAsBlock( par2ItemStack.getItemDamage() ))
+    	// END FCMOD
         {
             this.mc.renderEngine.bindTexture("/terrain.png");
             this.renderBlocksInstance.renderBlockAsItem(Block.blocksList[par2ItemStack.itemID], par2ItemStack.getItemDamage(), 1.0F);
@@ -232,16 +237,16 @@
         OpenGlHelper.setLightmapTextureCoords(OpenGlHelper.lightmapTexUnit, (float)var8 / 1.0F, (float)var9 / 1.0F);
         GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
         float var10;
-        float var19;
         float var21;
+        float var20;
 
         if (var17 != null)
         {
             var18 = Item.itemsList[var17.itemID].getColorFromItemStack(var17, 0);
-            var19 = (float)(var18 >> 16 & 255) / 255.0F;
+            var20 = (float)(var18 >> 16 & 255) / 255.0F;
             var21 = (float)(var18 >> 8 & 255) / 255.0F;
             var10 = (float)(var18 & 255) / 255.0F;
-            GL11.glColor4f(var6 * var19, var6 * var21, var6 * var10, 1.0F);
+            GL11.glColor4f(var6 * var20, var6 * var21, var6 * var10, 1.0F);
         }
         else
         {
@@ -258,26 +263,26 @@
         {
             GL11.glPushMatrix();
             var7 = 0.8F;
-            var19 = var3.getSwingProgress(par1);
-            var21 = MathHelper.sin(var19 * (float)Math.PI);
-            var10 = MathHelper.sin(MathHelper.sqrt_float(var19) * (float)Math.PI);
-            GL11.glTranslatef(-var10 * 0.4F, MathHelper.sin(MathHelper.sqrt_float(var19) * (float)Math.PI * 2.0F) * 0.2F, -var21 * 0.2F);
-            var19 = 1.0F - var4 / 45.0F + 0.1F;
+            var20 = var3.getSwingProgress(par1);
+            var21 = MathHelper.sin(var20 * (float)Math.PI);
+            var10 = MathHelper.sin(MathHelper.sqrt_float(var20) * (float)Math.PI);
+            GL11.glTranslatef(-var10 * 0.4F, MathHelper.sin(MathHelper.sqrt_float(var20) * (float)Math.PI * 2.0F) * 0.2F, -var21 * 0.2F);
+            var20 = 1.0F - var4 / 45.0F + 0.1F;
 
-            if (var19 < 0.0F)
+            if (var20 < 0.0F)
             {
-                var19 = 0.0F;
+                var20 = 0.0F;
             }
 
-            if (var19 > 1.0F)
+            if (var20 > 1.0F)
             {
-                var19 = 1.0F;
+                var20 = 1.0F;
             }
 
-            var19 = -MathHelper.cos(var19 * (float)Math.PI) * 0.5F + 0.5F;
-            GL11.glTranslatef(0.0F, 0.0F * var7 - (1.0F - var2) * 1.2F - var19 * 0.5F + 0.04F, -0.9F * var7);
+            var20 = -MathHelper.cos(var20 * (float)Math.PI) * 0.5F + 0.5F;
+            GL11.glTranslatef(0.0F, 0.0F * var7 - (1.0F - var2) * 1.2F - var20 * 0.5F + 0.04F, -0.9F * var7);
             GL11.glRotatef(90.0F, 0.0F, 1.0F, 0.0F);
-            GL11.glRotatef(var19 * -85.0F, 0.0F, 0.0F, 1.0F);
+            GL11.glRotatef(var20 * -85.0F, 0.0F, 0.0F, 1.0F);
             GL11.glEnable(GL12.GL_RESCALE_NORMAL);
             GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTextureForDownloadableImage(this.mc.thePlayer.skinUrl, this.mc.thePlayer.getTexture()));
             this.mc.renderEngine.resetBoundTexture();
@@ -313,15 +318,15 @@
             var13 = 0.015625F;
             GL11.glScalef(var13, var13, var13);
             this.mc.renderEngine.bindTexture("/misc/mapbg.png");
-            Tessellator var27 = Tessellator.instance;
+            Tessellator var28 = Tessellator.instance;
             GL11.glNormal3f(0.0F, 0.0F, -1.0F);
-            var27.startDrawingQuads();
-            byte var28 = 7;
-            var27.addVertexWithUV((double)(0 - var28), (double)(128 + var28), 0.0D, 0.0D, 1.0D);
-            var27.addVertexWithUV((double)(128 + var28), (double)(128 + var28), 0.0D, 1.0D, 1.0D);
-            var27.addVertexWithUV((double)(128 + var28), (double)(0 - var28), 0.0D, 1.0D, 0.0D);
-            var27.addVertexWithUV((double)(0 - var28), (double)(0 - var28), 0.0D, 0.0D, 0.0D);
-            var27.draw();
+            var28.startDrawingQuads();
+            byte var27 = 7;
+            var28.addVertexWithUV((double)(0 - var27), (double)(128 + var27), 0.0D, 0.0D, 1.0D);
+            var28.addVertexWithUV((double)(128 + var27), (double)(128 + var27), 0.0D, 1.0D, 1.0D);
+            var28.addVertexWithUV((double)(128 + var27), (double)(0 - var27), 0.0D, 1.0D, 0.0D);
+            var28.addVertexWithUV((double)(0 - var27), (double)(0 - var27), 0.0D, 0.0D, 0.0D);
+            var28.draw();
             MapData var16 = Item.map.getMapData(var17, this.mc.theWorld);
 
             if (var16 != null)
@@ -338,9 +343,9 @@
 
             if (var3.getItemInUseCount() > 0)
             {
-                EnumAction var20 = var17.getItemUseAction();
+                EnumAction var19 = var17.getItemUseAction();
 
-                if (var20 == EnumAction.eat || var20 == EnumAction.drink)
+                if (var19 == EnumAction.eat || var19 == EnumAction.drink)
                 {
                     var21 = (float)var3.getItemInUseCount() - par1 + 1.0F;
                     var10 = 1.0F - var21 / (float)var17.getMaxItemUseDuration();
@@ -355,21 +360,56 @@
                     GL11.glRotatef(var12 * 10.0F, 1.0F, 0.0F, 0.0F);
                     GL11.glRotatef(var12 * 30.0F, 0.0F, 0.0F, 1.0F);
                 }
+                // FCMOD: Added
+                else if ( var19 == EnumAction.miscUse )
+                {
+                    var21 = (float)var3.getItemInUseCount() - par1 + 1.0F;
+                    
+                    var11 = var21 / (float)var17.getMaxItemUseDuration();
+                    
+                    var11 = var11 * var11 * var11;
+                    var11 = var11 * var11 * var11;
+                    var11 = var11 * var11 * var11;
+                    
+                    var12 = 1.0F - var11;
+                    
+                    // "chewing" up and down motion
+                    GL11.glTranslatef( 0.0F, MathHelper.abs(MathHelper.cos(var21 / 4.0F * (float)Math.PI) * 0.1F) * 
+                    	(( var17.getMaxItemUseDuration() - var3.getItemInUseCount() ) >= var17.getItem().GetItemUseWarmupDuration() ? 1F : 0F), 0.0F);
+                    
+                	int iItemInUseCount = MathHelper.clamp_int( 32 - ( var17.getMaxItemUseDuration() - var3.getItemInUseCount() ), 0, 32 );
+                    var21 = (float)iItemInUseCount - par1 + 1.0F;
+                    
+                    var11 = var21 / 32;
+                    
+                    var11 = var11 * var11 * var11;
+                    var11 = var11 * var11 * var11;
+                    var11 = var11 * var11 * var11;
+                    
+                    var12 = 1.0F - var11;
+                    
+                    GL11.glTranslatef(var12 * 0.6F, -var12 * 0.5F, 0.0F);
+                    
+                    GL11.glRotatef(var12 * 90.0F, 0.0F, 1.0F, 0.0F);
+                    GL11.glRotatef(var12 * 10.0F, 1.0F, 0.0F, 0.0F);
+                    GL11.glRotatef(var12 * 30.0F, 0.0F, 0.0F, 1.0F);
             }
+            	// END FCMOD
+            }
             else
             {
-                var19 = var3.getSwingProgress(par1);
-                var21 = MathHelper.sin(var19 * (float)Math.PI);
-                var10 = MathHelper.sin(MathHelper.sqrt_float(var19) * (float)Math.PI);
-                GL11.glTranslatef(-var10 * 0.4F, MathHelper.sin(MathHelper.sqrt_float(var19) * (float)Math.PI * 2.0F) * 0.2F, -var21 * 0.2F);
+                var20 = var3.getSwingProgress(par1);
+                var21 = MathHelper.sin(var20 * (float)Math.PI);
+                var10 = MathHelper.sin(MathHelper.sqrt_float(var20) * (float)Math.PI);
+                GL11.glTranslatef(-var10 * 0.4F, MathHelper.sin(MathHelper.sqrt_float(var20) * (float)Math.PI * 2.0F) * 0.2F, -var21 * 0.2F);
             }
 
             GL11.glTranslatef(0.7F * var7, -0.65F * var7 - (1.0F - var2) * 0.6F, -0.9F * var7);
             GL11.glRotatef(45.0F, 0.0F, 1.0F, 0.0F);
             GL11.glEnable(GL12.GL_RESCALE_NORMAL);
-            var19 = var3.getSwingProgress(par1);
-            var21 = MathHelper.sin(var19 * var19 * (float)Math.PI);
-            var10 = MathHelper.sin(MathHelper.sqrt_float(var19) * (float)Math.PI);
+            var20 = var3.getSwingProgress(par1);
+            var21 = MathHelper.sin(var20 * var20 * (float)Math.PI);
+            var10 = MathHelper.sin(MathHelper.sqrt_float(var20) * (float)Math.PI);
             GL11.glRotatef(-var21 * 20.0F, 0.0F, 1.0F, 0.0F);
             GL11.glRotatef(-var10 * 20.0F, 0.0F, 0.0F, 1.0F);
             GL11.glRotatef(-var10 * 80.0F, 1.0F, 0.0F, 0.0F);
@@ -426,6 +466,15 @@
                 GL11.glRotatef(180.0F, 0.0F, 1.0F, 0.0F);
             }
 
+            // FCMOD: Added
+    		int iItemID = var17.getItem().itemID;
+    		
+	        if ( iItemID == Item.compass.itemID )
+	        {
+	        	TextureCompass.compassTexture.UpdateActive();
+	        }
+            // END FCMOD
+	        
             if (var17.getItem().requiresMultipleRenderPasses())
             {
                 this.renderItem(var3, var17, 0);
@@ -441,22 +490,29 @@
                 this.renderItem(var3, var17, 0);
             }
 
+            // FCMOD: Added
+	        if ( iItemID == Item.compass.itemID )
+	        {
+	        	TextureCompass.compassTexture.UpdateInert();
+	        }
+            // END FCMOD
+	        
             GL11.glPopMatrix();
         }
         else if (!var3.isInvisible())
         {
             GL11.glPushMatrix();
             var7 = 0.8F;
-            var19 = var3.getSwingProgress(par1);
-            var21 = MathHelper.sin(var19 * (float)Math.PI);
-            var10 = MathHelper.sin(MathHelper.sqrt_float(var19) * (float)Math.PI);
-            GL11.glTranslatef(-var10 * 0.3F, MathHelper.sin(MathHelper.sqrt_float(var19) * (float)Math.PI * 2.0F) * 0.4F, -var21 * 0.4F);
+            var20 = var3.getSwingProgress(par1);
+            var21 = MathHelper.sin(var20 * (float)Math.PI);
+            var10 = MathHelper.sin(MathHelper.sqrt_float(var20) * (float)Math.PI);
+            GL11.glTranslatef(-var10 * 0.3F, MathHelper.sin(MathHelper.sqrt_float(var20) * (float)Math.PI * 2.0F) * 0.4F, -var21 * 0.4F);
             GL11.glTranslatef(0.8F * var7, -0.75F * var7 - (1.0F - var2) * 0.6F, -0.9F * var7);
             GL11.glRotatef(45.0F, 0.0F, 1.0F, 0.0F);
             GL11.glEnable(GL12.GL_RESCALE_NORMAL);
-            var19 = var3.getSwingProgress(par1);
-            var21 = MathHelper.sin(var19 * var19 * (float)Math.PI);
-            var10 = MathHelper.sin(MathHelper.sqrt_float(var19) * (float)Math.PI);
+            var20 = var3.getSwingProgress(par1);
+            var21 = MathHelper.sin(var20 * var20 * (float)Math.PI);
+            var10 = MathHelper.sin(MathHelper.sqrt_float(var20) * (float)Math.PI);
             GL11.glRotatef(var10 * 70.0F, 0.0F, 1.0F, 0.0F);
             GL11.glRotatef(-var21 * 20.0F, 0.0F, 0.0F, 1.0F);
             GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTextureForDownloadableImage(this.mc.thePlayer.skinUrl, this.mc.thePlayer.getTexture()));
@@ -647,7 +703,12 @@
             var3 = true;
         }
 
-        if (var2 != null && this.itemToRender != null && var2 != this.itemToRender && var2.itemID == this.itemToRender.itemID && var2.getItemDamage() == this.itemToRender.getItemDamage())
+        // FCMOD: Changed
+        //if (var2 != null && this.itemToRender != null && var2 != this.itemToRender && var2.itemID == this.itemToRender.itemID && var2.getItemDamage() == this.itemToRender.getItemDamage())
+        if (var2 != null && this.itemToRender != null && var2 != this.itemToRender && 
+        	var2.itemID == this.itemToRender.itemID && 
+        	( var2.getItemDamage() == this.itemToRender.getItemDamage() || itemToRender.getItem().IgnoreDamageWhenComparingDuringUse() ) )
+    	// END FCMOD
         {
             this.itemToRender = var2;
             var3 = true;
