--- a/minecraft/net/minecraft/src/BlockGrass.java
+++ b/minecraft/net/minecraft/src/BlockGrass.java
@@ -1,5 +1,7 @@
 package net.minecraft.src;
 
+import com.prupe.mcpatcher.cc.ColorizeBlock;
+import com.prupe.mcpatcher.mal.block.RenderBlocksUtils;
 import java.util.Random;
 
 public class BlockGrass extends Block
@@ -28,8 +30,14 @@
      */
     public Icon getBlockTexture(IBlockAccess par1IBlockAccess, int par2, int par3, int par4, int par5)
     {
-        if (par5 == 1)
+    	Icon var7 = RenderBlocksUtils.getGrassTexture(this, par1IBlockAccess, par2, par3, par4, par5, this.iconGrassTop);
+
+        if (var7 != null)
         {
+            return var7;
+        }
+        else if (par5 == 1)
+        {
             return this.iconGrassTop;
         }
         else if (par5 == 0)
@@ -57,17 +65,24 @@
 
     public int getBlockColor()
     {
+    	if (ColorizeBlock.colorizeBlock(this))
+        {
+            return ColorizeBlock.blockColor;
+        }
+        else
+        {
         double var1 = 0.5D;
         double var3 = 1.0D;
         return ColorizerGrass.getGrassColor(var1, var3);
     }
+    }
 
     /**
      * Returns the color this block should be rendered. Used by leaves.
      */
     public int getRenderColor(int par1)
     {
-        return this.getBlockColor();
+        return ColorizeBlock.colorizeBlock(this, par1) ? ColorizeBlock.blockColor : this.getBlockColor();
     }
 
     /**
@@ -76,6 +91,12 @@
      */
     public int colorMultiplier(IBlockAccess par1IBlockAccess, int par2, int par3, int par4)
     {
+    	if (ColorizeBlock.colorizeBlock(this, par1IBlockAccess, par2, par3, par4))
+        {
+    		return ColorizeBlock.blockColor;
+        }
+        else
+        {
         int var5 = 0;
         int var6 = 0;
         int var7 = 0;
@@ -93,6 +114,7 @@
 
         return (var5 / 9 & 255) << 16 | (var6 / 9 & 255) << 8 | var7 / 9 & 255;
     }
+    }
 
     /**
      * Ticks the block if it's been scheduled
