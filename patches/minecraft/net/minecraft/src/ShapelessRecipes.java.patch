--- a/minecraft/net/minecraft/src/ShapelessRecipes.java
+++ b/minecraft/net/minecraft/src/ShapelessRecipes.java
@@ -9,15 +9,23 @@
     /** Is the ItemStack that you get when craft the recipe. */
     private final ItemStack recipeOutput;
 
+    private ItemStack[] recipeSecondaryOutputs;
+
     /** Is a List of ItemStack that composes the recipe. */
     private final List recipeItems;
 
-    public ShapelessRecipes(ItemStack par1ItemStack, List par2List)
+    public ShapelessRecipes(ItemStack recipeOutput, List recipeItems)
     {
-        this.recipeOutput = par1ItemStack;
-        this.recipeItems = par2List;
+    	this(recipeOutput, null, recipeItems);
     }
 
+    public ShapelessRecipes(ItemStack recipeOutput, ItemStack[] recipeSecondaryOutputs, List recipeItems)
+    {
+        this.recipeOutput = recipeOutput;
+		this.recipeSecondaryOutputs = recipeSecondaryOutputs;
+        this.recipeItems = recipeItems;
+    }
+
     public ItemStack getRecipeOutput()
     {
         return this.recipeOutput;
@@ -30,14 +38,29 @@
     {
         ArrayList var3 = new ArrayList(this.recipeItems);
 
+    	// FCMOD: Changed to support 4X4 crafting
+		/*
         for (int var4 = 0; var4 < 3; ++var4)
         {
             for (int var5 = 0; var5 < 3; ++var5)
             {
+        */
+        for (int var4 = 0; var4 < 4; ++var4)
+        {
+            for (int var5 = 0; var5 < 4; ++var5)
+            {
+    	// END FCMOD
                 ItemStack var6 = par1InventoryCrafting.getStackInRowAndColumn(var5, var4);
 
                 if (var6 != null)
                 {
+                    // FCMOD: Code added to ignore Moulds                
+                    if ( var6.itemID == FCBetterThanWolves.fcItemMould.itemID )
+                    {
+                    	continue;
+                    }
+                    // END FCMOD
+                    
                     boolean var7 = false;
                     Iterator var8 = var3.iterator();
 
@@ -79,4 +102,62 @@
     {
         return this.recipeItems.size();
     }
+    
+    // FCMOD: Added
+    @Override
+    public boolean matches( IRecipe recipe )
+    {
+    	if ( recipe instanceof ShapelessRecipes )
+    	{
+    		ShapelessRecipes shapelessRecipe = (ShapelessRecipes)recipe;
+    		
+			if ( recipeOutput.getItem().itemID == shapelessRecipe.recipeOutput.getItem().itemID &&
+				recipeOutput.stackSize == shapelessRecipe.recipeOutput.stackSize && 
+				recipeOutput.getItemDamage() == shapelessRecipe.recipeOutput.getItemDamage() )
+			{
+				if ( recipeItems.size() == shapelessRecipe.recipeItems.size() )
+				{
+    				for ( int iTempIndex = 0; iTempIndex < recipeItems.size(); iTempIndex++ )
+    				{
+    					ItemStack item1 = (ItemStack)recipeItems.get( iTempIndex );
+    					ItemStack item2 = (ItemStack)shapelessRecipe.recipeItems.get( iTempIndex ); 
+    						
+    					if ( item1 == null || item2 == null )
+    					{
+    						if ( item1 != null || item2 != null )
+    						{
+    							return false;
 }
+    					}
+    					else if ( item1.getItem().itemID != item2.getItem().itemID ||
+    							item1.stackSize != item2.stackSize ||
+    							item1.getItemDamage() != item2.getItemDamage() )
+    					{
+    						return false;
+    					}
+    				}
+    				
+    				return true;
+				}
+    		}
+    	}
+    	
+    	return false;
+    }
+    
+    @Override
+    public boolean HasSecondaryOutput()
+    {
+    	return recipeSecondaryOutputs != null;
+    }
+    
+    public void SetSecondaryOutput(ItemStack[] secondaryOutput)
+    {
+    	this.recipeSecondaryOutputs = secondaryOutput;
+    }
+    
+    public ItemStack[] getSecondaryOutput(IInventory inventory) {
+    	return this.recipeSecondaryOutputs;
+    }
+    // END FCMOD    
+}
\ No newline at end of file
