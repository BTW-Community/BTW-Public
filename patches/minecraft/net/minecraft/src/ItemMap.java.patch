--- a/minecraft/net/minecraft/src/ItemMap.java
+++ b/minecraft/net/minecraft/src/ItemMap.java
@@ -84,7 +84,10 @@
                             boolean var21 = var19 * var19 + var20 * var20 > (var11 - 2) * (var11 - 2);
                             int var22 = (var7 / var6 + var13 - var4 / 2) * var6;
                             int var23 = (var8 / var6 + var18 - var5 / 2) * var6;
-                            int[] var24 = new int[256];
+                            // FCMOD: Change
+                            //int[] var24 = new int[256];
+                            int[] var24 = new int[4096];
+                            // END FCMOD
                             Chunk var25 = par1World.getChunkFromBlockCoords(var22, var23);
 
                             if (!var25.isEmpty())
@@ -159,14 +162,14 @@
                                                 {
                                                     var36 = var33 - 1;
                                                     boolean var37 = false;
-                                                    int var41;
+                                                    int var43;
 
                                                     do
                                                     {
-                                                        var41 = var25.getBlockID(var31 + var26, var36--, var32 + var27);
+                                                        var43 = var25.getBlockID(var31 + var26, var36--, var32 + var27);
                                                         ++var28;
                                                     }
-                                                    while (var36 > 0 && var41 != 0 && Block.blocksList[var41].blockMaterial.isLiquid());
+                                                    while (var36 > 0 && var43 != 0 && Block.blocksList[var43].blockMaterial.isLiquid());
                                                 }
                                             }
 
@@ -180,7 +183,10 @@
                                 var31 = 0;
                                 var32 = 0;
 
-                                for (var33 = 0; var33 < 256; ++var33)
+                                // FCMOD: Change
+                                //for (var33 = 0; var33 < 256; ++var33)
+                                for (var33 = 0; var33 < 4096; ++var33)
+                                // END FCMOD
                                 {
                                     if (var24[var33] > var31)
                                     {
@@ -189,17 +195,17 @@
                                     }
                                 }
 
-                                double var39 = (var29 - var16) * 4.0D / (double)(var6 + 4) + ((double)(var13 + var18 & 1) - 0.5D) * 0.4D;
-                                byte var40 = 1;
+                                double var40 = (var29 - var16) * 4.0D / (double)(var6 + 4) + ((double)(var13 + var18 & 1) - 0.5D) * 0.4D;
+                                byte var39 = 1;
 
-                                if (var39 > 0.6D)
+                                if (var40 > 0.6D)
                                 {
-                                    var40 = 2;
+                                    var39 = 2;
                                 }
 
-                                if (var39 < -0.6D)
+                                if (var40 < -0.6D)
                                 {
-                                    var40 = 0;
+                                    var39 = 0;
                                 }
 
                                 var36 = 0;
@@ -210,17 +216,17 @@
 
                                     if (var42 == MapColor.waterColor)
                                     {
-                                        var39 = (double)var28 * 0.1D + (double)(var13 + var18 & 1) * 0.2D;
-                                        var40 = 1;
+                                        var40 = (double)var28 * 0.1D + (double)(var13 + var18 & 1) * 0.2D;
+                                        var39 = 1;
 
-                                        if (var39 < 0.5D)
+                                        if (var40 < 0.5D)
                                         {
-                                            var40 = 2;
+                                            var39 = 2;
                                         }
 
-                                        if (var39 > 0.9D)
+                                        if (var40 > 0.9D)
                                         {
-                                            var40 = 0;
+                                            var39 = 0;
                                         }
                                     }
 
@@ -231,10 +237,10 @@
 
                                 if (var18 >= 0 && var19 * var19 + var20 * var20 < var11 * var11 && (!var21 || (var13 + var18 & 1) != 0))
                                 {
-                                    byte var43 = par3MapData.colors[var13 + var18 * var4];
-                                    byte var38 = (byte)(var36 * 4 + var40);
+                                    byte var41 = par3MapData.colors[var13 + var18 * var4];
+                                    byte var38 = (byte)(var36 * 4 + var39);
 
-                                    if (var43 != var38)
+                                    if (var41 != var38)
                                     {
                                         if (var14 > var18)
                                         {
@@ -266,7 +272,11 @@
      * Called each tick as long the item is on a player inventory. Uses by maps to check if is on a player hand and
      * update it's contents.
      */
-    public void onUpdate(ItemStack par1ItemStack, World par2World, Entity par3Entity, int par4, boolean par5)
+    // FCMOD: Changed
+    //public void onUpdate(ItemStack par1ItemStack, World par2World, Entity par3Entity, int par4, boolean par5)
+    @Override
+    public void onUpdate(ItemStack par1ItemStack, World par2World, EntityPlayer par3Entity, int par4, boolean par5)
+    // END FCMOD
     {
         if (!par2World.isRemote)
         {
