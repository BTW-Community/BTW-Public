--- a/minecraft/net/minecraft/src/RenderPlayer.java
+++ b/minecraft/net/minecraft/src/RenderPlayer.java
@@ -1,5 +1,7 @@
 package net.minecraft.src;
 
+import com.prupe.mcpatcher.cit.CITUtils;
+import com.prupe.mcpatcher.mal.resource.FakeResourceLocation;
 import org.lwjgl.opengl.GL11;
 
 public class RenderPlayer extends RenderLiving
@@ -11,10 +13,18 @@
 
     public RenderPlayer()
     {
+    	// FCMOD: Code change to use custom player model
+    	/*
         super(new ModelBiped(0.0F), 0.5F);
         this.modelBipedMain = (ModelBiped)this.mainModel;
         this.modelArmorChestplate = new ModelBiped(1.0F);
         this.modelArmor = new ModelBiped(0.5F);
+        */
+        super(new FCClientModelPlayer(0.0F), 0.5F);
+        this.modelBipedMain = (ModelBiped)this.mainModel;
+        this.modelArmorChestplate = new FCClientModelPlayerArmor(1.0F);
+        this.modelArmor = new FCClientModelPlayerArmor(0.5F);
+        // END FCMOD
     }
 
     protected void func_98191_a(EntityPlayer par1EntityPlayer)
@@ -36,7 +46,13 @@
             if (var5 instanceof ItemArmor)
             {
                 ItemArmor var6 = (ItemArmor)var5;
-                this.loadTexture("/armor/" + armorFilenamePrefix[var6.renderIndex] + "_" + (par2 == 2 ? 2 : 1) + ".png");
+                // FCMOD: Code added
+                if ( var5 instanceof FCItemArmorMod )
+                {
+                	return ShouldRenderPassModArmor( var4, par2, (FCItemArmorMod)var5 );
+                }
+            	// END FCMOD
+                this.loadTexture(FakeResourceLocation.unwrap(CITUtils.getArmorTexture(FakeResourceLocation.wrap("/armor/" + armorFilenamePrefix[var6.renderIndex] + "_" + (par2 == 2 ? 2 : 1) + ".png"), par1EntityPlayer, var4)));
                 ModelBiped var7 = par2 == 2 ? this.modelArmor : this.modelArmorChestplate;
                 var7.bipedHead.showModel = par2 == 0;
                 var7.bipedHeadwear.showModel = par2 == 0;
@@ -104,8 +120,16 @@
 
             if (var5 instanceof ItemArmor)
             {
+            	// FCMOD
+            	if ( var5 instanceof FCItemArmorMod )
+            	{
+            		LoadSecondLayerOfModArmorTexture( par2, (FCItemArmorMod)var5 );
+            		
+                	return;
+            	}
+            	// END FCMOD
                 ItemArmor var6 = (ItemArmor)var5;
-                this.loadTexture("/armor/" + armorFilenamePrefix[var6.renderIndex] + "_" + (par2 == 2 ? 2 : 1) + "_b.png");
+                this.loadTexture(FakeResourceLocation.unwrap(CITUtils.getArmorTexture(FakeResourceLocation.wrap("/armor/" + armorFilenamePrefix[var6.renderIndex] + "_" + (par2 == 2 ? 2 : 1) + "_b.png"), par1EntityPlayer, var4)));
                 float var7 = 1.0F;
                 GL11.glColor3f(var7, var7, var7);
             }
@@ -164,9 +188,17 @@
             this.modelBipedMain.bipedHead.postRender(0.0625F);
             float var5;
 
-            if (var4.getItem().itemID < 256)
+            // FCMOD: Change
+            //if (var4.getItem().itemID < 256)
+            if ( var4.getItem().itemID < 4096 && Block.blocksList[var4.itemID] != null )
+        	// END FCMOD
             {
+            	// FCMOD: Code change
+            	/*
                 if (RenderBlocks.renderItemIn3d(Block.blocksList[var4.itemID].getRenderType()))
+                */
+                if ( Block.blocksList[var4.itemID].DoesItemRenderAsBlock( var4.getItemDamage() ) )
+            	// END FCMOD
                 {
                     var5 = 0.625F;
                     GL11.glTranslatef(0.0F, -0.25F, 0.0F);
@@ -200,15 +232,15 @@
         {
             for (int var20 = 0; var20 < 2; ++var20)
             {
-                float var23 = par1EntityPlayer.prevRotationYaw + (par1EntityPlayer.rotationYaw - par1EntityPlayer.prevRotationYaw) * par2 - (par1EntityPlayer.prevRenderYawOffset + (par1EntityPlayer.renderYawOffset - par1EntityPlayer.prevRenderYawOffset) * par2);
+                float var25 = par1EntityPlayer.prevRotationYaw + (par1EntityPlayer.rotationYaw - par1EntityPlayer.prevRotationYaw) * par2 - (par1EntityPlayer.prevRenderYawOffset + (par1EntityPlayer.renderYawOffset - par1EntityPlayer.prevRenderYawOffset) * par2);
                 var7 = par1EntityPlayer.prevRotationPitch + (par1EntityPlayer.rotationPitch - par1EntityPlayer.prevRotationPitch) * par2;
                 GL11.glPushMatrix();
-                GL11.glRotatef(var23, 0.0F, 1.0F, 0.0F);
+                GL11.glRotatef(var25, 0.0F, 1.0F, 0.0F);
                 GL11.glRotatef(var7, 1.0F, 0.0F, 0.0F);
                 GL11.glTranslatef(0.375F * (float)(var20 * 2 - 1), 0.0F, 0.0F);
                 GL11.glTranslatef(0.0F, -0.375F, 0.0F);
                 GL11.glRotatef(-var7, 1.0F, 0.0F, 0.0F);
-                GL11.glRotatef(-var23, 0.0F, 1.0F, 0.0F);
+                GL11.glRotatef(-var25, 0.0F, 1.0F, 0.0F);
                 var8 = 1.3333334F;
                 GL11.glScalef(var8, var8, var8);
                 this.modelBipedMain.renderEars(0.0625F);
@@ -222,7 +254,7 @@
         {
             GL11.glPushMatrix();
             GL11.glTranslatef(0.0F, 0.0F, 0.125F);
-            double var21 = par1EntityPlayer.field_71091_bM + (par1EntityPlayer.field_71094_bP - par1EntityPlayer.field_71091_bM) * (double)par2 - (par1EntityPlayer.prevPosX + (par1EntityPlayer.posX - par1EntityPlayer.prevPosX) * (double)par2);
+            double var22 = par1EntityPlayer.field_71091_bM + (par1EntityPlayer.field_71094_bP - par1EntityPlayer.field_71091_bM) * (double)par2 - (par1EntityPlayer.prevPosX + (par1EntityPlayer.posX - par1EntityPlayer.prevPosX) * (double)par2);
             double var24 = par1EntityPlayer.field_71096_bN + (par1EntityPlayer.field_71095_bQ - par1EntityPlayer.field_71096_bN) * (double)par2 - (par1EntityPlayer.prevPosY + (par1EntityPlayer.posY - par1EntityPlayer.prevPosY) * (double)par2);
             double var9 = par1EntityPlayer.field_71097_bO + (par1EntityPlayer.field_71085_bR - par1EntityPlayer.field_71097_bO) * (double)par2 - (par1EntityPlayer.prevPosZ + (par1EntityPlayer.posZ - par1EntityPlayer.prevPosZ) * (double)par2);
             var11 = par1EntityPlayer.prevRenderYawOffset + (par1EntityPlayer.renderYawOffset - par1EntityPlayer.prevRenderYawOffset) * par2;
@@ -240,8 +272,8 @@
                 var16 = 32.0F;
             }
 
-            float var17 = (float)(var21 * var12 + var9 * var14) * 100.0F;
-            float var18 = (float)(var21 * var14 - var9 * var12) * 100.0F;
+            float var17 = (float)(var22 * var12 + var9 * var14) * 100.0F;
+            float var18 = (float)(var22 * var14 - var9 * var12) * 100.0F;
 
             if (var17 < 0.0F)
             {
@@ -264,9 +296,9 @@
             GL11.glPopMatrix();
         }
 
-        ItemStack var22 = par1EntityPlayer.inventory.getCurrentItem();
+        ItemStack var21 = par1EntityPlayer.inventory.getCurrentItem();
 
-        if (var22 != null)
+        if (var21 != null)
         {
             GL11.glPushMatrix();
             this.modelBipedMain.bipedRightArm.postRender(0.0625F);
@@ -274,17 +306,22 @@
 
             if (par1EntityPlayer.fishEntity != null)
             {
-                var22 = new ItemStack(Item.stick);
+                var21 = new ItemStack(Item.stick);
             }
 
-            EnumAction var25 = null;
+            EnumAction var23 = null;
 
             if (par1EntityPlayer.getItemInUseCount() > 0)
             {
-                var25 = var22.getItemUseAction();
+                var23 = var21.getItemUseAction();
             }
 
-            if (var22.itemID < 256 && RenderBlocks.renderItemIn3d(Block.blocksList[var22.itemID].getRenderType()))
+            // FCMOD: Change
+            /*
+            if (var21.itemID < 256 && RenderBlocks.renderItemIn3d(Block.blocksList[var21.itemID].getRenderType()))
+            */
+            if ( var21.itemID < 4096 && Block.blocksList[var21.itemID] != null && Block.blocksList[var21.itemID].DoesItemRenderAsBlock( var21.getItemDamage() ) )
+            // END FCMOD
             {
                 var7 = 0.5F;
                 GL11.glTranslatef(0.0F, 0.1875F, -0.3125F);
@@ -293,7 +330,12 @@
                 GL11.glRotatef(45.0F, 0.0F, 1.0F, 0.0F);
                 GL11.glScalef(-var7, -var7, var7);
             }
-            else if (var22.itemID == Item.bow.itemID)
+            // FCMOD: Changed line
+			/*
+            else if (var21.itemID == Item.bow.itemID)
+			*/
+            else if (var21.itemID == Item.bow.itemID || var21.itemID == FCBetterThanWolves.fcItemCompositeBow.itemID )
+        	// END FCMOD            	
             {
                 var7 = 0.625F;
                 GL11.glTranslatef(0.0F, 0.125F, 0.3125F);
@@ -302,17 +344,17 @@
                 GL11.glRotatef(-100.0F, 1.0F, 0.0F, 0.0F);
                 GL11.glRotatef(45.0F, 0.0F, 1.0F, 0.0F);
             }
-            else if (Item.itemsList[var22.itemID].isFull3D())
+            else if (Item.itemsList[var21.itemID].isFull3D())
             {
                 var7 = 0.625F;
 
-                if (Item.itemsList[var22.itemID].shouldRotateAroundWhenRendering())
+                if (Item.itemsList[var21.itemID].shouldRotateAroundWhenRendering())
                 {
                     GL11.glRotatef(180.0F, 0.0F, 0.0F, 1.0F);
                     GL11.glTranslatef(0.0F, -0.125F, 0.0F);
                 }
 
-                if (par1EntityPlayer.getItemInUseCount() > 0 && var25 == EnumAction.block)
+                if (par1EntityPlayer.getItemInUseCount() > 0 && var23 == EnumAction.block)
                 {
                     GL11.glTranslatef(0.05F, 0.0F, -0.1F);
                     GL11.glRotatef(-50.0F, 0.0F, 1.0F, 0.0F);
@@ -339,26 +381,26 @@
             int var27;
             float var28;
 
-            if (var22.getItem().requiresMultipleRenderPasses())
+            if (var21.getItem().requiresMultipleRenderPasses())
             {
                 for (var27 = 0; var27 <= 1; ++var27)
                 {
-                    int var26 = var22.getItem().getColorFromItemStack(var22, var27);
+                    int var26 = var21.getItem().getColorFromItemStack(var21, var27);
                     var28 = (float)(var26 >> 16 & 255) / 255.0F;
                     var10 = (float)(var26 >> 8 & 255) / 255.0F;
                     var11 = (float)(var26 & 255) / 255.0F;
                     GL11.glColor4f(var28, var10, var11, 1.0F);
-                    this.renderManager.itemRenderer.renderItem(par1EntityPlayer, var22, var27);
+                    this.renderManager.itemRenderer.renderItem(par1EntityPlayer, var21, var27);
                 }
             }
             else
             {
-                var27 = var22.getItem().getColorFromItemStack(var22, 0);
+                var27 = var21.getItem().getColorFromItemStack(var21, 0);
                 var8 = (float)(var27 >> 16 & 255) / 255.0F;
                 var28 = (float)(var27 >> 8 & 255) / 255.0F;
                 var10 = (float)(var27 & 255) / 255.0F;
                 GL11.glColor4f(var8, var28, var10, 1.0F);
-                this.renderManager.itemRenderer.renderItem(par1EntityPlayer, var22, 0);
+                this.renderManager.itemRenderer.renderItem(par1EntityPlayer, var21, 0);
             }
 
             GL11.glPopMatrix();
@@ -373,6 +415,12 @@
 
     protected void func_96450_a(EntityPlayer par1EntityPlayer, double par2, double par4, double par6, String par8Str, float par9, double par10)
     {
+    	// FCMOD: Code added
+    	if ( FCBetterThanWolves.IsHardcorePlayerNamesEnabled( par1EntityPlayer.worldObj ) )
+    	{
+    		return;
+    	}
+    	// END FCMOD
         if (par10 < 100.0D)
         {
             Scoreboard var12 = par1EntityPlayer.getWorldScoreboard();
@@ -504,4 +552,71 @@
     {
         this.renderPlayer((EntityPlayer)par1Entity, par2, par4, par6, par8, par9);
     }
+    
+    // FCMOD: Code Added    
+    private int ShouldRenderPassModArmor( ItemStack stack, int iArmorSlot, FCItemArmorMod armorItem )
+    {
+        loadTexture( armorItem.GetWornTextureDirectory() + armorItem.GetWornTexturePrefix() + "_" + (iArmorSlot == 2 ? 2 : 1) + ".png");
+        
+        ModelBiped model = iArmorSlot == 2 ? this.modelArmor : this.modelArmorChestplate;
+        
+        model.bipedHead.showModel = iArmorSlot == 0;
+        model.bipedHeadwear.showModel = iArmorSlot == 0;
+        model.bipedBody.showModel = iArmorSlot == 1 || iArmorSlot == 2;
+        model.bipedRightArm.showModel = iArmorSlot == 1;
+        model.bipedLeftArm.showModel = iArmorSlot == 1;
+        model.bipedRightLeg.showModel = iArmorSlot == 2 || iArmorSlot == 3;
+        model.bipedLeftLeg.showModel = iArmorSlot == 2 || iArmorSlot == 3;
+        
+        setRenderPassModel(model);
+
+        if (model != null)
+        {
+            model.onGround = this.mainModel.onGround;
+            model.isRiding = this.mainModel.isRiding;
+            model.isChild = this.mainModel.isChild;
 }
+
+        if ( armorItem.HasCustomColors() )
+        {
+            int iColor = armorItem.getColor( stack );
+            
+            float fRed = (float)(iColor >> 16 & 255) / 255.0F;
+            float fGreen = (float)(iColor >> 8 & 255) / 255.0F;
+            float fBlue = (float)(iColor & 255) / 255.0F;
+            
+            GL11.glColor3f( fRed, fGreen, fBlue);
+        }
+        else
+        {
+            GL11.glColor3f( 1F, 1F, 1F);
+        }
+
+        if ( armorItem.HasSecondRenderLayerWhenWorn() )
+        {
+	        if (stack.isItemEnchanted())
+	        {
+	            return 31;
+	        }
+	
+	        return 16;
+        }
+        else
+        {        
+	        if ( stack.isItemEnchanted() )
+	        {
+	            return 15;
+	        }
+	
+	        return 1;
+        }
+    }
+    
+    private void LoadSecondLayerOfModArmorTexture( int iArmorSlot, FCItemArmorMod armorItem )
+    {
+        loadTexture( armorItem.GetWornTextureDirectory() + armorItem.GetWornTexturePrefix() + "_" + (iArmorSlot == 2 ? 2 : 1) + "_b.png");
+	    
+	    GL11.glColor3f(1F, 1F, 1F);
+    }    
+    // END FCMOD
+}
