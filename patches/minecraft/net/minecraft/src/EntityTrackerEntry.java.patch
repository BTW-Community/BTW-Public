--- a/minecraft/net/minecraft/src/EntityTrackerEntry.java
+++ b/minecraft/net/minecraft/src/EntityTrackerEntry.java
@@ -99,7 +99,12 @@
             if (var24 != null && var24.getItem() instanceof ItemMap)
             {
                 MapData var26 = Item.map.getMapData(var24, this.myEntity.worldObj);
+                // FCMOD: Code change to send map data to all visible players rather than tracked ones
+                /*
                 Iterator var29 = par1List.iterator();
+                */
+                Iterator var29 = trackingPlayers.iterator();
+                // END FCMOD
 
                 while (var29.hasNext())
                 {
@@ -109,21 +114,27 @@
 
                     if (var31.playerNetServerHandler.packetSize() <= 5)
                     {
+                    	// FCMOD: Code added so that players only receive data on their own position
+                    	var26.func_82568_a( var30 );
+                    	// END FCMOD
                         Packet var32 = Item.map.createMapDataPacket(var24, this.myEntity.worldObj, var31);
 
                         if (var32 != null)
                         {
                             var31.playerNetServerHandler.sendPacketToPlayer(var32);
                         }
+                    	// FCMOD: Code added so that players only receive data on their own position
+                    	var26.playersVisibleOnMap.clear();
+                    	// END FCMOD
                     }
                 }
             }
 
-            DataWatcher var27 = this.myEntity.getDataWatcher();
+            DataWatcher var28 = this.myEntity.getDataWatcher();
 
-            if (var27.hasChanges())
+            if (var28.hasChanges())
             {
-                this.sendPacketToAllAssociatedPlayers(new Packet40EntityMetadata(this.myEntity.entityId, var27, false));
+                this.sendPacketToAllAssociatedPlayers(new Packet40EntityMetadata(this.myEntity.entityId, var28, false));
             }
         }
         else if (this.ticks % this.updateFrequency == 0 || this.myEntity.isAirBorne || this.myEntity.getDataWatcher().hasChanges())
@@ -230,11 +241,11 @@
                 this.lastScaledXPosition = this.myEntity.myEntitySize.multiplyBy32AndRound(this.myEntity.posX);
                 this.lastScaledYPosition = MathHelper.floor_double(this.myEntity.posY * 32.0D);
                 this.lastScaledZPosition = this.myEntity.myEntitySize.multiplyBy32AndRound(this.myEntity.posZ);
-                DataWatcher var28 = this.myEntity.getDataWatcher();
+                DataWatcher var27 = this.myEntity.getDataWatcher();
 
-                if (var28.hasChanges())
+                if (var27.hasChanges())
                 {
-                    this.sendPacketToAllAssociatedPlayers(new Packet40EntityMetadata(this.myEntity.entityId, var28, false));
+                    this.sendPacketToAllAssociatedPlayers(new Packet40EntityMetadata(this.myEntity.entityId, var27, false));
                 }
 
                 this.ridingEntity = true;
@@ -319,8 +330,12 @@
 
             if (var2 >= (double)(-this.blocksDistanceThreshold) && var2 <= (double)this.blocksDistanceThreshold && var4 >= (double)(-this.blocksDistanceThreshold) && var4 <= (double)this.blocksDistanceThreshold)
             {
-                if (!this.trackingPlayers.contains(par1EntityPlayerMP) && (this.isPlayerWatchingThisChunk(par1EntityPlayerMP) || this.myEntity.field_98038_p))
-                {
+            	// client
+            	if ((!this.trackingPlayers.contains(par1EntityPlayerMP) && (this.isPlayerWatchingThisChunk(par1EntityPlayerMP) || this.myEntity.field_98038_p))
+                        || (Math.abs(par1EntityPlayerMP.posX - this.myEntity.posX) > 120 || Math.abs(par1EntityPlayerMP.posZ - this.myEntity.posZ) > 120)) {
+            	// server
+            	//if ((!this.trackingPlayers.contains(par1EntityPlayerMP) && (this.isPlayerWatchingThisChunk(par1EntityPlayerMP) || this.trackedEntity.field_98038_p))
+                //		|| (Math.abs(par1EntityPlayerMP.posX - this.trackedEntity.posX) > 120 || Math.abs(par1EntityPlayerMP.posZ - this.trackedEntity.posZ) > 120)) {
                     this.trackingPlayers.add(par1EntityPlayerMP);
                     Packet var6 = this.getPacketForThisEntity();
                     par1EntityPlayerMP.playerNetServerHandler.sendPacketToPlayer(var6);
@@ -359,9 +374,9 @@
 
                     if (this.myEntity instanceof EntityPlayer)
                     {
-                        EntityPlayer var10 = (EntityPlayer)this.myEntity;
+                        EntityPlayer var11 = (EntityPlayer)this.myEntity;
 
-                        if (var10.isPlayerSleeping())
+                        if (var11.isPlayerSleeping())
                         {
                             par1EntityPlayerMP.playerNetServerHandler.sendPacketToPlayer(new Packet17Sleep(this.myEntity, 0, MathHelper.floor_double(this.myEntity.posX), MathHelper.floor_double(this.myEntity.posY), MathHelper.floor_double(this.myEntity.posZ)));
                         }
@@ -369,8 +384,8 @@
 
                     if (this.myEntity instanceof EntityLiving)
                     {
-                        EntityLiving var11 = (EntityLiving)this.myEntity;
-                        Iterator var12 = var11.getActivePotionEffects().iterator();
+                        EntityLiving var10 = (EntityLiving)this.myEntity;
+                        Iterator var12 = var10.getActivePotionEffects().iterator();
 
                         while (var12.hasNext())
                         {
@@ -390,7 +405,15 @@
 
     private boolean isPlayerWatchingThisChunk(EntityPlayerMP par1EntityPlayerMP)
     {
-        return par1EntityPlayerMP.getServerForPlayer().getPlayerManager().isPlayerWatchingChunk(par1EntityPlayerMP, this.myEntity.chunkCoordX, this.myEntity.chunkCoordZ);
+    	// FCMOD: Changed    	
+        //return par1EntityPlayerMP.getServerForPlayer().getPlayerManager().isPlayerWatchingChunk(par1EntityPlayerMP, this.myEntity.chunkCoordX, this.myEntity.chunkCoordZ);
+        return par1EntityPlayerMP.getServerForPlayer().
+        	GetChunkTracker().IsChunkWatchedByPlayerAndSentToClient(
+        	// client 
+        	par1EntityPlayerMP, this.myEntity.chunkCoordX, this.myEntity.chunkCoordZ);
+        	// server
+			//par1EntityPlayerMP, this.trackedEntity.chunkCoordX, this.trackedEntity.chunkCoordZ);        
+        // END FCMOD
     }
 
     public void sendEventsToPlayers(List par1List)
@@ -408,6 +431,21 @@
             this.myEntity.worldObj.getWorldLogAgent().logWarning("Fetching addPacket for removed entity");
         }
 
+        // FCMOD: Code added.  This is at the top of all the following code due to some mod entities inheriting from the ones below
+        // client
+        if ( myEntity instanceof FCIEntityPacketHandler )
+    	// server
+        //if ( trackedEntity instanceof FCIEntityPacketHandler )        	
+        {
+        	// client
+        	FCIEntityPacketHandler packetHandler = (FCIEntityPacketHandler)myEntity;
+        	// server
+        	//FCIEntityPacketHandler packetHandler = (FCIEntityPacketHandler)trackedEntity;
+        	
+    		return packetHandler.GetSpawnPacketForThisEntity();
+        }
+        // END FCMOD
+        
         if (this.myEntity instanceof EntityItem)
         {
             return new Packet23VehicleSpawn(this.myEntity, 2, 1);
