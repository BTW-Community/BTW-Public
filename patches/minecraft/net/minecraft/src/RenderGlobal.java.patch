--- a/minecraft/net/minecraft/src/RenderGlobal.java
+++ b/minecraft/net/minecraft/src/RenderGlobal.java
@@ -1,5 +1,10 @@
 package net.minecraft.src;
 
+import com.prupe.mcpatcher.cc.ColorizeWorld;
+import com.prupe.mcpatcher.mal.resource.FakeResourceLocation;
+import com.prupe.mcpatcher.renderpass.RenderPass;
+import com.prupe.mcpatcher.renderpass.RenderPassMap;
+import com.prupe.mcpatcher.sky.SkyRenderer;
 import java.nio.IntBuffer;
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -158,7 +163,7 @@
         this.renderEngine = par2RenderEngine;
         byte var3 = 34;
         byte var4 = 32;
-        this.glRenderListBase = GLAllocation.generateDisplayLists(var3 * var3 * var4 * 3);
+        this.glRenderListBase = GLAllocation.generateDisplayLists(var3 * var3 * var4 * 5);
         this.occlusionEnabled = OpenGlCapsChecker.checkARBOcclusion();
 
         if (this.occlusionEnabled)
@@ -365,7 +370,7 @@
                         this.worldRenderers[(var6 * this.renderChunksTall + var5) * this.renderChunksWide + var4].markDirty();
                         this.sortedWorldRenderers[(var6 * this.renderChunksTall + var5) * this.renderChunksWide + var4] = this.worldRenderers[(var6 * this.renderChunksTall + var5) * this.renderChunksWide + var4];
                         this.worldRenderersToUpdate.add(this.worldRenderers[(var6 * this.renderChunksTall + var5) * this.renderChunksWide + var4]);
-                        var2 += 3;
+                        var2 += 5;
                     }
                 }
             }
@@ -433,7 +438,12 @@
             {
                 var7 = (Entity)var5.get(var6);
 
+                // FCMOD: Code change so that entities may adjust their own visual bounding box for this test (client only)
+                /*
                 if (var7.isInRangeToRenderVec3D(par1Vec3) && (var7.ignoreFrustumCheck || par2ICamera.isBoundingBoxInFrustum(var7.boundingBox) || var7.riddenByEntity == this.mc.thePlayer) && (var7 != this.mc.renderViewEntity || this.mc.gameSettings.thirdPersonView != 0 || this.mc.renderViewEntity.isPlayerSleeping()) && this.theWorld.blockExists(MathHelper.floor_double(var7.posX), 0, MathHelper.floor_double(var7.posZ)))
+                */
+                if (var7.isInRangeToRenderVec3D(par1Vec3) && (var7.ignoreFrustumCheck || par2ICamera.isBoundingBoxInFrustum(var7.GetVisualBoundingBox()) || var7.riddenByEntity == this.mc.thePlayer) && (var7 != this.mc.renderViewEntity || this.mc.gameSettings.thirdPersonView != 0 || this.mc.renderViewEntity.isPlayerSleeping()) && this.theWorld.blockExists(MathHelper.floor_double(var7.posX), 0, MathHelper.floor_double(var7.posZ)))
+            	// END FCMOD
                 {
                     ++this.countEntitiesRendered;
                     RenderManager.instance.renderEntity(var7, par3);
@@ -565,6 +575,13 @@
      */
     public int sortAndRender(EntityLiving par1EntityLiving, int par2, double par3)
     {
+        if (!RenderPass.preRenderPass(RenderPassMap.map17To18(par2)))
+        {
+            return RenderPass.postRenderPass(0);
+        }
+        else
+        {
+            par2 = RenderPassMap.map18To17(par2);
         this.theWorld.theProfiler.startSection("sortchunks");
 
         for (int var5 = 0; var5 < 10; ++var5)
@@ -733,8 +750,9 @@
         }
 
         this.theWorld.theProfiler.endSection();
-        return var34;
+            return RenderPass.postRenderPass(var34);
     }
+    }
 
     private void checkOcclusionQueryResult(int par1, int par2)
     {
@@ -844,7 +862,7 @@
      */
     public void renderAllRenderLists(int par1, double par2)
     {
-        this.mc.entityRenderer.enableLightmap(par2);
+    	RenderPass.enableDisableLightmap(this.mc.entityRenderer, par2);
 
         for (int var4 = 0; var4 < this.allRenderLists.length; ++var4)
         {
@@ -880,6 +898,8 @@
      */
     public void renderSky(float par1)
     {
+    	SkyRenderer.setup(this.theWorld, par1, this.theWorld.getCelestialAngle(par1));
+    	
         if (this.mc.theWorld.provider.dimensionId == 1)
         {
             GL11.glDisable(GL11.GL_FOG);
@@ -921,7 +941,7 @@
                 }
 
                 var21.startDrawingQuads();
-                var21.setColorOpaque_I(2631720);
+                var21.setColorOpaque_I(ColorizeWorld.endSkyColor);
                 var21.addVertexWithUV(-100.0D, -100.0D, -100.0D, 0.0D, 0.0D);
                 var21.addVertexWithUV(-100.0D, -100.0D, 100.0D, 0.0D, 16.0D);
                 var21.addVertexWithUV(100.0D, -100.0D, 100.0D, 16.0D, 16.0D);
@@ -1022,9 +1042,10 @@
             GL11.glColor4f(1.0F, 1.0F, 1.0F, var8);
             GL11.glTranslatef(var9, var10, var11);
             GL11.glRotatef(-90.0F, 0.0F, 1.0F, 0.0F);
+            SkyRenderer.renderAll();
             GL11.glRotatef(this.theWorld.getCelestialAngle(par1) * 360.0F, 1.0F, 0.0F, 0.0F);
             var12 = 30.0F;
-            this.renderEngine.bindTexture("/environment/sun.png");
+            this.renderEngine.bindTexture(FakeResourceLocation.unwrap(SkyRenderer.setupCelestialObject(FakeResourceLocation.wrap("/environment/sun.png"))));
             var23.startDrawingQuads();
             var23.addVertexWithUV((double)(-var12), 100.0D, (double)(-var12), 0.0D, 0.0D);
             var23.addVertexWithUV((double)var12, 100.0D, (double)(-var12), 1.0D, 0.0D);
@@ -1032,14 +1053,14 @@
             var23.addVertexWithUV((double)(-var12), 100.0D, (double)var12, 0.0D, 1.0D);
             var23.draw();
             var12 = 20.0F;
-            this.renderEngine.bindTexture("/environment/moon_phases.png");
+            this.renderEngine.bindTexture(FakeResourceLocation.unwrap(SkyRenderer.setupCelestialObject(FakeResourceLocation.wrap("/environment/moon_phases.png"))));
             int var28 = this.theWorld.getMoonPhase();
-            int var29 = var28 % 4;
-            int var30 = var28 / 4 % 2;
-            float var16 = (float)(var29 + 0) / 4.0F;
-            float var17 = (float)(var30 + 0) / 2.0F;
-            float var18 = (float)(var29 + 1) / 4.0F;
-            float var19 = (float)(var30 + 1) / 2.0F;
+            int var30 = var28 % 4;
+            int var29 = var28 / 4 % 2;
+            float var16 = (float)(var30 + 0) / 4.0F;
+            float var17 = (float)(var29 + 0) / 2.0F;
+            float var18 = (float)(var30 + 1) / 4.0F;
+            float var19 = (float)(var29 + 1) / 2.0F;
             var23.startDrawingQuads();
             var23.addVertexWithUV((double)(-var12), -100.0D, (double)var12, (double)var18, (double)var19);
             var23.addVertexWithUV((double)var12, -100.0D, (double)var12, (double)var16, (double)var19);
@@ -1049,7 +1070,7 @@
             GL11.glDisable(GL11.GL_TEXTURE_2D);
             float var20 = this.theWorld.getStarBrightness(par1) * var8;
 
-            if (var20 > 0.0F)
+            if (var20 > 0.0F && !SkyRenderer.active)
             {
                 GL11.glColor4f(var20, var20, var20, var20);
                 GL11.glCallList(this.starGLCallList);
@@ -1108,7 +1129,7 @@
             }
 
             GL11.glPushMatrix();
-            GL11.glTranslatef(0.0F, -((float)(var25 - 16.0D)), 0.0F);
+            GL11.glTranslatef(0.0F, -((float)(var25 - SkyRenderer.horizonHeight)), 0.0F);
             GL11.glCallList(this.glSkyList2);
             GL11.glPopMatrix();
             GL11.glEnable(GL11.GL_TEXTURE_2D);
@@ -1120,7 +1141,7 @@
     {
         if (this.mc.theWorld.provider.isSurfaceWorld())
         {
-            if (this.mc.gameSettings.fancyGraphics)
+        	if (ColorizeWorld.drawFancyClouds(this.mc.gameSettings.fancyGraphics))
             {
                 this.renderCloudsFancy(par1);
             }
@@ -1217,8 +1238,8 @@
         float var17 = (float)var15.yCoord;
         float var18 = (float)var15.zCoord;
         float var19;
-        float var20;
         float var21;
+        float var20;
 
         if (this.mc.gameSettings.anaglyph)
         {
@@ -1587,7 +1608,13 @@
                         var19 = Block.stone;
                     }
 
+                    // FCMOD: Changed
+                    /*
                     this.globalRenderBlocks.renderBlockUsingTexture(var19, var11.getPartialBlockX(), var11.getPartialBlockY(), var11.getPartialBlockZ(), this.destroyBlockIcons[var11.getPartialBlockDamage()]);
+                    */
+                    var19.RenderBlockWithTexture( globalRenderBlocks, var11.getPartialBlockX(), var11.getPartialBlockY(), var11.getPartialBlockZ(), 
+                		destroyBlockIcons[var11.getPartialBlockDamage()] );
+                    // END FCMOD
                 }
             }
 
@@ -1620,11 +1647,17 @@
 
             if (var7 > 0)
             {
-                Block.blocksList[var7].setBlockBoundsBasedOnState(this.theWorld, par2MovingObjectPosition.blockX, par2MovingObjectPosition.blockY, par2MovingObjectPosition.blockZ);
+            	// FCMOD: Removed (client only)
+                //Block.blocksList[var7].setBlockBoundsBasedOnState(this.theWorld, par2MovingObjectPosition.blockX, par2MovingObjectPosition.blockY, par2MovingObjectPosition.blockZ);
+            	// END FCMOD
                 double var8 = par1EntityPlayer.lastTickPosX + (par1EntityPlayer.posX - par1EntityPlayer.lastTickPosX) * (double)par5;
                 double var10 = par1EntityPlayer.lastTickPosY + (par1EntityPlayer.posY - par1EntityPlayer.lastTickPosY) * (double)par5;
                 double var12 = par1EntityPlayer.lastTickPosZ + (par1EntityPlayer.posZ - par1EntityPlayer.lastTickPosZ) * (double)par5;
-                this.drawOutlinedBoundingBox(Block.blocksList[var7].getSelectedBoundingBoxFromPool(this.theWorld, par2MovingObjectPosition.blockX, par2MovingObjectPosition.blockY, par2MovingObjectPosition.blockZ).expand((double)var6, (double)var6, (double)var6).getOffsetBoundingBox(-var8, -var10, -var12));
+                // FCMOD: Changed (client only)
+                //this.drawOutlinedBoundingBox(Block.blocksList[var7].getSelectedBoundingBoxFromPool(this.theWorld, par2MovingObjectPosition.blockX, par2MovingObjectPosition.blockY, par2MovingObjectPosition.blockZ).expand((double)var6, (double)var6, (double)var6).getOffsetBoundingBox(-var8, -var10, -var12));
+            	drawOutlinedBoundingBox( Block.blocksList[var7].getSelectedBoundingBoxFromPool( theWorld, par2MovingObjectPosition ).
+                	expand((double)var6, (double)var6, (double)var6).getOffsetBoundingBox(-var8, -var10, -var12));
+                // END FCMOD
             }
 
             GL11.glDepthMask(true);
@@ -1821,21 +1854,32 @@
             double var15 = this.mc.renderViewEntity.posX - par2;
             double var17 = this.mc.renderViewEntity.posY - par4;
             double var19 = this.mc.renderViewEntity.posZ - par6;
-            EntityFX var21 = null;
+            Entity var21 = null;
 
             if (par1Str.equals("hugeexplosion"))
             {
-                this.mc.effectRenderer.addEffect(var21 = new EntityHugeExplodeFX(this.theWorld, par2, par4, par6, par8, par10, par12));
+                this.mc.effectRenderer.addEffect((EntityFX) (var21 = (EntityFX) EntityList.createEntityOfType(EntityHugeExplodeFX.class, this.theWorld, par2, par4, par6, par8, par10, par12)));
             }
             else if (par1Str.equals("largeexplode"))
             {
-                this.mc.effectRenderer.addEffect(var21 = new EntityLargeExplodeFX(this.renderEngine, this.theWorld, par2, par4, par6, par8, par10, par12));
+                this.mc.effectRenderer.addEffect((EntityFX) (var21 = (EntityFX) EntityList.createEntityOfType(EntityLargeExplodeFX.class, this.renderEngine, this.theWorld, par2, par4, par6, par8, par10, par12)));
             }
             else if (par1Str.equals("fireworksSpark"))
             {
-                this.mc.effectRenderer.addEffect(var21 = new EntityFireworkSparkFX(this.theWorld, par2, par4, par6, par8, par10, par12, this.mc.effectRenderer));
+                this.mc.effectRenderer.addEffect((EntityFX) (var21 = (EntityFX) EntityList.createEntityOfType(EntityFireworkSparkFX.class, this.theWorld, par2, par4, par6, par8, par10, par12, this.mc.effectRenderer)));
             }
+            // FCMOD: Added (client only)
+            else if ( par1Str.equals( "fccinders" ) )
+            {
+            	double dDistSqToPlayer = var15 * var15 + var17 * var17 + var19 * var19;
 
+            	if ( dDistSqToPlayer < 32D * 32D )
+            	{
+            		this.mc.effectRenderer.addEffect( (EntityFX) (var21 = (EntityFX) EntityList.createEntityOfType(FCClientEntityCindersFX.class, this.theWorld, par2, par4, par6)) );
+            	}
+            }
+            // END FCMOD
+
             if (var21 != null)
             {
                 return (EntityFX)var21;
@@ -1856,153 +1900,174 @@
                 {
                     if (par1Str.equals("bubble"))
                     {
-                        var21 = new EntityBubbleFX(this.theWorld, par2, par4, par6, par8, par10, par12);
+                        var21 = EntityList.createEntityOfType(EntityBubbleFX.class, this.theWorld, par2, par4, par6, par8, par10, par12);
                     }
                     else if (par1Str.equals("suspended"))
                     {
-                        var21 = new EntitySuspendFX(this.theWorld, par2, par4, par6, par8, par10, par12);
+                        var21 = EntityList.createEntityOfType(EntitySuspendFX.class, this.theWorld, par2, par4, par6, par8, par10, par12);
                     }
                     else if (par1Str.equals("depthsuspend"))
                     {
-                        var21 = new EntityAuraFX(this.theWorld, par2, par4, par6, par8, par10, par12);
+                        var21 = EntityList.createEntityOfType(EntityAuraFX.class, this.theWorld, par2, par4, par6, par8, par10, par12);
                     }
                     else if (par1Str.equals("townaura"))
                     {
-                        var21 = new EntityAuraFX(this.theWorld, par2, par4, par6, par8, par10, par12);
+                        var21 = EntityList.createEntityOfType(EntityAuraFX.class, this.theWorld, par2, par4, par6, par8, par10, par12);
                     }
                     else if (par1Str.equals("crit"))
                     {
-                        var21 = new EntityCritFX(this.theWorld, par2, par4, par6, par8, par10, par12);
+                        var21 = EntityList.createEntityOfType(EntityCritFX.class, this.theWorld, par2, par4, par6, par8, par10, par12);
                     }
                     else if (par1Str.equals("magicCrit"))
                     {
-                        var21 = new EntityCritFX(this.theWorld, par2, par4, par6, par8, par10, par12);
+                        var21 = EntityList.createEntityOfType(EntityCritFX.class, this.theWorld, par2, par4, par6, par8, par10, par12);
                         ((EntityFX)var21).setRBGColorF(((EntityFX)var21).getRedColorF() * 0.3F, ((EntityFX)var21).getGreenColorF() * 0.8F, ((EntityFX)var21).getBlueColorF());
                         ((EntityFX)var21).nextTextureIndexX();
                     }
                     else if (par1Str.equals("smoke"))
                     {
-                        var21 = new EntitySmokeFX(this.theWorld, par2, par4, par6, par8, par10, par12);
+                        var21 = EntityList.createEntityOfType(EntitySmokeFX.class, this.theWorld, par2, par4, par6, par8, par10, par12);
                     }
                     else if (par1Str.equals("mobSpell"))
                     {
-                        var21 = new EntitySpellParticleFX(this.theWorld, par2, par4, par6, 0.0D, 0.0D, 0.0D);
+                        var21 = EntityList.createEntityOfType(EntitySpellParticleFX.class, this.theWorld, par2, par4, par6, 0.0D, 0.0D, 0.0D);
                         ((EntityFX)var21).setRBGColorF((float)par8, (float)par10, (float)par12);
                     }
                     else if (par1Str.equals("mobSpellAmbient"))
                     {
-                        var21 = new EntitySpellParticleFX(this.theWorld, par2, par4, par6, 0.0D, 0.0D, 0.0D);
+                        var21 = EntityList.createEntityOfType(EntitySpellParticleFX.class, this.theWorld, par2, par4, par6, 0.0D, 0.0D, 0.0D);
                         ((EntityFX)var21).setAlphaF(0.15F);
                         ((EntityFX)var21).setRBGColorF((float)par8, (float)par10, (float)par12);
                     }
                     else if (par1Str.equals("spell"))
                     {
-                        var21 = new EntitySpellParticleFX(this.theWorld, par2, par4, par6, par8, par10, par12);
+                        var21 = EntityList.createEntityOfType(EntitySpellParticleFX.class, this.theWorld, par2, par4, par6, par8, par10, par12);
                     }
                     else if (par1Str.equals("instantSpell"))
                     {
-                        var21 = new EntitySpellParticleFX(this.theWorld, par2, par4, par6, par8, par10, par12);
+                        var21 = EntityList.createEntityOfType(EntitySpellParticleFX.class, this.theWorld, par2, par4, par6, par8, par10, par12);
                         ((EntitySpellParticleFX)var21).setBaseSpellTextureIndex(144);
                     }
                     else if (par1Str.equals("witchMagic"))
                     {
-                        var21 = new EntitySpellParticleFX(this.theWorld, par2, par4, par6, par8, par10, par12);
+                        var21 = EntityList.createEntityOfType(EntitySpellParticleFX.class, this.theWorld, par2, par4, par6, par8, par10, par12);
                         ((EntitySpellParticleFX)var21).setBaseSpellTextureIndex(144);
                         float var24 = this.theWorld.rand.nextFloat() * 0.5F + 0.35F;
                         ((EntityFX)var21).setRBGColorF(1.0F * var24, 0.0F * var24, 1.0F * var24);
                     }
                     else if (par1Str.equals("note"))
                     {
-                        var21 = new EntityNoteFX(this.theWorld, par2, par4, par6, par8, par10, par12);
+                        var21 = EntityList.createEntityOfType(EntityNoteFX.class, this.theWorld, par2, par4, par6, par8, par10, par12);
                     }
                     else if (par1Str.equals("portal"))
                     {
-                        var21 = new EntityPortalFX(this.theWorld, par2, par4, par6, par8, par10, par12);
+                        var21 = EntityList.createEntityOfType(EntityPortalFX.class, this.theWorld, par2, par4, par6, par8, par10, par12);
                     }
                     else if (par1Str.equals("enchantmenttable"))
                     {
-                        var21 = new EntityEnchantmentTableParticleFX(this.theWorld, par2, par4, par6, par8, par10, par12);
+                        var21 = EntityList.createEntityOfType(EntityEnchantmentTableParticleFX.class, this.theWorld, par2, par4, par6, par8, par10, par12);
                     }
                     else if (par1Str.equals("explode"))
                     {
-                        var21 = new EntityExplodeFX(this.theWorld, par2, par4, par6, par8, par10, par12);
+                        var21 = EntityList.createEntityOfType(EntityExplodeFX.class, this.theWorld, par2, par4, par6, par8, par10, par12);
                     }
                     else if (par1Str.equals("flame"))
                     {
-                        var21 = new EntityFlameFX(this.theWorld, par2, par4, par6, par8, par10, par12);
+                        var21 = EntityList.createEntityOfType(EntityFlameFX.class, this.theWorld, par2, par4, par6, par8, par10, par12);
                     }
                     else if (par1Str.equals("lava"))
                     {
-                        var21 = new EntityLavaFX(this.theWorld, par2, par4, par6);
+                        var21 = EntityList.createEntityOfType(EntityLavaFX.class, this.theWorld, par2, par4, par6);
                     }
                     else if (par1Str.equals("footstep"))
                     {
-                        var21 = new EntityFootStepFX(this.renderEngine, this.theWorld, par2, par4, par6);
+                        var21 = EntityList.createEntityOfType(EntityFootStepFX.class, this.renderEngine, this.theWorld, par2, par4, par6);
                     }
                     else if (par1Str.equals("splash"))
                     {
-                        var21 = new EntitySplashFX(this.theWorld, par2, par4, par6, par8, par10, par12);
+                        var21 = EntityList.createEntityOfType(EntitySplashFX.class, this.theWorld, par2, par4, par6, par8, par10, par12);
                     }
                     else if (par1Str.equals("largesmoke"))
                     {
-                        var21 = new EntitySmokeFX(this.theWorld, par2, par4, par6, par8, par10, par12, 2.5F);
+                        var21 = EntityList.createEntityOfType(EntitySmokeFX.class, this.theWorld, par2, par4, par6, par8, par10, par12, 2.5F);
                     }
                     else if (par1Str.equals("cloud"))
                     {
-                        var21 = new EntityCloudFX(this.theWorld, par2, par4, par6, par8, par10, par12);
+                        var21 = EntityList.createEntityOfType(EntityCloudFX.class, this.theWorld, par2, par4, par6, par8, par10, par12);
                     }
                     else if (par1Str.equals("reddust"))
                     {
-                        var21 = new EntityReddustFX(this.theWorld, par2, par4, par6, (float)par8, (float)par10, (float)par12);
+                        var21 = EntityList.createEntityOfType(EntityReddustFX.class, this.theWorld, par2, par4, par6, (float)par8, (float)par10, (float)par12);
                     }
                     else if (par1Str.equals("snowballpoof"))
                     {
-                        var21 = new EntityBreakingFX(this.theWorld, par2, par4, par6, Item.snowball, this.renderEngine);
+                        var21 = EntityList.createEntityOfType(EntityBreakingFX.class, this.theWorld, par2, par4, par6, Item.snowball, this.renderEngine);
                     }
                     else if (par1Str.equals("dripWater"))
                     {
-                        var21 = new EntityDropParticleFX(this.theWorld, par2, par4, par6, Material.water);
+                        var21 = EntityList.createEntityOfType(EntityDropParticleFX.class, this.theWorld, par2, par4, par6, Material.water);
                     }
                     else if (par1Str.equals("dripLava"))
                     {
-                        var21 = new EntityDropParticleFX(this.theWorld, par2, par4, par6, Material.lava);
+                        var21 = EntityList.createEntityOfType(EntityDropParticleFX.class, this.theWorld, par2, par4, par6, Material.lava);
                     }
                     else if (par1Str.equals("snowshovel"))
                     {
-                        var21 = new EntitySnowShovelFX(this.theWorld, par2, par4, par6, par8, par10, par12);
+                        var21 = EntityList.createEntityOfType(EntitySnowShovelFX.class, this.theWorld, par2, par4, par6, par8, par10, par12);
                     }
                     else if (par1Str.equals("slime"))
                     {
-                        var21 = new EntityBreakingFX(this.theWorld, par2, par4, par6, Item.slimeBall, this.renderEngine);
+                        var21 = EntityList.createEntityOfType(EntityBreakingFX.class, this.theWorld, par2, par4, par6, Item.slimeBall, this.renderEngine);
                     }
                     else if (par1Str.equals("heart"))
                     {
-                        var21 = new EntityHeartFX(this.theWorld, par2, par4, par6, par8, par10, par12);
+                        var21 = EntityList.createEntityOfType(EntityHeartFX.class, this.theWorld, par2, par4, par6, par8, par10, par12);
                     }
                     else if (par1Str.equals("angryVillager"))
                     {
-                        var21 = new EntityHeartFX(this.theWorld, par2, par4 + 0.5D, par6, par8, par10, par12);
+                        var21 = EntityList.createEntityOfType(EntityHeartFX.class, this.theWorld, par2, par4 + 0.5D, par6, par8, par10, par12);
                         ((EntityFX)var21).setParticleTextureIndex(81);
                         ((EntityFX)var21).setRBGColorF(1.0F, 1.0F, 1.0F);
                     }
                     else if (par1Str.equals("happyVillager"))
                     {
-                        var21 = new EntityAuraFX(this.theWorld, par2, par4, par6, par8, par10, par12);
+                        var21 = EntityList.createEntityOfType(EntityAuraFX.class, this.theWorld, par2, par4, par6, par8, par10, par12);
                         ((EntityFX)var21).setParticleTextureIndex(82);
                         ((EntityFX)var21).setRBGColorF(1.0F, 1.0F, 1.0F);
                     }
                     else if (par1Str.startsWith("iconcrack_"))
                     {
                         int var27 = Integer.parseInt(par1Str.substring(par1Str.indexOf("_") + 1));
-                        var21 = new EntityBreakingFX(this.theWorld, par2, par4, par6, par8, par10, par12, Item.itemsList[var27], this.renderEngine);
+                        var21 = EntityList.createEntityOfType(EntityBreakingFX.class, this.theWorld, par2, par4, par6, par8, par10, par12, Item.itemsList[var27], this.renderEngine);
                     }
                     else if (par1Str.startsWith("tilecrack_"))
                     {
                         String[] var28 = par1Str.split("_", 3);
                         int var25 = Integer.parseInt(var28[1]);
                         int var26 = Integer.parseInt(var28[2]);
-                        var21 = (new EntityDiggingFX(this.theWorld, par2, par4, par6, par8, par10, par12, Block.blocksList[var25], 0, var26, this.renderEngine)).applyRenderColor(var26);
+                        var21 = ((EntityDiggingFX) EntityList.createEntityOfType(EntityDiggingFX.class, this.theWorld, par2, par4, par6, par8, par10, par12, Block.blocksList[var25], 0, var26, this.renderEngine)).applyRenderColor(var26);
                     }
+                    // FCMOD: Added (client only)
+                    else if ( par1Str.equals( "fcwhitesmoke" ) )
+                    {
+                        var21 = EntityList.createEntityOfType(FCClientEntityWhiteSmokeFX.class, theWorld, par2, par4, par6, par8, par10, par12);
+                    }
+                    else if ( par1Str.equals( "fcwhitecloud" ) )
+                    {
+                        var21 = EntityList.createEntityOfType(FCClientEntityWhiteCloudFX.class, theWorld, par2, par4, par6, par8, par10, par12);
+                    }
+                    else if ( par1Str.equals( "fcsmallflame" ) )
+                    {
+                        var21 = EntityList.createEntityOfType(FCClientEntitySmallFlameFX.class, theWorld, par2, par4, par6, par8, par10, par12);
+                    }
+                    else if (par1Str.equals("dripBlood"))
+                    {
+                        var21 = EntityList.createEntityOfType(EntityDropParticleFX.class, this.theWorld, par2, par4, par6, FCBetterThanWolves.fcMaterialBlood, 5, 0.8F, 0.0F, 0.0F, 1.0F);
+                    }
+                    else {
+                    	var21 = FCAddOnHandler.spawnCustomParticle(this.theWorld, par1Str, par2, par4, par6, par8, par10, par12);
+                    }
+                    // END FCMOD
 
                     if (var21 != null)
                     {
@@ -2099,6 +2164,11 @@
                 }
 
             default:
+            	// FCMOD: Code added:            	
+            	FCAddOnHandler.ClientPlayCustomAuxFX( mc, theWorld, null, par1, par2, par3, par4, par5 );
+            	
+                break;
+                // END FCMOD
         }
     }
 
@@ -2196,6 +2266,10 @@
 
             case 1016:
                 this.theWorld.playSound((double)par3 + 0.5D, (double)par4 + 0.5D, (double)par5 + 0.5D, "mob.zombie.infect", 2.0F, (var7.nextFloat() - var7.nextFloat()) * 0.2F + 1.0F, false);
+                // FCMOD: Added extra slow zombie moan on infect villager
+                theWorld.playSound( (double)par3 + 0.5D, (double)par4 + 0.5D, (double)par5 + 0.5D, "mob.zombie.say", 
+                	1.0F + var7.nextFloat(), var7.nextFloat() * 0.2F + 0.5F, false );
+                // END FCMOD
                 break;
 
             case 1017:
@@ -2221,7 +2295,7 @@
                 var12 = (double)par4 + 0.5D;
                 double var34 = (double)par5 + (double)var9 * 0.6D + 0.5D;
 
-                for (int var36 = 0; var36 < 10; ++var36)
+                for (int var35 = 0; var35 < 10; ++var35)
                 {
                     double var37 = var7.nextDouble() * 0.2D + 0.01D;
                     double var38 = var10 + (double)var33 * 0.01D + (var7.nextDouble() - 0.5D) * (double)var9 * 0.5D;
@@ -2241,7 +2315,10 @@
                 if (var20 > 0)
                 {
                     Block var40 = Block.blocksList[var20];
-                    this.mc.sndManager.playSound(var40.stepSound.getBreakSound(), (float)par3 + 0.5F, (float)par4 + 0.5F, (float)par5 + 0.5F, (var40.stepSound.getVolume() + 1.0F) / 2.0F, var40.stepSound.getPitch() * 0.8F);
+                    
+                    StepSound stepSound = var40.GetStepSound(this.mc.thePlayer.worldObj, par3, par4, par5);
+                    
+                    this.mc.sndManager.playSound(stepSound.getBreakSound(), (float)par3 + 0.5F, (float)par4 + 0.5F, (float)par5 + 0.5F, (stepSound.getBreakVolume() + 1.0F) / 2.0F, stepSound.getBreakPitch() * 0.8F);
                 }
 
                 this.mc.effectRenderer.addBlockDestroyEffects(par3, par4, par5, par6 & 4095, par6 >> 12 & 255);
@@ -2300,10 +2377,10 @@
                     this.spawnParticle(var14, var8, var10, var12, var7.nextGaussian() * 0.15D, var7.nextDouble() * 0.2D, var7.nextGaussian() * 0.15D);
                 }
 
-                for (double var35 = 0.0D; var35 < (Math.PI * 2D); var35 += 0.15707963267948966D)
+                for (double var36 = 0.0D; var36 < (Math.PI * 2D); var36 += 0.15707963267948966D)
                 {
-                    this.spawnParticle("portal", var8 + Math.cos(var35) * 5.0D, var10 - 0.4D, var12 + Math.sin(var35) * 5.0D, Math.cos(var35) * -5.0D, 0.0D, Math.sin(var35) * -5.0D);
-                    this.spawnParticle("portal", var8 + Math.cos(var35) * 5.0D, var10 - 0.4D, var12 + Math.sin(var35) * 5.0D, Math.cos(var35) * -7.0D, 0.0D, Math.sin(var35) * -7.0D);
+                    this.spawnParticle("portal", var8 + Math.cos(var36) * 5.0D, var10 - 0.4D, var12 + Math.sin(var36) * 5.0D, Math.cos(var36) * -5.0D, 0.0D, Math.sin(var36) * -5.0D);
+                    this.spawnParticle("portal", var8 + Math.cos(var36) * 5.0D, var10 - 0.4D, var12 + Math.sin(var36) * 5.0D, Math.cos(var36) * -7.0D, 0.0D, Math.sin(var36) * -7.0D);
                 }
 
                 return;
@@ -2322,6 +2399,14 @@
 
             case 2005:
                 ItemDye.func_96603_a(this.theWorld, par3, par4, par5, par6);
+
+        	// FCMOD: Code added:
+            default:
+            	
+            	FCAddOnHandler.ClientPlayCustomAuxFX( mc, theWorld, par1EntityPlayer, par2, par3, par4, par5, par6 );
+            	
+                break;
+        	// END FCMOD
         }
     }
 
@@ -2359,4 +2444,16 @@
             this.destroyBlockIcons[var2] = par1IconRegister.registerIcon("destroy_" + var2);
         }
     }
+    
+    // FCMOD: Added
+    public Icon GetDestroyedBlockIcon( int iBlockDamage )
+    {
+    	if ( iBlockDamage >= 10 || iBlockDamage < 0 )
+    	{
+    		iBlockDamage = 0;
 }
+    	
+    	return destroyBlockIcons[iBlockDamage];
+    }
+    // END FCMOD
+}
