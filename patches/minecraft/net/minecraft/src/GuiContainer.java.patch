--- a/minecraft/net/minecraft/src/GuiContainer.java
+++ b/minecraft/net/minecraft/src/GuiContainer.java
@@ -109,16 +109,16 @@
 
         for (int var13 = 0; var13 < this.inventorySlots.inventorySlots.size(); ++var13)
         {
-            Slot var15 = (Slot)this.inventorySlots.inventorySlots.get(var13);
-            this.drawSlotInventory(var15);
+            Slot var14 = (Slot)this.inventorySlots.inventorySlots.get(var13);
+            this.drawSlotInventory(var14);
 
-            if (this.isMouseOverSlot(var15, par1, par2))
+            if (this.isMouseOverSlot(var14, par1, par2))
             {
-                this.theSlot = var15;
+                this.theSlot = var14;
                 GL11.glDisable(GL11.GL_LIGHTING);
                 GL11.glDisable(GL11.GL_DEPTH_TEST);
-                int var8 = var15.xDisplayPosition;
-                var9 = var15.yDisplayPosition;
+                int var8 = var14.xDisplayPosition;
+                var9 = var14.yDisplayPosition;
                 this.drawGradientRect(var8, var9, var8 + 16, var9 + 16, -2130706433, -2130706433);
                 GL11.glEnable(GL11.GL_LIGHTING);
                 GL11.glEnable(GL11.GL_DEPTH_TEST);
@@ -126,12 +126,12 @@
         }
 
         this.drawGuiContainerForegroundLayer(par1, par2);
-        InventoryPlayer var14 = this.mc.thePlayer.inventory;
-        ItemStack var16 = this.draggedStack == null ? var14.getItemStack() : this.draggedStack;
+        InventoryPlayer var15 = this.mc.thePlayer.inventory;
+        ItemStack var16 = this.draggedStack == null ? var15.getItemStack() : this.draggedStack;
 
         if (var16 != null)
         {
-            byte var17 = 8;
+            byte var18 = 8;
             var9 = this.draggedStack == null ? 8 : 16;
             String var10 = null;
 
@@ -151,29 +151,29 @@
                 }
             }
 
-            this.drawItemStack(var16, par1 - var4 - var17, par2 - var5 - var9, var10);
+            this.drawItemStack(var16, par1 - var4 - var18, par2 - var5 - var9, var10);
         }
 
         if (this.returningStack != null)
         {
-            float var18 = (float)(Minecraft.getSystemTime() - this.returningStackTime) / 100.0F;
+            float var17 = (float)(Minecraft.getSystemTime() - this.returningStackTime) / 100.0F;
 
-            if (var18 >= 1.0F)
+            if (var17 >= 1.0F)
             {
-                var18 = 1.0F;
+                var17 = 1.0F;
                 this.returningStack = null;
             }
 
             var9 = this.returningStackDestSlot.xDisplayPosition - this.field_85049_r;
             int var20 = this.returningStackDestSlot.yDisplayPosition - this.field_85048_s;
-            int var11 = this.field_85049_r + (int)((float)var9 * var18);
-            int var12 = this.field_85048_s + (int)((float)var20 * var18);
+            int var11 = this.field_85049_r + (int)((float)var9 * var17);
+            int var12 = this.field_85048_s + (int)((float)var20 * var17);
             this.drawItemStack(this.returningStack, var11, var12, (String)null);
         }
 
         GL11.glPopMatrix();
 
-        if (var14.getItemStack() == null && this.theSlot != null && this.theSlot.getHasStack())
+        if (var15.getItemStack() == null && this.theSlot != null && this.theSlot.getHasStack())
         {
             ItemStack var19 = this.theSlot.getStack();
             this.drawItemStackTooltip(var19, par1, par2);
@@ -386,7 +386,15 @@
             }
 
             GL11.glEnable(GL11.GL_DEPTH_TEST);
+            
+            // FCMOD: Changed (client only)
+            //itemRenderer.renderItemAndEffectIntoGUI(this.fontRenderer, this.mc.renderEngine, var4, var2, var3);
+            if ( !DrawSlotSpecialItems( par1Slot, var4 ) )
+            {
             itemRenderer.renderItemAndEffectIntoGUI(this.fontRenderer, this.mc.renderEngine, var4, var2, var3);
+            }
+            // END FCMOD
+            
             itemRenderer.renderItemOverlayIntoGUI(this.fontRenderer, this.mc.renderEngine, var4, var2, var3, var8);
         }
 
@@ -772,6 +780,7 @@
             par2 = par1Slot.slotNumber;
         }
 
+        // FCNOTE: par2 is slotnumber, par3 is hotkey num, par4 2 when this is called by checkHotbarKeys()
         this.mc.playerController.windowClick(this.inventorySlots.windowId, par2, par3, par4, this.mc.thePlayer);
     }
 
@@ -811,6 +820,7 @@
             {
                 if (par1 == 2 + var2)
                 {
+                	// FCNOTE: 2 in the last param is a command code for hotswapping items
                     this.handleMouseClick(this.theSlot, this.theSlot.slotNumber, var2, 2);
                     return true;
                 }
@@ -851,4 +861,58 @@
             this.mc.thePlayer.closeScreen();
         }
     }
+    
+    // FCMOD: Added (client only)
+    private boolean DrawSlotSpecialItems( Slot slot, ItemStack stack )
+    {
+    	if ( stack != null )
+    	{
+    		int iItemID = stack.getItem().itemID;
+    		
+	    	if ( !IsPlayerInventorySlot( slot ) )
+	    	{
+		        if ( iItemID == Item.pocketSundial.itemID )
+		        {
+		        	TextureClock.m_clockTexture.UpdateInert();
+		        	
+		        	itemRenderer.renderItemAndEffectIntoGUI( fontRenderer, mc.renderEngine, stack, slot.xDisplayPosition, slot.yDisplayPosition );
+		
+		        	TextureClock.m_clockTexture.updateAnimation();
+		        	
+		        	return true;
 }
+	    	}
+	    	else
+	    	{
+		        if ( iItemID == Item.compass.itemID )
+		        {
+		        	TextureCompass.compassTexture.UpdateActive();
+		        	
+		        	itemRenderer.renderItemAndEffectIntoGUI( fontRenderer, mc.renderEngine, stack, slot.xDisplayPosition, slot.yDisplayPosition );
+		
+		        	TextureCompass.compassTexture.UpdateInert();
+		        	
+		        	return true;
+		        }
+	    	}
+    	}
+        
+        return false;
+    }
+    
+    private boolean IsPlayerInventorySlot( Slot slot )
+    {
+    	if ( mc.thePlayer.inventory == slot.inventory )
+    	{
+    		return true;
+    	}
+    	
+    	return false;
+    }
+
+    static public boolean InstallationIntegrityTest()
+    {
+    	return true;
+    }
+    // END FCMOD
+}
