--- /dev/null
+++ b/minecraft/net/minecraft/src/FCBlockFarmland.java
@@ -0,0 +1,277 @@
+// FCMOD
+
+package net.minecraft.src;
+
+import java.util.Random;
+
+public class FCBlockFarmland extends FCBlockFarmlandBase
+{
+    public static final int m_iLightLevelForWeedGrowth = 11;
+
+    protected FCBlockFarmland( int iBlockID )
+    {
+    	super( iBlockID );    	
+        
+        setUnlocalizedName( "fcBlockFarmlandNew" );
+        
+        setCreativeTab(CreativeTabs.tabDecorations);
+    }
+    
+    @Override
+    public void onNeighborBlockChange( World world, int i, int j, int k, int iNeighborBlockID )
+    {
+        super.onNeighborBlockChange( world, i, j, k, iNeighborBlockID );
+        
+        if ( world.getBlockMaterial( i, j + 1, k ).isSolid() || 
+        	CanFallIntoBlockAtPos( world, i, j - 1, k ) )
+        {
+            world.setBlockWithNotify( i, j, k, FCBetterThanWolves.fcBlockDirtLoose.blockID );
+        }
+        else if ( GetWeedsGrowthLevel( world, i, j, k ) > 0 && 
+        	!CanWeedsShareSpaceWithBlockAt( world, i, j + 1, k ) )
+        {
+        	// the weeds we had above us are no longer possible
+        	
+			SetWeedsGrowthLevel( world, i, j, k, 0 );
+        }
+    }
+
+	@Override
+    public void updateTick( World world, int i, int j, int k, Random rand )
+    {
+		super.updateTick( world, i, j, k, rand );
+		
+		if ( world.getBlockId( i, j, k ) == blockID ) // super can destroy block
+		{
+			if ( !CheckForSnowReversion( world, i, j, k, rand ) )
+			{
+				UpdateWeedGrowth( world, i, j, k, rand );
+			}
+		}			
+    }
+	
+    @Override
+	public void NotifyOfPlantAboveRemoved( World world, int i, int j, int k, Block plantBlock )
+	{
+    	// don't untill on weed growth
+    	
+    	if ( world.getBlockId( i, j + 1, k ) != Block.tallGrass.blockID )
+    	{
+    		world.setBlockWithNotify( i, j, k, FCBetterThanWolves.fcBlockDirtLoose.blockID );
+    	}
+	}
+	
+    @Override
+    protected boolean IsHydrated( int iMetadata )
+    {
+    	// stores decreasing levels of hydration from 3 to 1
+    	
+    	return ( iMetadata & 1 ) > 0;
+    }
+    
+    @Override
+    protected int SetFullyHydrated( int iMetadata )
+    {
+    	return iMetadata | 1;
+    }
+    
+	@Override
+	protected void DryIncrementally( World world, int i, int j, int k )
+	{
+		int iMetadata = world.getBlockMetadata( i, j, k );
+        int iHydrationLevel = iMetadata & 1;
+        
+        if ( iHydrationLevel > 0 )
+        {
+        	iMetadata &= (~1);
+        	
+            world.setBlockMetadataWithNotify( i, j, k, iMetadata );
+        }
+	}
+
+	@Override
+    protected boolean IsFertilized( IBlockAccess blockAccess, int i, int j, int k )
+	{
+		return false;
+	}
+    
+	@Override
+    protected void SetFertilized( World world, int i, int j, int k )
+    {
+    	int iTargetBlockMetadata = world.getBlockMetadata( i, j, k );
+    	
+    	world.setBlockAndMetadataWithNotify( i, j, k, 
+    		FCBetterThanWolves.fcBlockFarmlandFertilized.blockID, iTargetBlockMetadata );
+    }
+    
+	@Override
+	public int GetWeedsGrowthLevel( IBlockAccess blockAccess, int i, int j, int k )
+	{
+		return GetWeedsGrowthLevel( blockAccess.getBlockMetadata( i, j, k ) );
+	}
+	
+	@Override
+	public void RemoveWeeds( World world, int i, int j, int k )
+	{
+		SetWeedsGrowthLevel( world, i, j, k, 0 );
+	}
+	
+	@Override
+	protected void CheckForSoilReversion( World world, int i, int j, int k )
+	{
+		// slow down soil reversion since we don't have the metadata fidelity of vanilla
+		// tilledEarth
+		
+		if ( world.rand.nextInt( 8 ) == 0 )
+		{
+			super.CheckForSoilReversion( world, i, j, k );
+		}
+	}
+	
+	@Override
+    protected int GetHorizontalHydrationRange( World world, int i, int j, int k )
+    {
+        BiomeGenBase biome = world.getBiomeGenForCoords( i, k );
+        
+        if ( biome.getEnableSnow() || biome.CanRainInBiome() )
+        {
+        	return 4;
+        }
+        
+        return 2;
+    }
+    
+    //------------- Class Specific Methods ------------//
+    
+	public boolean CanWeedsShareSpaceWithBlockAt( World world, int i, int j, int k )
+	{
+		Block block = Block.blocksList[world.getBlockId( i, j, k )];
+		
+		if ( block != null )
+		{
+			return block.CanWeedsGrowInBlock( world, i, j, k );
+		}
+		
+		return false;
+	}
+
+	protected int GetWeedsGrowthLevel( int iMetadata )
+	{
+		return ( iMetadata & 14 ) >> 1;
+	}
+	
+	protected void SetWeedsGrowthLevel( World world, int i, int j, int k, int iGrowthLevel )
+	{
+		int iMetadata = SetWeedsGrowthLevel( world.getBlockMetadata( i, j, k ), iGrowthLevel );
+		
+		world.setBlockMetadataWithNotify( i, j, k, iMetadata );
+	}
+	
+	protected int SetWeedsGrowthLevel( int iMetadata, int iGrowthLevel )
+	{
+		iMetadata &= (~14); // filter out old level
+		
+		return iMetadata | ( iGrowthLevel << 1 );
+	}
+
+	/**
+	 * Returns true if the block has been reverted to loose dirt
+	 */
+    public boolean CheckForSnowReversion( World world, int i, int j, int k, Random rand )
+    {
+    	if ( world.IsSnowingAtPos( i, j + 1, k ) && rand.nextInt( 2 ) == 0 )
+    	{
+    		if ( world.getSavedLightValue( EnumSkyBlock.Block, i, j + 1, k ) < 10  )
+    		{
+	    		world.setBlockWithNotify( i, j, k, FCBetterThanWolves.fcBlockDirtLoose.blockID );
+	    		
+	    		if ( Block.snow.canPlaceBlockAt( world, i, j + 1, k ) )
+	    		{
+	    			world.setBlockWithNotify( i, j + 1, k, Block.snow.blockID );
+	    		}
+    		}
+    		
+    		return true;
+    	}
+    	
+    	return false;
+    }
+    
+    public void UpdateWeedGrowth( World world, int i, int j, int k, Random rand )
+    {
+		if ( world.getBlockId( i, j, k ) == blockID )
+		{
+			int iWeedsLevel = GetWeedsGrowthLevel( world, i, j, k );
+	        int iTimeOfDay = (int)( world.worldInfo.getWorldTime() % 24000L );
+			
+			if ( world.isAirBlock( i, j + 1, k ) )
+			{
+		        if ( iTimeOfDay > 14000 && iTimeOfDay < 22000 )
+		        {
+		        	// night
+		        	
+	        		if ( rand.nextInt( 20 ) == 0 && 
+	        			world.GetBlockNaturalLightValueMaximum( i, j + 1, k ) >= 
+        				m_iLightLevelForWeedGrowth )
+	        		{
+	        			// only start to grow on empty earth if there's potential for natural light
+	        			// to avoid weirdness with weeds popping up deep underground and such
+	        			
+		        		world.setBlockWithNotify( i, j + 1, k, 
+		        			FCBetterThanWolves.fcBlockWeeds.blockID ); 
+		        		
+		        		SetWeedsGrowthLevel( world, i, j, k, 1 );
+	        		}
+		        }
+			}
+			else if ( CanWeedsShareSpaceWithBlockAt( world, i, j + 1, k ) )
+			{
+		        if ( iTimeOfDay > 14000 && iTimeOfDay < 22000 )
+		        {
+		        	// night
+		        	
+		        	if ( iWeedsLevel == 0  )
+		        	{
+		        		if ( rand.nextInt( 20 ) == 0 )
+		        		{
+			        		SetWeedsGrowthLevel( world, i, j, k, 1 );
+		        		}
+		        	}
+		        	else if ( iWeedsLevel % 2 == 0 )
+		        	{
+		        		// weeds are only allowed to grow one stage per day, so this flags
+		        		// them for the next day's growth.
+		        		
+		        		SetWeedsGrowthLevel( world, i, j, k, iWeedsLevel + 1 );
+		        	}
+		        }
+		        else
+		        {
+		        	// day(ish)
+		        	
+		        	if ( world.GetBlockNaturalLightValue( i, j + 1, k ) >= 
+		        		m_iLightLevelForWeedGrowth )
+		        	{
+			        	if ( iWeedsLevel == 7 )
+			        	{
+			        		SetWeedsGrowthLevel( world, i, j, k, 0 );
+	
+			        		world.setBlockAndMetadataWithNotify( i, j + 1, k, Block.tallGrass.blockID, 
+			        			1 );
+			        	}
+			        	else if ( iWeedsLevel % 2 == 1 )
+			        	{
+			        		SetWeedsGrowthLevel( world, i, j, k, iWeedsLevel + 1 );
+			        	}
+		        	}
+		        }
+			}
+			else if ( iWeedsLevel > 0 )
+			{
+				SetWeedsGrowthLevel( world, i, j, k, 0 );
+			}
+		}
+    }
+    
+	//----------- Client Side Functionality -----------//
+}
