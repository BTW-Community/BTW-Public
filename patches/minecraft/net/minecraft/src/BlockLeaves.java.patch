--- a/minecraft/net/minecraft/src/BlockLeaves.java
+++ b/minecraft/net/minecraft/src/BlockLeaves.java
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import com.prupe.mcpatcher.cc.ColorizeBlock;
 import java.util.List;
 import java.util.Random;
 
@@ -20,17 +21,24 @@
 
     public int getBlockColor()
     {
+    	if (ColorizeBlock.colorizeBlock(this))
+        {
+            return ColorizeBlock.blockColor;
+        }
+        else
+        {
         double var1 = 0.5D;
         double var3 = 1.0D;
         return ColorizerFoliage.getFoliageColor(var1, var3);
     }
+    }
 
     /**
      * Returns the color this block should be rendered. Used by leaves.
      */
     public int getRenderColor(int par1)
     {
-        return (par1 & 3) == 1 ? ColorizerFoliage.getFoliageColorPine() : ((par1 & 3) == 2 ? ColorizerFoliage.getFoliageColorBirch() : ColorizerFoliage.getFoliageColorBasic());
+    	return ColorizeBlock.colorizeBlock(this, par1) ? ColorizeBlock.blockColor : ((par1 & 3) == 1 ? ColorizerFoliage.getFoliageColorPine() : ((par1 & 3) == 2 ? ColorizerFoliage.getFoliageColorBirch() : ColorizerFoliage.getFoliageColorBasic()));
     }
 
     /**
@@ -39,6 +47,12 @@
      */
     public int colorMultiplier(IBlockAccess par1IBlockAccess, int par2, int par3, int par4)
     {
+    	if (ColorizeBlock.colorizeBlock(this, par1IBlockAccess, par2, par3, par4))
+        {
+    		return ColorizeBlock.blockColor;
+        }
+        else
+        {
         int var5 = par1IBlockAccess.getBlockMetadata(par2, par3, par4);
 
         if ((var5 & 3) == 1)
@@ -69,6 +83,7 @@
             return (var6 / 9 & 255) << 16 | (var7 / 9 & 255) << 8 | var8 / 9 & 255;
         }
     }
+    }
 
     /**
      * ejects contained items into the world, and notifies neighbours of an update, as appropriate
@@ -304,7 +319,7 @@
      */
     public void harvestBlock(World par1World, EntityPlayer par2EntityPlayer, int par3, int par4, int par5, int par6)
     {
-        if (!par1World.isRemote && par2EntityPlayer.getCurrentEquippedItem() != null && par2EntityPlayer.getCurrentEquippedItem().itemID == Item.shears.itemID)
+        if (!par1World.isRemote && par2EntityPlayer.getCurrentEquippedItem() != null && par2EntityPlayer.getCurrentEquippedItem().getItem() instanceof FCItemShears)
         {
             par2EntityPlayer.addStat(StatList.mineBlockStatArray[this.blockID], 1);
             this.dropBlockAsItem_do(par1World, par3, par4, par5, new ItemStack(Block.leaves.blockID, 1, par6 & 3));
