--- a/minecraft/net/minecraft/src/MerchantRecipe.java
+++ b/minecraft/net/minecraft/src/MerchantRecipe.java
@@ -19,6 +19,8 @@
     /** Maximum times this trade can be used. */
     private int maxTradeUses;
 
+    private boolean isMandatory;
+
     public MerchantRecipe(NBTTagCompound par1NBTTagCompound)
     {
         this.readFromTags(par1NBTTagCompound);
@@ -29,7 +31,13 @@
         this.itemToBuy = par1ItemStack;
         this.secondItemToBuy = par2ItemStack;
         this.itemToSell = par3ItemStack;
+        // FCMOD: Change
+        /*
         this.maxTradeUses = 7;
+        */
+        maxTradeUses = 1;
+        m_iTradeLevel = 1;
+        // END FCMOD
     }
 
     public MerchantRecipe(ItemStack par1ItemStack, ItemStack par2ItemStack)
@@ -133,9 +141,25 @@
         }
         else
         {
+            // FCMOD: Change
+            /*
             this.maxTradeUses = 7;
+            */
+        	maxTradeUses = 1;
+        	// END FCMOD
         }
+        
+        // FCMOD: Added
+        if ( par1NBTTagCompound.hasKey( "fcTradeLevel" ) )
+        {
+            m_iTradeLevel = par1NBTTagCompound.getInteger("fcTradeLevel");
     }
+        else
+        {
+        	m_iTradeLevel = 1;
+        }
+        // END FCMOD
+    }
 
     public NBTTagCompound writeToTags()
     {
@@ -150,6 +174,40 @@
 
         var1.setInteger("uses", this.toolUses);
         var1.setInteger("maxUses", this.maxTradeUses);
+        
+        // FCMOD: Added
+        var1.setInteger( "fcTradeLevel", m_iTradeLevel );
+        // END FCMOD
+        
         return var1;
     }
+    
+    // FCMOD: Added
+    public int m_iTradeLevel;    
+    
+    public MerchantRecipe( ItemStack inputStack1, ItemStack inputStack2, ItemStack outputStack, int iTradeLevel )
+    {
+        this( inputStack1, inputStack2, outputStack );
+        
+        m_iTradeLevel = iTradeLevel;
 }
+    
+    public MerchantRecipe( ItemStack inputStack, ItemStack outputStack, int iTradeLevel )
+    {
+        this( inputStack, (ItemStack)null, outputStack, iTradeLevel );
+    }
+
+    public MerchantRecipe( ItemStack inputStack, Item outputItem, int iTradeLevel )
+    {
+        this( inputStack, new ItemStack( outputItem ), iTradeLevel );
+    }
+
+    public boolean isMandatory() {
+		return isMandatory;
+	}
+
+	public void setMandatory() {
+		this.isMandatory = true;
+	}
+    // END FCMOD
+}
\ No newline at end of file
